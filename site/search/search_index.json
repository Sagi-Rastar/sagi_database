{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u6b22\u8fce","text":"<p>\u6b22\u8fce\u6765\u5230\u6211\u7684\u4e2a\u4eba\u7b14\u8bb0\u5e93\uff0c\u8fd9\u91cc\u65e8\u5728\u59a5\u5584\u7ba1\u7406\u6211\u5e73\u65e5\u91cc\u6240\u79ef\u7d2f\u7684\u5404\u7c7b\u6280\u672f\u76f8\u5173\u7b14\u8bb0\u3001\u53c2\u8003\u6587\u6863\u4ee5\u53ca\u9700\u8981\u53cd\u590d\u67e5\u9605\u7684\u5185\u5bb9\u3002</p> <p>\u7b14\u8bb0\u5e93\u4f1a\u8f83\u4e3a\u6742\u4e71\uff0c\u4e0d\u5b9a\u671f\u8fdb\u884c\u66f4\u65b0\u4e0e\u6574\u7406\uff0c\u5927\u81f4\u5206\u4e3a\u4ee5\u4e0b GRID \u4e2d\u7684\u51e0\u4e2a\u5927\u7c7b\u3002</p> <p>\u5404\u79cd\u5c0f\u7c7b\u5c06\u4f1a\u4ee5Tag\u7684\u5f62\u5f0f\u8fdb\u884c\u6807\u6ce8\uff0c\u65b9\u4fbf\u67e5\u627e\u3002</p> <ul> <li> Cs - \u8ba1\u7b97\u673a\u79d1\u5b66\u76f8\u5173\u7b14\u8bb0</li> <li> Embedded - \u5d4c\u5165\u5f0f\u76f8\u5173\u7b14\u8bb0</li> <li> Ref - \u8f83\u4e3a\u7cfb\u7edf\u7684\u5404\u7c7b\u5927\u6bb5\u53c2\u8003\u8d44\u6599</li> <li> Web - \u7f51\u9875\u5f00\u53d1\u76f8\u5173\u7b14\u8bb0</li> </ul>"},{"location":"#change-log","title":"Change log","text":"2024-12-05\u00b6 <p>  [ Embedded ] &gt; ESP32&amp;FreeRTOS\u7b14\u8bb0\u4e0e\u82e5\u5e72\u914d\u7f6e</p> <p>  [ Ref ] &gt; FreeRTOS_API_Reference_CN_\u5168\u672c</p> 2024-11-28\u00b6 <p>  [ Embedded ] &gt; JLINK\u8c03\u8bd5\u76f8\u5173\u6280\u5de7</p> 2024-11-24\u00b6 <p>  [ Embedded ] &gt; ESP32Light\u5f00\u53d1\u6587\u6863</p> 2024-10-10\u00b6 <p>  [ Embedded ] &gt; \u786c\u4ef6\u8bbe\u8ba1\u76f8\u5173\u77e5\u8bc6</p> 2024-09-24\u00b6 <p>  [ Embedded ] &gt; \u901a\u8baf\u534f\u8bae\u603b\u7ed3</p> 2024-09-23\u00b6 <p>  [ CS ] &gt; C\u8bed\u8a00\u81ea\u7f16\u5c0f\u6a21\u5757\u7b14\u8bb0</p> <p>  [ Embedded ] &gt; STM32 \u6742\u9879\u77e5\u8bc6\u70b9</p> 2024-09-18\u00b6 <p>  [ CS ] &gt; C\u8bed\u8a00\u516b\u80a1</p> 2024-09-05\u00b6 <p>  [ CS ] &gt; C\u8bed\u8a00\u8bed\u6cd5\u7279\u6027</p> <p>  [ Embedded ] &gt; \u66f4\u65b0storage\u4ee5\u53camqtt\u6a21\u5757\u90e8\u5206\uff0c\u9010\u6b65\u5b9e\u73b0\u79c1\u6709json\u534f\u8bae</p> 2024-08-30\u00b6 <p>  [ Embedded ] &gt; \u5404\u79cd\u901a\u7528\u4e32\u53e3\u603b\u7ebf\u6807\u51c6</p> <p>  [ Embedded ] &gt; \u7f3a\u9677\u68c0\u6d4b\u5149\u6e90\u63a7\u5236\u5668\u5f00\u53d1\u7b14\u8bb0</p> 2024-08-29\u00b6 <p>  [ CS ] &gt; python\u64cd\u4f5c\u4e32\u53e3</p> 2024-08-23\u00b6 <p>  [ Web ] &gt; HTTPS\u4e0eOpenSSL</p> 2024-08-22\u00b6 <p>  [ Embedded ] &gt; ESP32\u5206\u533a\u8868\u53caOTA</p> 2024-08-20\u00b6 <p>  [ Embedded ] &gt; SolidWorks\u5f00\u87ba\u7eb9\u5b54</p> 2024-08-18\u00b6 <p>  [ Embedded ] &gt; \u84dd\u7259\u914d\u7f51\u4ee5\u53casoftAP\u65b9\u5f0f\u914d\u7f51\u63a2\u7d22</p> 2024-08-14\u00b6 <p>  [ Embedded ] &gt; CubeMX+FreeRTOS\u5f00\u53d1\u7b14\u8bb0</p> 2024-07-19\u00b6 <p>  [ Embedded ] &gt; LEDPWM\u53ca\u5e38\u7528\u6307\u793a\u51fd\u6570\u5c01\u88c5</p> 2024-07-16\u00b6 <p>  [ CS ] &gt; \u5185\u5b58\u7ba1\u7406</p> 2024-06-26\u00b6 <p>  [ Embedded ] &gt; BM8563 \u9a71\u52a8\u79fb\u690d\uff0cIDF-I2C \u7b14\u8bb0</p> 2024-06-25\u00b6 <p>  [ Embedded ] &gt; \u5361\u5173\u7cfb\u5b58\u50a8\u8bbe\u8ba1</p> 2024-06-19\u00b6 <p>  [ Embedded ] &gt; \u84dd\u7259\u5f00\u53d1</p> 2024-06-18\u00b6 <p>  [ Embedded ] &gt; SNTP \u83b7\u53d6\u65f6\u95f4\u3001AES \u52a0\u5bc6</p> 2024-06-17\u00b6 <p>  [ Embedded ] &gt; IDF \u7684\u4e8b\u4ef6\u5faa\u73af\uff0c\u53ca wifi \u8fd0\u884c\u6d41\u7a0b</p> 2024-06-15\u00b6 <p>  [ Embedded ] &gt; smartconfig\u914d\u7f51</p> 2024-06-03\u00b6 <p>  [ Embedded ] &gt; \u97e6\u6839\u534f\u8baeWiegand</p>"},{"location":"_CS/","title":"Index","text":""},{"location":"_CS/#timeline","title":"Timeline","text":"2024-09-23\u00b6 <p>  [ CS ] &gt; C\u8bed\u8a00\u81ea\u7f16\u5c0f\u6a21\u5757\u7b14\u8bb0</p> 2024-09-18\u00b6 <p>  [ CS ] &gt; C\u8bed\u8a00\u516b\u80a1</p> 2024-09-05\u00b6 <p>  [ CS ] &gt; C\u8bed\u8a00\u8bed\u6cd5\u7279\u6027</p> 2024-08-29\u00b6 <p>  [ CS ] &gt; python\u64cd\u4f5c\u4e32\u53e3</p> 2024-07-16\u00b6 <p>  [ CS ] &gt; \u5185\u5b58\u7ba1\u7406</p>"},{"location":"_CS/240716-%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/","title":"240716-\u5185\u5b58\u7ba1\u7406","text":""},{"location":"_CS/240829-python%E6%93%8D%E4%BD%9C%E4%B8%B2%E5%8F%A3/","title":"240829-python \u64cd\u4f5c\u4e32\u53e3","text":""},{"location":"_CS/240905-C%E8%AF%AD%E8%A8%80%E8%AF%AD%E6%B3%95%E7%89%B9%E6%80%A7/","title":"240905-C\u8bed\u8a00\u8bed\u6cd5\u7279\u6027","text":""},{"location":"_CS/240905-C%E8%AF%AD%E8%A8%80%E8%AF%AD%E6%B3%95%E7%89%B9%E6%80%A7/#1","title":"1 \u590d\u5408\u5b57\u9762\u91cf","text":"<p>\u590d\u5408\u5b57\u9762\u91cf\uff08Compound Literals\uff09\u662f C99 \u6807\u51c6\u5f15\u5165\u7684\u4e00\u4e2a\u7279\u6027\uff0c\u5b83\u5141\u8bb8\u4f60\u5728\u8868\u8fbe\u5f0f\u4e2d\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4\u6216\u7ed3\u6784\u4f53\uff0c\u5e76\u4e14\u53ef\u4ee5\u7acb\u5373\u4f7f\u7528\u3002\u590d\u5408\u5b57\u9762\u91cf\u7684\u8bed\u6cd5\u662f\uff1a<code>(type){ initializer-list }</code>\u3002</p> <p>\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5982\u4e0b\u4e4b\u524d\u65b0\u5199\u7684\u51fd\u6570\uff1a</p> <pre><code>debug_print_array(\"My Array\", UINT8, (Data){.uint8=5}, UINT8_ARRAY, (Data){.uint8_array=(uint8_t[]){1, 2, 3, 4, 5}}, 0, 5);\n</code></pre> <p>\u5bf9\u4e8e <code>(Data){.uint8=5}</code> \u4ee5\u53ca <code>(Data){.uint8_array=(uint8_t[]){1, 2, 3, 4, 5}}</code> \u5c31\u4f7f\u7528\u4e86\u590d\u5408\u5b57\u9762\u91cf\u7684\u7279\u6027\uff0c\u5728\u8c03\u7528 <code>debug_print_array</code> \u7684\u5f62\u53c2\u8868\u8fbe\u5f0f\u4e2d\u521b\u5efa\u4e86 <code>Data</code> \u7ed3\u6784\u4f53\uff0c\u5e76\u7acb\u5373\u521d\u59cb\u5316\u3002</p> <p>\u53e6\u5916\uff0c\u590d\u5408\u5b57\u9762\u91cf\u7684\u751f\u547d\u5468\u671f\u548c\u5176\u6240\u5728\u7684\u4f5c\u7528\u57df\u4fdd\u6301\u4e00\u81f4\u3002</p> <p>\u590d\u5408\u5b57\u9762\u91cf\uff08Compound Literals\uff09\u8fd9\u4e2a\u540d\u5b57\u6765\u81ea\u4e8e\u5b83\u7684\u6784\u6210\u3002\u5728 C \u8bed\u8a00\u4e2d\uff0c\"\u590d\u5408\"\uff08Compound\uff09\u901a\u5e38\u6307\u7684\u662f\u7531\u591a\u4e2a\u90e8\u5206\u7ec4\u6210\u7684\u6570\u636e\u7c7b\u578b\uff0c\u4f8b\u5982\u7ed3\u6784\u4f53\uff08Structures\uff09\u548c\u6570\u7ec4\uff08Arrays\uff09\u3002\"\u5b57\u9762\u91cf\"\uff08Literals\uff09\u5219\u662f\u6e90\u4ee3\u7801\u4e2d\u8868\u793a\u503c\u7684\u56fa\u5b9a\u8868\u793a\u6cd5\uff0c\u4f8b\u5982\u00a0<code>123</code>\u00a0\u662f\u4e00\u4e2a\u6574\u6570\u5b57\u9762\u91cf\uff0c<code>\"hello\"</code>\u00a0\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u3002</p> <p>\u56e0\u6b64\uff0c\"\u590d\u5408\u5b57\u9762\u91cf\"\u5c31\u662f\u4e00\u4e2a\u7531\u591a\u4e2a\u90e8\u5206\u7ec4\u6210\u7684\u5b57\u9762\u91cf\uff0c\u5b83\u53ef\u4ee5\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\u5b57\u9762\u91cf\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u6570\u7ec4\u5b57\u9762\u91cf\u3002\u4f8b\u5982\uff0c<code>(struct {int x; int y;}){1, 2}</code>\u00a0\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\u5b57\u9762\u91cf\uff0c<code>(int[]){1, 2, 3}</code>\u00a0\u662f\u4e00\u4e2a\u6570\u7ec4\u5b57\u9762\u91cf\u3002\u8fd9\u4e9b\u90fd\u662f\u590d\u5408\u5b57\u9762\u91cf\u7684\u4f8b\u5b50\u3002</p>"},{"location":"_CS/240905-C%E8%AF%AD%E8%A8%80%E8%AF%AD%E6%B3%95%E7%89%B9%E6%80%A7/#2","title":"2 \u6cdb\u578b\u9009\u62e9\u5668","text":"<p>\u5728 C11 \u6807\u51c6\u4e2d\uff0c<code>_Generic()</code> \u662f\u4e00\u4e2a\u5173\u952e\u5b57\uff0c\u5b83\u88ab\u5f15\u5165\u4f5c\u4e3a\u4e00\u79cd\u7c7b\u578b\u5b89\u5168\u7684\u7f16\u8bd1\u65f6\u9009\u62e9\u673a\u5236\u3002\u5b83\u5141\u8bb8\u7a0b\u5e8f\u5458\u57fa\u4e8e\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u6765\u9009\u62e9\u4e0d\u540c\u7684\u51fd\u6570\u6216\u4ee3\u7801\u5757\u6267\u884c\u3002\u8fd9\u5728\u5904\u7406\u591a\u79cd\u6570\u636e\u7c7b\u578b\u65f6\u975e\u5e38\u6709\u7528\uff0c\u53ef\u4ee5\u51cf\u5c11\u4ee3\u7801\u7684\u91cd\u590d\uff0c\u5e76\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\u3002</p>"},{"location":"_CS/240905-C%E8%AF%AD%E8%A8%80%E8%AF%AD%E6%B3%95%E7%89%B9%E6%80%A7/#21","title":"2.1 \u8bed\u6cd5","text":"<p><code>_Generic()</code> \u9009\u62e9\u5668\u7684\u57fa\u672c\u8bed\u6cd5\u5982\u4e0b\uff1a</p> <pre><code>_Generic((expr), type1: val1, type2: val2, ..., default: val_default)\n</code></pre> <ul> <li><code>expr</code> \u662f\u8981\u68c0\u67e5\u7c7b\u578b\u7684\u8868\u8fbe\u5f0f\u3002</li> <li><code>type1</code>, <code>type2</code>, ... \u662f <code>expr</code> \u53ef\u80fd\u7684\u7c7b\u578b\u3002</li> <li><code>val1</code>, <code>val2</code>, ... \u662f\u5f53 <code>expr</code> \u5206\u522b\u5339\u914d <code>type1</code>, <code>type2</code>, ... \u65f6\u8fd4\u56de\u7684\u503c\u6216\u6267\u884c\u7684\u4ee3\u7801\u5757\u3002</li> <li><code>default</code> \u662f\u5f53 <code>expr</code> \u4e0d\u5339\u914d\u4efb\u4f55\u6307\u5b9a\u7c7b\u578b\u65f6\u7684\u9ed8\u8ba4\u8fd4\u56de\u503c\u6216\u6267\u884c\u7684\u4ee3\u7801\u5757\u3002</li> </ul>"},{"location":"_CS/240905-C%E8%AF%AD%E8%A8%80%E8%AF%AD%E6%B3%95%E7%89%B9%E6%80%A7/#22","title":"2.2 \u793a\u4f8b","text":"<p>\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u6839\u636e\u8f93\u5165\u7684\u7c7b\u578b\u8fd4\u56de\u4e0d\u540c\u7684\u503c\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n\n#define SQUARE(x) _Generic((x), \\\n        default: (x * x), \\\n        int: (x * x), \\\n        char: (x * x), \\\n        float: (x * x), \\\n        double: (x * x))\n\nint main() {\n    int i = 5;\n    char c = 'a';\n    double d = 3.14;\n\n    printf(\"Square of %d is %d\\n\", i, SQUARE(i));\n    printf(\"Square of '%c' is %d\\n\", c, SQUARE(c));\n    printf(\"Square of %f is %f\\n\", d, SQUARE(d));\n\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>SQUARE</code> \u5b8f\u4f7f\u7528 <code>_Generic()</code> \u6765\u6839\u636e\u53c2\u6570\u7684\u7c7b\u578b\u9009\u62e9\u4e0d\u540c\u7684\u4ee3\u7801\u5757\u3002\u7531\u4e8e\u6240\u6709\u7c7b\u578b\u90fd\u8fd4\u56de\u76f8\u540c\u7684\u4ee3\u7801\u5757\uff08x * x\uff09\uff0c\u6240\u4ee5\u8fd9\u4e2a\u4f8b\u5b50\u5e76\u6ca1\u6709\u592a\u591a\u5b9e\u9645\u610f\u4e49\uff0c\u4f46\u5b83\u5c55\u793a\u4e86 <code>_Generic()</code> \u7684\u57fa\u672c\u7528\u6cd5\u3002</p>"},{"location":"_CS/240905-C%E8%AF%AD%E8%A8%80%E8%AF%AD%E6%B3%95%E7%89%B9%E6%80%A7/#23","title":"2.3 \u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>\u7c7b\u578b\u5339\u914d\uff1a<code>_Generic()</code> \u4f1a\u6839\u636e\u8868\u8fbe\u5f0f\u7684\u9759\u6001\u7c7b\u578b\u6765\u9009\u62e9\u5206\u652f\uff0c\u800c\u4e0d\u662f\u8fd0\u884c\u65f6\u7c7b\u578b\u3002</li> <li>\u9ed8\u8ba4\u5206\u652f\uff1a\u5fc5\u987b\u63d0\u4f9b\u4e00\u4e2a <code>default</code> \u5206\u652f\uff0c\u4ee5\u5904\u7406\u672a\u660e\u786e\u5217\u51fa\u7684\u7c7b\u578b\u3002</li> <li>\u7c7b\u578b\u5b89\u5168\uff1a<code>_Generic()</code> \u9009\u62e9\u5668\u63d0\u4f9b\u4e86\u7c7b\u578b\u5b89\u5168\u7684\u65b9\u5f0f\uff0c\u56e0\u4e3a\u5b83\u5728\u7f16\u8bd1\u65f6\u5c31\u786e\u5b9a\u4e86\u8981\u6267\u884c\u7684\u4ee3\u7801\u3002</li> </ol> <p><code>_Generic()</code> \u662f C11 \u6807\u51c6\u4e2d\u4e00\u4e2a\u5f3a\u5927\u7684\u7279\u6027\uff0c\u5b83\u5141\u8bb8\u5f00\u53d1\u8005\u7f16\u5199\u66f4\u7075\u6d3b\u548c\u53ef\u91cd\u7528\u7684\u4ee3\u7801\u3002\u7136\u800c\uff0c\u5b83\u7684\u4f7f\u7528\u53ef\u80fd\u4f1a\u4f7f\u4ee3\u7801\u7684\u9605\u8bfb\u548c\u7406\u89e3\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\uff0c\u56e0\u6b64\u5e94\u8be5\u5728\u786e\u5b9e\u9700\u8981\u65f6\u624d\u4f7f\u7528\u3002</p>"},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/","title":"240918-C \u8bed\u8a00\u516b\u80a1","text":"<p>\u53c2\u8003 1 \u53c2\u8003 2</p>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#1-volatile","title":"1 volatile","text":"<p>\u9632\u6b62\u7f16\u8bd1\u5668\u5bf9\u53d8\u91cf\u8fdb\u884c\u4f18\u5316\uff0c\u8ba9\u7f16\u8bd1\u5668\u6bcf\u6b21\u5b58\u53d6\u8be5\u53d8\u91cf\u7684\u65f6\u5019\u90fd\u8981\u53bb\u5185\u5b58\u91cc\u5b58\u53d6\uff0c\u800c\u4e0d\u662f\u5bc4\u5b58\u5668\u7684\u5907\u4efd\u3002</p> <p>\u7f16\u8bd1\u5668\u4f18\u5316\u6709\u53ef\u80fd\u4f1a\u4fee\u6539\u53d8\u91cf\uff1a</p> <pre><code>int a, b;\na = 1; // 1\nb = a; // 2\n</code></pre> <ol> <li>\u9996\u5148 1 \u5199\u5165 CPU\uff0c\u7136\u540e\u518d\u4ece CPU \u4e2d\u5c06 1 \u8bfb\u51fa\uff0c\u518d\u5199\u5165 a \u6240\u5728\u7684\u5185\u5b58\u4e2d\uff08&amp;a\uff09</li> <li>\u5148\u4ece\u5185\u5b58\u4e2d\u5c06 a \u7684\u503c\u53d6\u51fa\u5230 CPU\uff0c\u518d\u4ece CPU \u4e2d\u5c06\u503c\u5199\u5165 b \u7684\u5185\u5b58\u5730\u5740\u4e2d</li> </ol> <p>\u8003\u8651\u4e0b\u9762\u4e00\u6bb5\u4ee3\u7801\uff0c\u5c55\u73b0\u4e86\u7f16\u8bd1\u5668\u4f18\u5316\u7684\u8fc7\u7a0b\uff1a</p> <pre><code>int a = 1, b, c;\nb = a; // 1\nc = a; // 2\n</code></pre> <ol> <li>&amp;a -&gt; CPU -&gt; &amp;b</li> <li>&amp;a -&gt; CPU -&gt; &amp;c</li> </ol> <p>\u7f16\u8bd1\u5668\u5728\u4f18\u5316\u8fd9\u6bb5\u4ee3\u7801\u7684\u65f6\u5019\u4f1a\u7701\u7565\u6389\u6807\u53f7 2 \u4e2d\u7684 <code>&amp;a -&gt; CPU</code> \u7684\u8fc7\u7a0b\uff0c\u56e0\u4e3a\u6807\u53f7 1 \u4e2d\u5df2\u7ecf\u5c06 a \u7684\u503c\u653e\u5728\u5bc4\u5b58\u5668\uff08CPU\uff09\u4e2d\u8fc7\u4e86\u3002</p> <p>\u4e0d\u8fc7\u5982\u679c\u5728 <code>b=a</code> \u4e4b\u540e <code>a</code> \u5728\u5185\u5b58\u4e2d\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u4f8b\u5982\u6b63\u597d\u4e00\u4e2a\u4e2d\u65ad\u6539\u53d8\u4e86 <code>a</code> \u7684\u503c\uff0c\u5c31\u4f1a\u5bfc\u81f4\u4e2d\u65ad\u56de\u6765\u4e4b\u540e\u7684\u6807\u53f7 2 \u4ee3\u7801\u8fd8\u662f\u5c06\u539f\u6765 <code>a</code> \u7684\u503c\u7ed9\u4e86 <code>c</code></p> <p>\u5f15\u5165 <code>volatile</code> \u4e4b\u540e\uff0c\u6267\u884c\u6807\u53f7 2 \u4ee3\u7801\u7684\u65f6\u5019\u4fbf\u4f1a\u4e0d\u5ffd\u7565 <code>&amp;a -&gt; CPU</code> \u8fd9\u4e2a\u6b65\u9aa4</p> <p>\u56e0\u6b64\uff0c\u4e00\u822c\u5728\u4ee5\u4e0b\u60c5\u51b5\u4f7f\u7528 volatile\uff1a</p> <ol> <li>\u5e76\u884c\u8bbe\u5907\u7684\u786c\u4ef6\u5bc4\u5b58\u5668\uff0c\u5f53\u58f0\u660e\u6307\u5411\u8bbe\u5907\u5bc4\u5b58\u5668\u7684\u6307\u9488\u7684\u65f6\u5019\u9700\u8981\u7528\uff0c\u56e0\u4e3a\u6bcf\u6b21\u5bf9\u5176\u7684\u8bfb\u5199\u90fd\u53ef\u80fd\u6709\u4e0d\u540c\u610f\u4e49</li> <li>\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u4e2d\u4fee\u6539\u7684\u201c\u6709\u88ab\u5176\u4ed6\u7a0b\u5e8f\u5f15\u7528\u7684\u53d8\u91cf\u201d</li> <li>\u591a\u7ebf\u7a0b\u5e94\u7528\u4e2d\u88ab\u597d\u51e0\u4e2a\u4efb\u52a1\u5171\u4eab\u7684\u53d8\u91cf</li> </ol>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#11-const-volatile","title":"1.1 \u4e00\u4e2a\u53c2\u6570\u53ef\u4ee5\u5373\u662f const \u53c8\u662f volatile \u5417","text":"<p>\u53ef\u4ee5\uff0c\u53ef\u4ee5\u7528\u4e8e\u8868\u793a\u53ea\u8bfb\u7684\u72b6\u6001\u5bc4\u5b58\u5668</p>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#12-volatile","title":"1.2 \u6307\u9488\u53ef\u4ee5\u662f volatile \u5417","text":"<p>\u53ef\u4ee5\uff0c\u4f8b\u5982\u4e2d\u65ad\u670d\u52a1\u5b50\u7a0b\u5e8f\u4e2d\u9700\u8981\u4fee\u6539\u4e00\u4e2a\u6307\u5411 buffer \u7684\u6307\u9488\u65f6</p>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#13","title":"1.3 \u8fa8\u522b\u4ee3\u7801","text":"<pre><code>int square(volatile int* ptr)\n{\n    return *ptr * *ptr\n}\n</code></pre> <p>\u51fd\u6570\u76ee\u7684\u4e3a\u8fd4\u56de ptr \u6307\u5411\u7684\u503c\u7684\u5e73\u65b9\uff0c\u4f46\u7531\u4e8e ptr \u88ab\u5b9a\u4e49\u4e3a volatile \u578b\u4e86\uff0c\u6240\u4ee5\u7f16\u8bd1\u5668\u5c06\u4f1a\u7b49\u6548\u4e3a\uff1a</p> <pre><code>int square(volatile int* ptr)\n{\n    int a, b;\n\n    a = *ptr;\n    b = *ptr;\n\n    return a * b;\n}\n</code></pre> <p>\u56e0\u4e3a <code>*ptr</code> \u88ab\u8bbe\u7f6e\u4e3a <code>volatile</code> \uff0c\u56e0\u6b64\u5728\u5bf9 a \u4ee5\u53ca b \u8d4b\u503c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6709\u53ef\u80fd ptr \u53d1\u751f\u4e86\u6539\u53d8\uff0c\u8fd9\u662f\u8fd9\u6761\u51fd\u6570\u4e0b\u4e0d\u613f\u53d1\u751f\u7684\uff0c\u6b63\u786e\u7684\u5e94\u8be5\u4fee\u6539\u4e3a\uff1a</p> <pre><code>long square(volatile int* ptr)\n{\n    int a;\n\n    a = *ptr;\n    return a * a;\n}\n</code></pre>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#2-static","title":"2 static","text":"<p>\u58f0\u660e\u4e3a\u9759\u6001\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u5b58\u50a8\u5728\u9759\u6001\u533a</p> <ul> <li>\u5982\u679c\u662f\u9759\u6001\u5c40\u90e8\u53d8\u91cf\uff0c\u4f5c\u7528\u57df\u5373\u4e3a\u4e00\u5bf9\u82b1\u62ec\u53f7\u5185</li> <li>\u5982\u679c\u662f\u9759\u6001\u5168\u5c40\u53d8\u91cf\uff0c\u4f5c\u7528\u57df\u5373\u4e3a\u5f53\u524d\u6587\u4ef6</li> </ul> <p><code>static</code> \u4fee\u9970\u7684\u5168\u5c40\u53d8\u91cf\u4ee5\u53ca\u51fd\u6570\u53ea\u80fd\u5728\u672c\u6587\u4ef6\u4e2d\u88ab\u8c03\u7528</p> <ul> <li>\u51fd\u6570\u4f53\u5185\uff1a \u751f\u547d\u5468\u671f\u548c\u51fd\u6570\u4f53\u76f8\u540c</li> <li>\u6a21\u5757\u5185\uff08\u51fd\u6570\u4f53\u5916\uff09\uff1a \u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u53d8\u91cf\u53ef\u4ee5\u88ab\u6a21\u5757\u5185\u6240\u7528\u51fd\u6570\u8bbf\u95ee\uff0c\u4e0d\u80fd\u88ab\u6a21\u5757\u5916\u5176\u4ed6\u51fd\u6570\u8bbf\u95ee\uff0c\u662f\u4e00\u4e2a\u672c\u5730\u7684\u5168\u5c40\u53d8\u91cf</li> </ul>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#3-const","title":"3 const","text":"<p>\u5b9a\u4e49\u53d8\u91cf\u4e3a\u5e38\u91cf</p> <p>\u5f53\u4fee\u9970\u4e3a\u6307\u9488\u7684\u65f6\u5019\uff1a</p> <pre><code>const int *p1;\nint const *p2;\nint* const p3;\nconst int* const p4;\n</code></pre> <ul> <li>\u7b2c\u4e00\u79cd\u548c\u7b2c\u4e8c\u79cd\u4e3a\u5e38\u91cf\u6307\u9488\uff0c\u8bed\u4e49\u5b8c\u5168\u76f8\u540c</li> <li>\u7b2c\u4e09\u79cd\u4e3a\u6307\u9488\u5e38\u91cf</li> <li>\u7b2c\u56db\u79cd\u662f\u6307\u5411\u5e38\u91cf\u7684\u5e38\u6307\u9488</li> </ul> <p>\u7f16\u8bd1\u5668\u4e00\u822c\u4e0d\u4e3a\u666e\u901a\u7684 const \u5e38\u91cf\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\uff0c\u800c\u662f\u5c06\u5176\u4fdd\u5b58\u5728\u7b26\u53f7\u8868\u4e2d\uff0c\u4f7f\u5f97\u5176\u6210\u4e3a\u4e00\u4e2a\u7f16\u8bd1\u671f\u95f4\u7684\u5e38\u91cf\uff0c\u8003\u8651\u8fd9\u6837\u4e00\u6bb5\u4ee3\u7801\uff1a</p> <pre><code>const int maxUsers = 100;\n</code></pre> <p>\u7f16\u8bd1\u5668\u518d\u7f16\u8bd1\u8fd9\u6bb5\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u51b3\u5b9a\u4e0d\u4e3a\u5176\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u800c\u662f\u5728\u9700\u8981\u4f7f\u7528 <code>maxUsers</code> \u7684\u65f6\u5019\u76f4\u63a5\u4f7f\u7528\u503c <code>100</code></p>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#31","title":"3.1 \u4ec0\u4e48\u662f\u5e38\u91cf\u6307\u9488\uff1a","text":"<ul> <li>\u4e0d\u80fd\u901a\u8fc7\u8fd9\u4e2a\u6307\u9488\u6765\u6539\u53d8\u53d8\u91cf\u7684\u503c\uff0c\u6709\u5176\u4ed6\u7684\u65b9\u6cd5\u53ef\u4ee5\u6539\u53d8\u53d8\u91cf\u7684\u503c</li> <li>\u53ef\u4ee5\u4fee\u6539\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u7684\u5730\u5740</li> </ul> <p><code>*p1 = 5;</code> \u4e0d\u88ab\u5141\u8bb8\uff1b<code>p1 = &amp;someOtherInt</code> \u662f\u5141\u8bb8\u7684</p>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#32","title":"3.2 \u4ec0\u4e48\u662f\u6307\u9488\u5e38\u91cf\uff1a","text":"<ul> <li>\u4e5f\u5c31\u662f\u6307\u9488\u672c\u8eab\u662f\u4e2a\u5e38\u91cf\uff0c\u8be5\u6307\u9488\u6307\u5411\u7684\u5730\u5740\u4e0d\u80fd\u88ab\u4fee\u6539\uff0c\u4f46\u662f\u6307\u5411\u7684\u5730\u5740\u4e2d\u4fdd\u5b58\u7684\u6570\u503c\u53ef\u4ee5\u6539\u53d8</li> </ul> <p><code>*p3 = 5;</code>\u00a0\u662f\u5141\u8bb8\u7684\uff0c\u4f46\u00a0<code>p3 = &amp;someOtherInt;</code>\u00a0\u4e0d\u88ab\u5141\u8bb8</p>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#33","title":"3.3 \u4ec0\u4e48\u662f\u6307\u5411\u5e38\u91cf\u7684\u5e38\u6307\u9488\uff1a","text":"<ul> <li>\u4e0a\u8ff0\u4e24\u8005\u7684\u7ed3\u5408\uff0c\u4e5f\u5c31\u662f\u6307\u9488\u672c\u8eab\u4e0d\u80fd\u4fee\u6539\uff0c\u6307\u5411\u7684\u53d8\u91cf\u7684\u503c\u4e5f\u4e0d\u80fd\u4fee\u6539</li> <li>\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u8fd8\u662f\u53ef\u4ee5\u901a\u8fc7\u522b\u7684\u666e\u901a\u6307\u9488\u4fee\u6539\u53d8\u91cf\u7684\u503c</li> </ul> <p><code>*p4 = 5;</code>\u00a0\u548c\u00a0<code>p4 = &amp;someOtherInt;</code>\u00a0\u90fd\u662f\u4e0d\u5141\u8bb8\u7684\u3002</p>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#34-const","title":"3.4 \u5982\u679c const \u4fee\u9970\u7684\u662f\u51fd\u6570\u7684\u53c2\u6570\uff1a","text":"<ul> <li>\u8868\u793a\u5728\u51fd\u6570\u4f53\u5185\u4e0d\u80fd\u4fee\u6539\u8fd9\u4e2a\u53c2\u6570\u7684\u503c</li> </ul>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#35-const","title":"3.5 \u5982\u679c const \u4fee\u9970\u7684\u662f\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff1a","text":"<ul> <li>\u4fee\u9970\u7684\u662f\u6307\u9488\uff1a\u6307\u9488\u6307\u5411\u7684\u5730\u5740\u4e0d\u80fd\u88ab\u4fee\u6539\uff0c\u5e76\u4e14\u8fd4\u56de\u503c\u53ea\u80fd\u88ab\u8d4b\u7ed9\u7528 const \u4fee\u9970\u7684\u6307\u9488</li> <li>\u4fee\u9970\u7684\u662f\u53d8\u91cf\uff1a\u6ca1\u6709\u610f\u4e49\uff0c\u56e0\u4e3a\u8fd4\u56de\u503c\u4e3a\u4e34\u65f6\u53d8\u91cf\uff0c\u51fd\u6570\u8c03\u7528\u4e4b\u540e\u8fd9\u4e2a\u4e34\u65f6\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u4e5f\u5c31\u7ed3\u675f\u4e86\uff0c\u5c06\u8fd4\u56de\u503c\u4fee\u9970\u4e3a const \u662f\u6ca1\u6709\u610f\u4e49\u7684</li> </ul> <p>\u9488\u5bf9\u4fee\u9970\u5bf9\u8c61\u4e3a\u6307\u9488\u7684\u60c5\u51b5\u6709\u4ee5\u4e0b\u4f8b\u5b50: <code>const char getString();</code> \u5b9a\u4e49\u4e00\u4e2a\u8fd4\u56de char \u7684\u51fd\u6570 <code>char *str = getString();</code> \u9519\u8bef\uff0cstr \u6ca1\u6709\u88ab const \u4fee\u9970 <code>const char *str = getString();</code> \u6b63\u786e</p>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#4-typedef-define","title":"4 typedef \u548c define \u7684\u5f02\u540c","text":"<p>\u9996\u5148\u90fd\u662f\u53d6\u522b\u540d\uff0c\u589e\u5f3a\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027\uff0c\u4f46\u662f\u5728\u539f\u7406\u3001\u529f\u80fd\u3001\u4f5c\u7528\u57df\u3001\u5bf9\u6307\u9488\u7684\u64cd\u4f5c\u8fd9\u56db\u4e2a\u65b9\u9762\u4e0a\u90fd\u6709\u6240\u4e0d\u540c\uff1a</p>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#41","title":"4.1 \u539f\u7406\u4e0a","text":"<p><code>#define</code> \u662f\u9884\u5904\u7406\u6307\u4ee4\uff0c\u5728\u9884\u5904\u7406\u65f6\u7b80\u5355\u4e14\u673a\u68b0\u5730\u8fdb\u884c\u5b57\u7b26\u4e32\u66ff\u6362\uff0c\u4e0d\u68c0\u67e5\u6b63\u786e\u6027\uff0c\u4e0d\u7ba1\u542b\u4e49\u662f\u5426\u6b63\u786e\uff0c\u5728\u7f16\u8bd1\u5df2\u88ab\u5c55\u5f00\u7684\u6e90\u7a0b\u5e8f\u7684\u65f6\u5019\u624d\u4f1a\u53d1\u73b0\u53ef\u80fd\u7684\u9519\u8bef\u5e76\u62a5\u9519\u3002</p> <p><code>typedef</code> \u662f\u5173\u952e\u5b57\uff0c\u7f16\u8bd1\u7684\u65f6\u5019\u88ab\u5904\u7406\uff0c\u5177\u6709\u7c7b\u578b\u68c0\u67e5\u7684\u529f\u80fd\uff0c\u5728\u81ea\u5df1\u7684\u5b9a\u4e49\u57df\u5185\u7ed9\u5df2\u7ecf\u5b58\u5728\u7684\u7c7b\u578b\u8d77\u4e00\u4e2a\u522b\u540d\uff0c\u4f46\u4e0d\u80fd\u5728\u4e00\u4e2a\u51fd\u6570\u5b9a\u4e49\u5185\u4f7f\u7528\u6807\u8bc6\u7b26\u3002</p>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#42","title":"4.2 \u529f\u80fd\u4e0a","text":"<p><code>typedef</code> \u7528\u6765\u5b9a\u4e49\u7c7b\u578b\u7684\u522b\u540d\uff0c\u4e00\u822c\u5e38\u7528\u7684\u5982\u4e3a\u81ea\u5df1\u5b9a\u4e49\u7684\u7c7b\u578b\uff08<code>struct</code> \u5b9a\u4e49\u7684\uff09\u8d77\u522b\u540d\uff0c\u53ef\u4ee5\u8d77\u5230\u5229\u4e8e\u8bb0\u5fc6\u4e0e\u8fa8\u8bc6\u7684\u529f\u80fd\uff0c\u5982\uff1a</p> <pre><code>struct wiegand_reader\n{\n    gpio_num_t gpio_d0, gpio_d1;\n    wiegand_callback_t callback;\n    wiegand_order_t bit_order;\n    wiegand_order_t byte_order;\n\n    uint8_t *buf;\n    size_t size;\n    size_t bits;\n    esp_timer_handle_t timer;\n    bool start_parity;\n    bool enabled;\n};\n</code></pre> <p>\u8fd9\u6837\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u5c06\u4e00\u4e2a wiegand \u8bfb\u5361\u5668\u62bd\u8c61\u4e3a\u4e00\u4e2a\u7c7b\u522b\uff0c\u5bf9\u4e8e\u8fd9\u6837\u7684\u7ed3\u6784\u4f53\u53ef\u4ee5\u5728\u5b9a\u4e49\u7684\u65f6\u5019\u76f4\u63a5\uff1a</p> <pre><code>typedef struct wiegand_reader\n{\n    xxx;\n    xxx;\n    xxx;\n} wiegand_reader_t;\n</code></pre> <p>\u52a0\u4e0a\u540e\u7f00 <code>_t</code> \u662f\u5e38\u7528\u7684\u5199\u6cd5\uff0c\u610f\u4e3a <code>type</code> \uff0c\u5411\u7f16\u7a0b\u4eba\u5458\u6307\u793a\u8fd9\u662f\u4e00\u4e2a\u53d8\u91cf\u7c7b\u578b</p>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#43","title":"4.3 \u4f5c\u7528\u57df\u4e0a","text":"<p><code>#define</code> \u6ca1\u6709\u4f5c\u7528\u57df\uff0c\u9884\u5b9a\u4e49\u8fc7\u540e\u7684\u5b8f\u5728\u6240\u6709\u7684\u7a0b\u5e8f\u4e2d\u90fd\u53ef\u4ee5\u4f7f\u7528\uff0c<code>typedef</code> \u5219\u6709\u81ea\u5df1\u7684\u4f5c\u7528\u57df\u3002</p>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#44","title":"4.4 \u5bf9\u6307\u9488\u7684\u64cd\u4f5c\u4e0a","text":"<p>\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u5bf9\u6bd4\u573a\u666f\uff1a</p> <pre><code>#define INTPTR1 int*\ntypedef int* INTPTR2;\nINTPTR1 P1, P2;\nINTPTR2 P3, P4;\n</code></pre> <ul> <li>INTPTR1 \u7684\u60c5\u51b5\u4e3a\u8fdb\u884c\u5b57\u7b26\u4e32\u66ff\u6362\uff1a<code>int* p1; int p2;</code> \u8868\u8fbe\u7684\u610f\u4e49\u4e3a\u58f0\u660e\u4e00\u4e2a int \u578b\u6307\u9488\u53d8\u91cf p1 \u548c\u4e00\u4e2a\u6574\u5f62\u53d8\u91cf p2</li> <li>INTPTR2 \u7684\u60c5\u51b5\u662f\u201c\u5177\u6709\u542b\u4e49\u7684\u66ff\u6362\u201d\uff1a<code>int* p1; int* p2;</code> \u4e5f\u5c31\u662f\u4e24\u4e2a\u90fd\u662f\u6307\u9488\u53d8\u91cf</li> </ul>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#5","title":"5 \u53d8\u91cf","text":"","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#51-define-const","title":"5.1 \u5b9a\u4e49\u5e38\u91cf <code>#define</code> \u548c <code>const</code> \u7684\u533a\u522b\uff0c\u8c01\u66f4\u597d\uff1a","text":"<ul> <li><code>#define</code> \u53ef\u4ee5\u66ff\u4ee3\u5e38\u6570\u3001\u8868\u8fbe\u5f0f\u3001\u751a\u81f3\u4ee3\u7801\u6bb5\uff0c\u4f46\u5bb9\u6613\u51fa\u9519\uff0c\u6709\u7684\u65f6\u5019\u53ef\u4ee5\u4f5c\u4e3a\u5f88\u5f3a\u5927\u7684\u5de5\u5177\u4f7f\u7528\uff0c\u4f8b\u5982 uthash \u5e93\u8fd9\u4e2a\u4ec5\u5934\u6587\u4ef6\u5b9e\u73b0\u7684\u54c8\u5e0c\u8868\u5e93\u5c31\u5145\u5206\u5229\u7528\u4e86 <code>#define</code> \u7684\u4f18\u52bf</li> <li><code>const</code> \u7684\u5f15\u5165\u4e5f\u53ef\u4ee5\u589e\u5f3a\u53ef\u8bfb\u6027\uff0c\u4f7f\u7a0b\u5e8f\u7684\u7ef4\u62a4\u548c\u8c03\u8bd5\u53d8\u5f97\u66f4\u52a0\u65b9\u4fbf</li> </ul> <p>\u4f7f\u7528\u65f6\u7684\u5dee\u5f02\u4e00\u822c\u5728\u5982\u4e0b\u65b9\u9762\uff1a</p> <ul> <li><code>#define</code> \u58f0\u660e\u5468\u671f\u6b62\u4e8e\u7f16\u8bd1\u671f\uff0c\u4e0d\u5206\u914d\u5185\u5b58\uff0c\u5b58\u5728\u4e8e\u7a0b\u5e8f\u7684\u4ee3\u7801\u6bb5\uff0c\u800c <code>const</code> \u5b58\u5728\u4e8e\u7a0b\u5e8f\u7684\u6570\u636e\u6bb5\uff0c\u5728\u5806\u6808\u4e2d\u786e\u5b9e\u6709\u5206\u914d\u4e86\u7a7a\u95f4\uff0c\u53ef\u4ee5\u88ab\u8c03\u7528\u3001\u4f20\u9012</li> <li>\u7f16\u8bd1\u5668\u53ef\u4ee5\u5bf9 <code>const</code> \u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff0c<code>#define</code> \u5219\u4e0d\u4f1a</li> <li>\u6709\u4e9b IDE \u652f\u6301\u8c03\u8bd5 <code>const</code> \u5b9a\u4e49\u7684\u5e38\u91cf\uff0c\u53c8\u7531\u4e8e\u4f1a\u5bf9 <code>const</code> \u8fdb\u884c\u5b89\u5168\u68c0\u67e5\uff0c\u56e0\u6b64\u66f4\u52a0\u503e\u5411\u7528 const \u6765\u5b9a\u4e49\u5e38\u91cf\u7c7b\u578b</li> </ul>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#52","title":"5.2 \u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u7684\u533a\u522b\uff1a","text":"<ul> <li>\u4f5c\u7528\u57df\u4e0d\u540c\uff0c\u5168\u5c40\u4e3a\u7a0b\u5e8f\u5757\uff0c\u5c40\u90e8\u4e3a\u5f53\u524d\u51fd\u6570\uff0c\u5f15\u7533\u4e00\u4e0b\u5219\u4e3a\u4f7f\u7528\u65b9\u5f0f\u7684\u4e0d\u540c\uff0c\u5168\u5c40\u7684\u7a0b\u5e8f\u7684\u5404\u4e2a\u90e8\u5206\u90fd\u53ef\u4ee5\u7528\u5230\uff0c\u5c40\u90e8\u7684\u53ea\u80fd\u5728\u5c40\u90e8\u4f7f\u7528</li> <li>\u751f\u547d\u5468\u671f\u4e0d\u540c\uff0c\u5168\u5c40\u4e0e\u4e3b\u7a0b\u5e8f\u5171\u5468\u671f\uff0c\u5c40\u90e8\u4e0e\u5c40\u90e8\u51fd\u6570\u3001\u5c40\u90e8\u5faa\u73af\u4f53\u7b49\u90e8\u5206\u5171\u5468\u671f</li> <li>\u5185\u5b58\u4e2d\u7684\u5b58\u50a8\u65b9\u5f0f\u4e0d\u540c\uff0c\u5168\u5c40\u53d8\u91cf\uff08\u9759\u6001\u5168\u5c40\u3001\u9759\u6001\u5c40\u90e8\u53d8\u91cf\uff09\u5206\u914d\u5728\u5168\u5c40\u6570\u636e\u533a\uff08\u9759\u6001\u5b58\u50a8\u7a7a\u95f4\uff09\uff0c\u5c40\u90e8\u5206\u914d\u5728\u6808\u533a</li> </ul>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#53-c","title":"5.3 \u5168\u5c40\u53d8\u91cf\u53ef\u4e0d\u53ef\u4ee5\u5b9a\u4e49\u5728\u88ab\u591a\u4e2a. C \u6587\u4ef6\u5305\u542b\u7684\u5934\u6587\u4ef6\u4e2d\uff1f","text":"<ul> <li>\u53ef\u4ee5\uff0c\u5728\u4e0d\u540c\u7684 C \u6587\u4ef6\u4e2d\u4ee5 static \u5f62\u5f0f\u6765\u58f0\u660e\u540c\u540d\u5168\u5c40\u53d8\u91cf</li> <li>\u53ef\u4ee5\u5728\u4e0d\u540c\u7684 C \u6587\u4ef6\u4e2d\u58f0\u660e\u540c\u540d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u524d\u63d0\u662f\u53ea\u6709\u4e00\u4e2a\u6587\u4ef6\u4e2d\u8d4b\u521d\u503c</li> </ul>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#54","title":"5.4 \u5c40\u90e8\u53d8\u91cf\u80fd\u5426\u548c\u5168\u5c40\u53d8\u91cf\u91cd\u540d","text":"<ul> <li>\u53ef\u4ee5\uff0c\u5c40\u90e8\u4f1a\u5c4f\u853d\u5168\u5c40</li> <li>\u51fd\u6570\u5185\u90e8\u5f15\u7528\u7684\u65f6\u5019\u4f1a\u4f7f\u7528\u5c40\u90e8\u800c\u4e0d\u4f1a\u4f7f\u7528\u5168\u5c40\uff0c\u5e76\u4e14\u5728\u67d0\u4e9b\u7f16\u8bd1\u5668\u4e2d\u540c\u4e00\u4e2a\u51fd\u6570\u5185\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u5728\u5faa\u73af\u4f53\u5185\u4f7f\u7528\u5404\u81ea\u7684\u540c\u540d\u5c40\u90e8\u53d8\u91cf\u5c31\u597d\uff0c\u4f5c\u7528\u57df\u88ab\u9650\u5236\u5728\u5404\u81ea\u7684\u5faa\u73af\u4f53\u5185</li> </ul>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#6","title":"6 \u6570\u7ec4","text":"","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#61","title":"6.1 \u6570\u7ec4\u6307\u9488","text":"<p>\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488\uff0c\u8003\u8651\u4e00\u4e2a\u573a\u666f\uff1a</p> <pre><code>int b[12] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12};\nint (*p)[4];\np = b;\nprintf(\"%d\\n\", **(++p));\n</code></pre> <p><code>p</code> \u5219\u4e3a\u6570\u7ec4\u6307\u9488\uff0c\u4e0a\u8ff0\u4ee3\u7801\u7684\u91cd\u70b9\u5728\u4e8e\u5982\u4f55\u7406\u89e3 <code>p = b</code> \u4ee5\u53ca <code>**(++p)</code> \uff1a</p> <ul> <li>\u9996\u5148 <code>p</code> \u662f\u4e00\u4e2a\u6307\u5411\u201c\u5305\u542b 4 \u4e2a int \u6210\u5458\u7684\u6570\u7ec4\u201d\u7684\u6307\u9488\uff0c\u5728\u5c06 <code>b</code> \u8d4b\u503c\u7ed9 <code>p</code> \u7684\u65f6\u5019\uff0c\u76f8\u5f53\u4e8e <code>p</code> \u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u4f1a\u5b58\u50a8 <code>b</code> \u6570\u7ec4\u6bcf\u56db\u4e2a\u5143\u7d20\u7684\u8d77\u59cb\u5730\u5740\u3002\u5728 <code>p = b;</code> \u8fd9\u884c\u4ee3\u7801\u6267\u884c\u540e\uff0c<code>p</code> \u5c06\u6307\u5411 <code>b</code>\uff0c\u4e5f\u5c31\u662f\u5c06 <code>b</code> \u7684\u5730\u5740\u503c\u8d4b\u7ed9 <code>p</code></li> <li>\u4e8e\u662f <code>++p</code> \u4e4b\u540e <code>p</code> \u6307\u9488\u5c06\u5411\u540e\u79fb\u52a8 4 \u4e2a int \uff0c\u89e3\u7b2c\u4e00\u5c42\u5f15\u7528\u5f97\u5230 <code>b[4]</code> \uff0c\u89e3\u7b2c\u4e8c\u5c42\u5f15\u7528\u5f97\u5230\u5176\u503c <code>5</code></li> </ul>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#62","title":"6.2 \u6307\u9488\u6570\u7ec4","text":"<p>\u6307\u9488\u6570\u7ec4\u8868\u793a\u7684\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u5176\u4e2d\u7684\u5143\u7d20\u4e3a\u6307\u9488\uff0c\u8003\u8651\u4e0b\u5217\u793a\u4f8b\uff1a</p> <pre><code>int i;\nint* p[4];\nint a[4] = {1, 2, 3, 4};\np[0] = &amp;a[0];\np[1] = &amp;a[1];\np[2] = &amp;a[2];\np[3] = &amp;a[3];\nfor (i = 0; i &lt; 4; i++) printf(\"%d\", *p[i]);\n</code></pre> <p>\u8f93\u51fa 1234</p>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#63","title":"6.3 \u6570\u7ec4\u4e0b\u6807","text":"<p>\u53ef\u4ee5\u4e3a\u8d1f\u6570\uff0c\u4e0b\u6807\u6307\u793a\u7ed9\u51fa\u4e00\u4e2a\u4e0e\u5f53\u524d\u5730\u5740\u7684\u504f\u79fb\u91cf\u800c\u5df2\uff0c\u6839\u636e\u504f\u79fb\u91cf\u80fd\u591f\u5b9a\u4f4d\u5230\u76ee\u6807\u5730\u5740\u5373\u53ef</p>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#7","title":"7 \u6307\u9488","text":"","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#71","title":"7.1 \u51fd\u6570\u6307\u9488","text":"<p>\u51fd\u6570\u6307\u9488\uff0c\u9996\u5148\u662f\u4e00\u4e2a\u6307\u9488\u3002</p> <p>\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u540e\uff0c\u7f16\u8bd1\u65f6\u7cfb\u7edf\u5219\u4f1a\u4e3a\u8fd9\u4e2a\u51fd\u6570\u4ee3\u7801\u5206\u914d\u4e00\u6bb5\u5185\u5b58\uff0c\u8fd9\u6bb5\u7a7a\u95f4\u7684\u9996\u5730\u5740\u5219\u4e3a\u8fd9\u4e2a\u51fd\u6570\u7684\u5730\u5740\uff0c\u51fd\u6570\u540d\u4e5f\u5c31\u8868\u793a\u7684\u662f\u8fd9\u4e2a\u5730\u5740\u3002</p> <p>\u7c7b\u4f3c\u6570\u7ec4\u540d\u7684\u6982\u5ff5</p> <p>\u65e2\u7136\u662f\u4e00\u4e2a\u5730\u5740\uff0c\u90a3\u5c31\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\u6765\u5b58\u653e\u3002\u8be5\u6307\u9488\u53d8\u91cf\u5c31\u88ab\u53eb\u505a\u51fd\u6570\u6307\u9488\uff1a</p> <pre><code>int(*p) (int,int);\n</code></pre> <ul> <li><code>int</code> \u5f00\u5934\u7684 int \u8868\u793a\u8be5\u51fd\u6570\u8fd4\u56de int \u7c7b\u578b</li> <li><code>(*p)</code> <code>*</code> \u5148\u4e0e p \u7ed3\u5408\uff0c\u8868\u793a p \u662f\u4e00\u4e2a\u6307\u9488</li> </ul> <p>\u6ce8\u610f\uff1a \u62ec\u53f7\u5728\u6b64\u5904\u4e0d\u80fd\u7701\u7565\uff0c\u62ec\u53f7\u80fd\u591f\u6539\u53d8\u4f18\u5148\u7ea7\uff0c\u5982\u679c\u7701\u7565\u4e86\u7684\u8bdd\uff0c\u5c31\u88ab\u89c6\u4f5c\u58f0\u660e\u4e86\u4e00\u4e2a\u201c\u8fd4\u56de\u6307\u9488\u7684\u51fd\u6570\u201d\uff1a</p> <pre><code>int* p(int,int);\n</code></pre> <ul> <li><code>int*</code> <code>*</code> \u5148\u4e0e int \u7ed3\u5408\uff0c\u8868\u793a int \u6307\u9488\uff0c\u4f5c\u4e3a p \u51fd\u6570\u7684\u8fd4\u56de\u503c</li> </ul> <p>\u6ce8\u610f\uff1a \u51fd\u6570\u6307\u9488\u6ca1\u6709++\u548c--\u8fd0\u7b97</p>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#72-int-p-int-p","title":"7.2 \u7279\u522b\u6ce8\u610f\uff1a\u533a\u5206 <code>int *p</code> \u548c <code>int (*p)</code>","text":"<p>\u8fd9\u4fe9\u662f\u4e0d\u540c\u7684\u53d8\u91cf\u7c7b\u578b\uff0c\u524d\u8005\u662f\u4e00\u4e2a\u6307\u5411 int \u7c7b\u578b\u7684\u6307\u9488\uff0c\u540e\u8005\u6709\u53ef\u80fd\u662f\u4e00\u4e2a\u6570\u7ec4\u6307\u9488\u6216\u662f\u8fd4\u56de int \u7c7b\u578b\u7684\u51fd\u6570\u6307\u9488\uff1a</p> <pre><code>// int *p\nint value = 10;\nint *p = &amp;value; // p \u6307\u5411 value\n*p = 20; // \u901a\u8fc7\u6307\u9488\u4fee\u6539 value \u7684\u503c\uff0c\u73b0\u5728 value = 20\n</code></pre> <pre><code>// int (*p)\nint arr[5] = {1, 2, 3, 4, 5};\nint (*p)[5] = &amp;arr; // p \u6307\u5411\u4e00\u4e2a\u5305\u542b5\u4e2a\u6574\u6570\u7684\u6570\u7ec4\n(*p)[0] = 10; // \u4fee\u6539\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u73b0\u5728 arr[0] = 10\n\nint add(int a, int b) return a + b;\nint (*p)(int, int) = add; // p \u6307\u5411\u51fd\u6570 add\nint result = p(3, 5); // \u8c03\u7528 add \u51fd\u6570\uff0c\u7ed3\u679c\u4e3a 8\n</code></pre>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#73","title":"7.3 \u6307\u9488\u51fd\u6570","text":"<p>\u8fd4\u56de\u503c\u4e3a\u5730\u5740\uff0c\u5fc5\u987b\u4f7f\u7528\u540c\u7c7b\u578b\u7684\u6307\u9488\u53d8\u91cf\u6765\u63a5\u53d7</p> <p>\u540e\u7f00\u4e2d\u7684\u62ec\u53f7\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u51fd\u6570\uff1a</p> <pre><code>int *pfun(int, int);\n</code></pre> <p><code>*</code> \u7684\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u4f4e\u4e8e <code>()</code>\uff0c\u56e0\u6b64\u62ec\u53f7\u5148\u4e0e <code>pfun</code> \u8fdb\u884c\u7ed3\u5408</p>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#74","title":"7.4 \u6570\u7ec4\u548c\u6307\u9488\u7684\u5f02\u540c","text":"","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#741","title":"7.4.1 \u5b58\u50a8\u65b9\u5f0f","text":"<p>\u6570\u7ec4\u4e00\u822c\u5b58\u50a8\u5728\u9759\u6001\u5b58\u50a8\u533a\u6216\u6808\u4e0a\uff0c\u800c\u6307\u9488\u53ef\u4ee5\u968f\u65f6\u6307\u5411\u4efb\u610f\u7c7b\u578b\u7684\u5185\u5b58\u5757</p> <ul> <li>\u6570\u7ec4\u662f\u8fde\u7eed\u5b58\u653e\u7684\uff0c\u4e00\u5757\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4</li> <li>\u6570\u7ec4\u662f\u6839\u636e\u6570\u7ec4\u7684\u4e0b\u6807\u6765\u8fdb\u884c\u8bbf\u95ee\u7684</li> <li>\u6307\u9488\u53ef\u4ee5\u6307\u5411\u4efb\u610f\u7c7b\u578b\u7684\u6570\u636e</li> <li>\u6307\u9488\u7684\u7c7b\u578b\u8bf4\u660e\u4e86\u5b83\u6240\u6307\u5411\u5730\u5740\u7a7a\u95f4\u7684\u5185\u5b58</li> </ul>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#742-sizeof","title":"7.4.2 sizeof","text":"<ul> <li>\u6570\u7ec4<ul> <li>\u6570\u7ec4\u5360\u7528\u7684\u5185\u5b58\u7a7a\u95f4\uff1asizeof\uff08\u6570\u7ec4\u540d\uff09</li> <li>\u6570\u7ec4\u7684\u5927\u5c0f\uff1asizeof\uff08\u6570\u7ec4\u540d\uff09/sizeof\uff08\u6570\u636e\u7c7b\u578b\uff09</li> </ul> </li> <li>\u6307\u9488<ul> <li>\u5728 32 \u4f4d\u5e73\u53f0\u4e0b\uff0c\u65e0\u8bba\u7c7b\u578b\uff0csizeof\uff08\u6307\u9488\u540d\uff09\u90fd\u662f 4\uff084x8=32\uff09</li> <li>\u5728 64 \u4f4d\u5e73\u53f0\u4e0b\uff0c\u65e0\u8bba\u7c7b\u578b\uff0csizeof\uff08\u6307\u9488\u540d\uff09\u90fd\u662f 8\uff088x8=64\uff09</li> </ul> </li> </ul>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#743","title":"7.4.3 \u6570\u636e\u8bbf\u95ee","text":"<ul> <li>\u6307\u9488\u7684\u8bbf\u95ee\u65b9\u5f0f\u662f\u95f4\u63a5\u8bbf\u95ee\uff0c\u9700\u8981\u7528\u5230\u89e3\u5f15\u7528</li> <li>\u6570\u7ec4\u7684\u8bbf\u95ee\u65b9\u5f0f\u662f\u76f4\u63a5\u8bbf\u95ee\uff0c\u53ef\u901a\u8fc7\u4e0b\u6807\u8bbf\u95ee\u6216\u6570\u7ec4\u540d+\u5143\u7d20\u504f\u79fb\u91cf\u7684\u65b9\u5f0f</li> </ul>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#744","title":"7.4.4 \u4f7f\u7528\u573a\u666f","text":"<ul> <li>\u6307\u9488\u4e00\u822c\u7528\u4e8e\u52a8\u6001\u7684\u6570\u636e\u7ed3\u6784\u3001\u52a8\u6001\u5185\u5b58\u7684\u5f00\u8f9f</li> <li>\u6570\u7ec4\u4e00\u822c\u7528\u4e8e\u56fa\u5b9a\u4e2a\u6570\u4e14\u7c7b\u578b\u7edf\u4e00\u7684\u6570\u636e\u7ed3\u6784\u4ee5\u53ca\u9690\u5f0f\u5206\u914d</li> </ul>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#75","title":"7.5 \u91ce\u6307\u9488\uff1f","text":"<ul> <li>\u91ce\u6307\u9488\u662f\u6307\u5411\u4e0d\u53ef\u7528\u5185\u5b58\u7684\u6307\u9488\uff0c\u5f53\u6307\u9488\u88ab\u521b\u5efa\u7684\u65f6\u5019\u6307\u9488\u4e0d\u53ef\u80fd\u81ea\u52a8\u6307\u5411 NULL\uff0c\u8fd9\u4e2a\u65f6\u5019\u9ed8\u8ba4\u503c\u662f\u968f\u673a\u7684\uff0c\u8fd9\u4e2a\u65f6\u5019\u7684\u6307\u9488\u6210\u4e3a\u91ce\u6307\u9488</li> <li>\u5f53\u6307\u9488\u88ab free \u6216 delete \u91ca\u653e\u4e4b\u540e\uff0c\u5982\u679c\u6307\u9488\u6ca1\u6709\u88ab\u624b\u52a8\u8bbe\u7f6e\u4e3a NULL\uff0c\u5219\u4f1a\u4ea7\u751f\u91ce\u6307\u9488\uff0cfree \u548c delete \u53ea\u662f\u91ca\u653e\u4e86\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\uff0c\u6ca1\u6709\u628a\u6307\u9488\u672c\u8eab\u91ca\u653e\u6389</li> <li>\u6307\u9488\u64cd\u4f5c\u8d85\u8d8a\u4e86\u53d8\u91cf\u7684\u4f5c\u7528\u8303\u56f4\u4e5f\u4f1a\u5bfc\u81f4\u91ce\u6307\u9488\u7684\u4ea7\u751f</li> </ul> <p>\u907f\u514d\u65b9\u6cd5\uff1a</p> <ul> <li>\u521d\u59cb\u5316\u4e3a NULL</li> <li>\u7528 malloc \u5206\u914d\u5185\u5b58</li> <li>\u7528\u5df2\u6709\u5408\u6cd5\u7684\u53ef\u8bbf\u95ee\u7684\u5185\u5b58\u5730\u5740\u5bf9\u6307\u9488\u521d\u59cb\u5316</li> <li>\u6307\u9488\u7528\u5b8c\u540e\u91ca\u653e\u5185\u5b58\uff0c\u5c06\u6307\u9488\u8d4b NULL</li> </ul> <p>\u5173\u4e8e malloc \u51fd\u6570\u7684\u5206\u914d\u5b8c\u5185\u5b58\u540e\u7684\u6ce8\u610f\u70b9\uff1a</p> <ul> <li>\u68c0\u67e5\u5206\u914d\u662f\u5426\u6210\u529f\uff0cmalloc \u82e5\u6210\u529f\u4f1a\u8fd4\u56de\u5185\u5b58\u7684\u9996\u5730\u5740\uff0c\u4e0d\u6210\u529f\u4f1a\u8fd4\u56de NULL</li> <li>\u6e05\u7a7a\u5185\u5b58\u4e2d\u7684\u6570\u636e</li> </ul>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#8","title":"8 \u5185\u5b58","text":"","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#81-c","title":"8.1 C \u8bed\u8a00\u4e2d\u7684\u5185\u5b58\u5206\u914d\u65b9\u5f0f","text":"","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#811","title":"8.1.1 \u9759\u6001\u5b58\u50a8\u533a","text":"<p>\u8fd9\u4e00\u90e8\u5206\u7684\u5185\u5b58\u5206\u914d\u5728\u7a0b\u5e8f\u7f16\u8bd1\u4e4b\u524d\u5b8c\u6210\uff0c\u6574\u4e2a\u7a0b\u5e8f\u7684\u8fd0\u884c\u671f\u95f4\u90fd\u5b58\u5728\uff0c\u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u53d8\u91cf\u5c31\u5b58\u50a8\u5728\u6b64\u5904</p>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#812","title":"8.1.2 \u6808\u4e0a\u5206\u914d","text":"<ul> <li>\u4e0d\u9700\u8981\u624b\u52a8\u5e72\u9884\uff0c\u6808\u5185\u5b58\u91cc\u5b58\u653e\u7684\u4e1c\u897f\u751f\u547d\u5468\u671f\u4e3a\u81ea\u52a8\u7ba1\u7406</li> <li>\u5728\u51fd\u6570\u6267\u884c\u65f6\uff0c\u5185\u90e8\u7684\u5c40\u90e8\u53d8\u91cf\u7684\u5b58\u50a8\u5355\u5143\u5728\u6808\u4e0a\u521b\u5efa\uff0c\u51fd\u6570\u6267\u884c\u7ed3\u675f\u4e4b\u540e\u5b58\u50a8\u5355\u5143\u81ea\u52a8\u91ca\u653e</li> <li>\u6808\u7a7a\u95f4\u901a\u5e38\u8f83\u5c0f\uff0c\u4e3b\u8981\u7528\u4e8e\u5b58\u50a8\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\u3001\u51fd\u6570\u53c2\u6570\u3001\u8fd4\u56de\u5730\u5740\u7b49</li> <li>\u6808\u662f\u591a\u7ebf\u7a0b\u7f16\u7a0b\u7684\u57fa\u7840\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6700\u5c11\u7531\u4e00\u4e2a\u81ea\u5df1\u4e13\u5c5e\u7684\u6808\uff0c\u7528\u6765\u5b58\u50a8\u672c\u7ebf\u7a0b\u8fd0\u884c\u65f6\u7684\u5404\u4e2a\u51fd\u6570\u4e34\u65f6\u53d8\u91cf\uff0c\u4ee5\u53ca\u7ef4\u7cfb\u51fd\u6570\u8c03\u7528\u548c\u51fd\u6570\u8fd4\u56de\u65f6\u7684\u5173\u7cfb\u4ee5\u53ca\u51fd\u6570\u8fd0\u884c\u573a\u666f</li> </ul>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#813","title":"8.1.3 \u5806\u4e0a\u5206\u914d","text":"<ul> <li>\u9700\u8981\u624b\u52a8\u7ba1\u7406\uff0c\u901a\u8fc7\u7279\u5b9a\u7684\u51fd\u6570\u6765\u5206\u914d\u4e0e\u91ca\u653e\uff0c\u5806\u6570\u636e\u7684\u751f\u547d\u5468\u671f\u7531\u7a0b\u5e8f\u5458\u63a7\u5236</li> <li>\u4e00\u822c\u9002\u7528\u4e8e\u5b58\u50a8\u52a8\u6001\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5982\u52a8\u6001\u6570\u7ec4\u3001\u94fe\u8868\u7b49\uff0c\u6216\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u9700\u8981\u52a8\u6001\u5206\u914d\u548c\u91ca\u653e\u7684\u5185\u5b58</li> <li>\u5806\u7684\u5927\u5c0f\u901a\u5e38\u8f83\u5927\uff0c\u53d7\u9650\u4e8e\u5355\u7247\u673a\u7684\u603b\u5185\u5b58\u5927\u5c0f\uff0c\u9002\u5408\u5b58\u50a8\u52a8\u6001\u5206\u914d\u7684\u6570\u636e\u7ed3\u6784</li> </ul> <p>\u6808\u9002\u5408\u5feb\u901f\u3001\u4e34\u65f6\u7684\u5185\u5b58\u5206\u914d\uff1b\u800c\u5806\u9002\u5408\u590d\u6742\u3001\u957f\u671f\u7684\u5185\u5b58\u7ba1\u7406</p>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#814","title":"8.1.4 \u5806\u6808\u76f8\u5173\u5bc4\u5b58\u5668","text":"<p><code>ss\uff08Stack Segment\uff09</code> \u5806\u6808\u5bc4\u5b58\u5668\uff0c\u7528\u4e8e\u5b58\u653e\u5f53\u524d\u5806\u6808\u6bb5\u7684\u9009\u62e9\u5b50\uff08\u4e00\u4e2a 16 \u4f4d\u7684\u503c\uff09\uff0c\u7528\u4e8e\u8bbf\u95ee\u63cf\u8ff0\u5806\u6808\u6bb5\u7684\u6bb5\u63cf\u8ff0\u7b26\u3002 \u5806\u6808\u6bb5\u63cf\u8ff0\u7b26\u5305\u542b\u4e86\u5806\u6808\u7684\u57fa\u5730\u5740\u548c\u9650\u957f\u7b49\u4fe1\u606f\u3002</p> <p>\u4f46\u5728 arm \u67b6\u6784\u4e0b\u5e76\u4e0d\u5b58\u5728\u5806\u6808\u5bc4\u5b58\u5668\uff0carm \u67b6\u6784\u4e0b\u7684\u5806\u6808\u4e00\u822c\u76f4\u63a5\u4f7f\u7528 SP\uff08\u5bc4\u5b58\u5668 R13\uff09\u6765\u8fdb\u884c\u7ba1\u7406\u3002</p>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#815","title":"8.1.5 \u5185\u5b58\u6cc4\u6f0f","text":"<p>\u4ec0\u4e48\u662f\u5185\u5b58\u6cc4\u6f0f\uff1f</p> <p>\u7533\u8bf7\u4e86\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\uff0c\u4f7f\u7528\u5b8c\u6bd5\u4e4b\u540e\u6ca1\u6709\u91ca\u653e\u6389\u3002\u8868\u73b0\u5728\u5b8f\u89c2\u4e0a\u4e3a\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4\u8d8a\u957f\u5360\u7528\u7684\u5185\u5b58\u8d8a\u591a\uff1a\u7a0b\u5e8f\u7533\u8bf7\u4e86\u4e00\u5757\u5185\u5b58\uff0c\u4f46\u5728\u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5b83\uff0c\u90a3\u4e48\u8fd9\u5757\u5185\u5b58\u5c31\u6cc4\u6f0f\u4e86\u3002</p> <p>\u5982\u4f55\u5224\u65ad\uff1f</p> <ul> <li>\u826f\u597d\u7684\u7f16\u7801\u4e60\u60ef\uff0c\u4f7f\u7528\u4e86\u5185\u5b58\u5206\u914d\u7684\u51fd\u6570\u540e\uff0c\u4f7f\u7528\u5b8c\u6bd5\u8bb0\u5f97\u4f7f\u7528\u76f8\u5e94\u51fd\u6570\u91ca\u653e\u6389\u3002</li> <li>\u5c06\u5206\u914d\u7684\u5185\u5b58\u6307\u9488\u7528\u94fe\u8868\u7684\u5f62\u5f0f\u81ea\u884c\u7ba1\u7406\uff0c\u4f7f\u7528\u5b8c\u6bd5\u540e\u4ece\u94fe\u8868\u4e2d\u5220\u9664\uff0c\u8fd9\u6837\u5728\u7a0b\u5e8f\u7ed3\u675f\u4e4b\u540e\u53ef\u4ee5\u7edf\u4e00\u68c0\u67e5\u94fe\u8868\u3002</li> </ul>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#816-malloc-free","title":"8.1.6 <code>malloc</code> \u548c free","text":"<p>malloc \u5411\u7cfb\u7edf\u7533\u8bf7\u5206\u914d\u6240\u6307\u5b9a size \u4e2a\u5b57\u8282\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u8fd4\u56de\u7c7b\u578b\u4e3a <code>void *</code> \u7c7b\u578b\uff0c\u4e5f\u5c31\u662f\u672a\u6307\u5b9a\u7c7b\u578b\u7684\u6307\u9488\uff0c\u800c C/C++\u4e2d\u89c4\u5b9a\uff0c<code>void *</code> \u7c7b\u578b\u53ef\u4ee5\u5f3a\u8f6c\u4e3a\u4efb\u4f55\u5176\u4ed6\u7c7b\u578b\u7684\u6307\u9488\u3002</p>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#9","title":"9 \u9884\u5904\u7406","text":"","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#91-error","title":"9.1 <code>#error</code>","text":"<p>\u7f16\u8bd1\u7a0b\u5e8f\u7684\u65f6\u5019\u9047\u5230 <code>#error</code> \u5219\u4f1a\u751f\u6210\u4e00\u4e2a\u7f16\u8bd1\u9519\u8bef\u7684\u63d0\u793a\u6d88\u606f\uff0c\u5e76\u505c\u6b62\u7f16\u8bd1</p> <pre><code>#error [\u81ea\u5df1\u5b9a\u4e49\u7684 error-message]\n</code></pre> <p>\u4f7f\u7528\u573a\u666f\uff1a</p> <p>\u7a0b\u5e8f\u8f83\u5927\u7684\u65f6\u5019\uff0c\u5f88\u591a\u5b8f\u5b9a\u4e49\u662f\u5728\u5916\u90e8\u6307\u5b9a\u7684\uff0c\u6bd4\u5982 <code>makefile</code> \u4e2d\u6216\u662f\u5176\u4ed6\u7cfb\u7edf\u5934\u6587\u4ef6\u4e2d\u6307\u5b9a\u7684\uff0c\u4e0d\u592a\u786e\u5b9a\u4e00\u4e2a\u5b8f\u662f\u5426\u6709\u88ab\u5b9a\u4e49\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u4f7f\u7528 <code>#error</code></p>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#92-define","title":"9.2 \u4f7f\u7528 <code>#define</code> \u58f0\u660e\u5e38\u6570\uff0c\u907f\u514d\u6570\u636e\u6ea2\u51fa\u95ee\u9898","text":"<p>\u4f8b\u5982\u4e00\u5e74\u542b\u591a\u5c11\u79d2\uff1a</p> <pre><code>#define SEC_PER_YEAR (60*60*24*365) UL\n</code></pre>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#93-include-filenameh-include-filename-h","title":"9.3 <code>#include &lt;filename.h&gt;</code> \u548c <code>#include \"filename. h\"</code> \u7684\u533a\u522b","text":"<ul> <li>\u5e26 <code>&lt;&gt;</code> \u7684\u7f16\u8bd1\u5668\u5c06\u4f1a\u5148\u4ece\u6807\u51c6\u5e93\u8def\u5f84\u5f00\u59cb\u641c\u7d22\uff0c\u7cfb\u7edf\u6587\u4ef6\u8c03\u7528\u8f83\u5feb</li> <li>\u5e26 <code>\"\"</code> \u7684\u7f16\u8bd1\u5668\u5c06\u4f1a\u4ece\u7528\u6237\u5de5\u4f5c\u8def\u5f84\u5f00\u59cb\u641c\u7d22\uff0c\u81ea\u5b9a\u4e49\u6587\u4ef6\u8c03\u7528\u8f83\u5feb</li> </ul>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#94","title":"9.4 \u5934\u6587\u4ef6\u7684\u4f5c\u7528","text":"<ol> <li>\u901a\u8fc7\u5934\u6587\u4ef6\u6765\u8c03\u7528\u5e93\u529f\u80fd\uff0c\u5728\u9700\u8981\u4fdd\u5bc6\u6e90\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u5373\u53ef\u5411\u7528\u6237\u63d0\u4f9b\u5934\u6587\u4ef6\u548c\u4e8c\u8fdb\u5236\u5e93\u5373\u53ef\uff0c\u7528\u6237\u53ea\u9700\u8981\u6309\u7167\u5934\u6587\u4ef6\u7684\u63a5\u53e3\u58f0\u660e\u6765\u8c03\u7528\u5e93\u529f\u80fd\u5373\u53ef\uff0c\u7f16\u8bd1\u5668\u4f1a\u4ece\u4e8c\u8fdb\u5236\u5e93\u4e2d\u63d0\u53d6\u5bf9\u5e94\u7684\u5b9e\u73b0</li> <li>\u5934\u6587\u4ef6\u80fd\u591f\u52a0\u5f3a\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\u3002\u5f53\u67d0\u4e2a\u63a5\u53e3\u88ab\u5b9e\u73b0\u6216\u88ab\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u5176\u65b9\u5f0f\u82e5\u4e0e\u5934\u6587\u4ef6\u4e2d\u7684\u58f0\u660e\u4e0d\u4e00\u81f4\uff0c\u7f16\u8bd1\u5668\u5c31\u4f1a\u6307\u51fa\u9519\u8bef\uff0c\u51cf\u8f7b\u7a0b\u5e8f\u5458\u8c03\u8bd5\u3001\u6539\u9519\u7684\u5de5\u4f5c\u91cf</li> </ol>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#95","title":"9.5 \u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u9759\u6001\u53d8\u91cf\u53ef\u884c\u5417","text":"<p>\u4e0d\u53ef\u884c\uff0c\u4e00\u662f\u4f1a\u9020\u6210\u8d44\u6e90\u6d6a\u8d39\uff0c\u4e8c\u662f\u4e5f\u53ef\u80fd\u5f15\u8d77\u7a0b\u5e8f\u9519\u8bef\u3002</p> <p>\u5982\u679c\u5728\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86\u9759\u6001\u53d8\u91cf\u7684\u8bdd\uff0c\u6309\u7167\u7f16\u8bd1\u7684\u987a\u5e8f\uff0c\u5728\u6bcf\u4e2a\u4f7f\u7528\u4e86\u8be5\u5934\u6587\u4ef6\u7684 <code>. c</code> \u6587\u4ef6\u90fd\u4f1a\u5355\u72ec\u5b58\u5728\u4e00\u4e2a\u9759\u6001\u53d8\u91cf\uff0c\u4f1a\u5f15\u8d77\u7a7a\u95f4\u6d6a\u8d39\u4ee5\u53ca\u7a0b\u5e8f\u9519\u8bef</p> <p>\u56e0\u6b64\u4e0d\u63a8\u8350\u5728\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4efb\u4f55\u53d8\u91cf\uff0c\u4e5f\u5305\u62ec\u9759\u6001\u53d8\u91cf</p>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#96-min","title":"9.6 \u5199\u6807\u51c6\u5b8f MIN\uff0c\u8fd4\u56de\u4f20\u5165\u7684\u4e24\u4e2a\u53c2\u6570\u4e2d\u8f83\u5c0f\u7684\u90a3\u4e00\u4e2a","text":"<pre><code>#define MIN\uff08A, B\uff09 ((A) &lt;= (B) ? (A) : (B))\n</code></pre>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#97","title":"9.7 \u5b8f\u4e2d\u7684 <code>#</code> \u4ee5\u53ca <code>##</code> \u7684\u7528\u6cd5","text":"<p><code>#</code> \u5b57\u7b26\u4e32\u5316\u64cd\u4f5c\u7b26</p> <p>\u53ef\u4ee5\u5c06\u4e00\u4e2a\u5b8f\u53c2\u6570\u76f4\u63a5\u8f6c\u6362\u6210\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32</p> <pre><code>#define CONVERT (a) #a\nint test = 10;\nprintf (CONVERT (test));\n/* \u2193\u548c\u8fd9\u53e5\u4e00\u6837\u2193 */\nprintf (\"test\");\n</code></pre> <p>\u6700\u540e\u8f93\u51fa\u7684\u662f\u5b8f\u53c2\u6570\u7684\u53c2\u6570\u540d</p> <p><code>##</code> \u7b26\u53f7\u8fde\u63a5\u64cd\u4f5c\u7b26</p> <p>\u53ef\u4ee5\u5c06\u5b8f\u5b9a\u4e49\u7684\u591a\u4e2a\u5f62\u53c2\u8f6c\u6362\u6210\u4e00\u4e2a\u5b9e\u9645\u53c2\u6570\u540d\u3002</p> <pre><code>#define CAT (a, b) a##b\nint num5 = 20;\nprintf (\"%d\\n\", CAT (num, 5));\n/* \u2193\u548c\u8fd9\u53e5\u4e00\u6837\u2193 */\nprintf (\"%d\\n\", num5);\n</code></pre>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#10-isr","title":"10 ISR \u6240\u6d89\u53ca\u7684\u8003\u70b9","text":"<p>\u8003\u8651\u4e00\u6bb5\u4e2d\u65ad\u670d\u52a1\u51fd\u6570\uff0c\u6307\u51fa\u9519\u8bef\uff1a</p> <pre><code>__interrupt double compute_area(double radius)\n{\n    double area PI * radius * radius;\n    printf(\"Area = %f\\n\", area);\n    return area;\n}\n</code></pre> <ol> <li>ISR \u4e0d\u80fd\u6709\u8fd4\u56de\u503c\uff0c\u4e5f\u4e0d\u80fd\u4f20\u9012\u53c2\u6570</li> <li>ISR \u5e94\u5f53\u5feb\u8fdb\u5feb\u51fa\uff0c\u4e0d\u63a8\u8350\u8fdb\u884c\u6d6e\u70b9\u8fd0\u7b97</li> <li><code>printf()</code> \u662f\u4e0d\u53ef\u91cd\u5165\u51fd\u6570\uff0c\u4e0d\u80fd\u5728 ISR \u4e2d\u4f7f\u7528</li> </ol> <p>\u4e0d\u53ef\u91cd\u5165\u51fd\u6570\uff1a</p> <p>\u6307\u7684\u662f\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u4f1a\u6539\u53d8\u5168\u5c40\u53d8\u91cf\u6216\u9759\u6001\u53d8\u91cf\u72b6\u6001\u7684\u51fd\u6570\uff0c\u4f7f\u5f97\u51fd\u6570\u7684\u518d\u6b21\u8c03\u7528\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0d\u53ef\u9884\u6d4b\u7684\u7ed3\u679c\uff0c\u8be5\u7c7b\u51fd\u6570\u901a\u5e38\u4f9d\u8d56\u4e8e\u5185\u90e8\u72b6\u6001\u6216\u5171\u4eab\u8d44\u6e90\uff0c\u5982\u6587\u4ef6\u6307\u9488\u3001\u5185\u5b58\u7f13\u51b2\u533a\u3001\u73af\u5883\u53d8\u91cf\u7b49</p> <p>\u4e0d\u53ef\u91cd\u5165\u51fd\u6570\u7684\u4e3b\u8981\u95ee\u9898\u662f\u5b83\u4eec\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u4e0d\u80fd\u4fdd\u8bc1\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\u88ab\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8c03\u7528\u65f6\u7684\u6b63\u786e\u6027\u3002\u5728\u591a\u4efb\u52a1\u6216\u591a\u7ebf\u7a0b\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u636e\u7ade\u4e89\u3001\u8d44\u6e90\u51b2\u7a81\u6216\u5176\u4ed6\u540c\u6b65\u95ee\u9898\u3002</p> <p>ISR \u901a\u5e38\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u8981\u6c42\uff1a</p> <ol> <li>\u5feb\u901f\u6267\u884c\uff1aISR \u5e94\u8be5\u5c3d\u53ef\u80fd\u5feb\u5730\u6267\u884c\u5b8c\u6bd5\uff0c\u4ee5\u51cf\u5c11\u5bf9\u7cfb\u7edf\u5176\u4ed6\u90e8\u5206\u7684\u5e72\u6270\u3002</li> <li>\u6700\u5c0f\u5316\u8d44\u6e90\u4f7f\u7528\uff1aISR \u5e94\u8be5\u907f\u514d\u4f7f\u7528\u53ef\u80fd\u88ab\u4e3b\u7a0b\u5e8f\u6216\u5176\u4ed6\u4e2d\u65ad\u5171\u4eab\u7684\u8d44\u6e90\u3002</li> <li>\u907f\u514d\u963b\u585e\uff1aISR \u4e0d\u5e94\u8be5\u6267\u884c\u53ef\u80fd\u5bfc\u81f4\u963b\u585e\u7684\u64cd\u4f5c\uff0c\u5982\u7b49\u5f85 I/O \u64cd\u4f5c\u5b8c\u6210\u3002</li> <li>\u53ef\u91cd\u5165\u6027\uff1aISR \u5e94\u8be5\u53ef\u4ee5\u88ab\u591a\u4e2a\u4e2d\u65ad\u6e90\u6216\u5728\u4e0d\u540c\u7684\u4f18\u5148\u7ea7\u4e0b\u5b89\u5168\u5730\u8c03\u7528\u3002</li> </ol>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#11","title":"11 \u6742\u9879","text":"","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#111-strlen-0-sizeof-0","title":"11.1 <code>strlen (\"\\0\")</code> \u548c <code>sizeof (\"\\0\")</code> \u7684\u533a\u522b","text":"<p>\u524d\u8005\u662f 0\uff0c\u540e\u8005\u662f 2</p> <ul> <li><code>strlen</code> \u662f\u7528\u6765\u8ba1\u7b97\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u7684\uff0c\u4ece\u5185\u5b58\u67d0\u4f4d\u7f6e\u5f00\u59cb\u5f00\u59cb\u626b\u63cf\u5230\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7ed3\u675f\u7b26\uff08<code>\\0</code>\uff09\u4e3a\u6b62\uff0c\u8fd4\u56de\u8ba1\u6570\u503c</li> <li><code>sizeof</code> \u662f\u5173\u952e\u5b57\uff0c\u8fd4\u56de\u64cd\u4f5c\u5bf9\u8c61\u7684\u5b58\u50a8\u5927\u5c0f\uff0c\u64cd\u4f5c\u6570\u7684\u5b58\u50a8\u5927\u5c0f\u7531\u64cd\u4f5c\u6570\u7684\u7c7b\u578b\u51b3\u5b9a\uff0c\u8fd9\u91cc\u56e0\u4e3a\u662f <code>\"\"</code> \u6240\u4ee5\u89c6\u4f5c\u5b57\u7b26\u4e32\uff0c\u9664\u5f00 <code>\\0</code> \u540e\uff0c\u8fd8\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32\u7ed3\u675f\u7b26\uff0c\u6240\u4ee5\u7ed3\u679c\u662f 2</li> <li>\u82e5\u4e3a <code>sizeof('\\0')</code> \u5219\u7ed3\u679c\u4e3a 4\uff0c\u56e0\u4e3a <code>\\0</code> \u7684 ascll \u7801\u4e3a 0\uff0c\u7b49\u4ef7\u4e8e\u6570\u5b57 0\uff0cint \u578b</li> </ul>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#112-struct-union","title":"11.2 <code>struct</code> \u548c <code>union</code> \u7684\u533a\u522b","text":"<p>\u4e24\u8005\u90fd\u662f\u5e38\u89c1\u7684\u590d\u5408\u7ed3\u6784\uff0c\u533a\u522b\u4f53\u73b0\u5728\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762</p> <ul> <li>\u8054\u5408\u4f53\u4e2d\u6240\u6709\u6210\u5458\u5171\u7528\u540c\u4e00\u5757\u5730\u5740\u7a7a\u95f4\uff0c\u8054\u5408\u4f53\u4e2d\u53ea\u5b58\u653e\u4e00\u4e2a\u88ab\u9009\u4e2d\u7684\u6210\u5458</li> <li>\u7ed3\u6784\u4f53\u4e2d\u6240\u6709\u6210\u5458\u7684\u5360\u7528\u7a7a\u95f4\u662f\u7d2f\u52a0\u7684\uff0c\u6240\u6709\u6210\u5458\u90fd\u5b58\u5728\uff1b\u8ba1\u7b97\u7ed3\u6784\u4f53\u7684\u603b\u957f\u5ea6\u7684\u65f6\u5019\u9700\u8981\u8003\u8651\u5b57\u8282\u5bf9\u9f50\uff0c\u800c\u8054\u5408\u4f53\u7684\u53d8\u91cf\u957f\u5ea6\u5219\u7b49\u4e8e\u5176\u6700\u957f\u7684\u6210\u5458\u957f\u5ea6</li> <li>\u5bf9\u8054\u5408\u4f53\u4e0d\u540c\u7684\u6210\u5458\u8d4b\u503c\u7684\u65f6\u5019\uff0c\u5c06\u4f1a\u5bf9\u5176\u4ed6\u6210\u5458\u4e5f\u91cd\u5199\uff0c\u539f\u672c\u5176\u4ed6\u6210\u5458\u7684\u503c\u5c31\u4e0d\u5b58\u5728\u4e86\uff1b\u7ed3\u6784\u4f53\u4e0d\u540c\u6210\u5458\u8d4b\u503c\u4e0d\u4f1a\u76f8\u4e92\u5f71\u54cd</li> </ul>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#113","title":"11.3 \u5de6\u503c\u4ee5\u53ca\u53f3\u503c","text":"<ul> <li>\u5de6\u503c \u53ef\u4ee5\u51fa\u73b0\u5728\u7b49\u53f7\u5de6\u8fb9\u7684\u53d8\u91cf\u6216\u8868\u8fbe\u5f0f\uff0c\u7279\u70b9\u4e3a\u53ef\u5199\uff08\u53ef\u5bfb\u5740\uff09\uff0c\u503c\u53ef\u88ab\u4fee\u6539</li> <li>\u53f3\u503c \u53ea\u53ef\u4ee5\u51fa\u73b0\u5728\u7b49\u53f7\u53f3\u4fa7\u7684\u53d8\u91cf\u6216\u8868\u8fbe\u5f0f\uff0c\u91cd\u8981\u7279\u70b9\u4e3a\u53ef\u8bfb</li> </ul>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#114","title":"11.4 \u6709\u7b26\u53f7\u4e0e\u65e0\u7b26\u53f7\u7684\u8fd0\u7b97","text":"<p>\u6709\u7b26\u53f7\u4e0e\u65e0\u7b26\u53f7\u4e00\u8d77\u8fd0\u7b97\uff0c\u5c06\u5f3a\u8f6c\u4e3a\u65e0\u7b26\u53f7</p>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#115","title":"11.5 \u77ed\u8def\u8ba1\u7b97","text":"<pre><code>int i = 6;\nint j = 1;\nif (i &gt; 0 || (j++) &gt; 0);\nprintf (\"%d\\r\\n\", j);\n</code></pre> <p>\u7ed3\u679c\u4e3a 1 \u800c\u4e0d\u662f 2\uff0c\u56e0\u4e3a if \u4e2d\u5224\u65ad <code>i &gt; 0</code> \u5df2\u7ecf\u4f7f\u5f97\u8be5\u8bed\u53e5\u4e3a true \u4e86\uff0c\u6240\u4ee5\u540e\u9762\u7684 <code>j++</code> \u5219\u4e0d\u9700\u8981\u6267\u884c</p> <p>\u800c\u5bf9\u4e8e <code>&amp;&amp;</code> \u64cd\u4f5c\u7684\u8bdd\uff0c\u82e5\u524d\u4e00\u4e2a\u8bed\u53e5\u7684\u8fd4\u56de\u503c\u4e3a false\uff0c\u5219\u540e\u9762\u7684\u8bed\u53e5\u540c\u7406\u4e5f\u4e0d\u4f1a\u6267\u884c\u3002</p>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#116","title":"11.6 \u5927\u5c0f\u7aef","text":"<p>\u5bf9\u540c\u4e00\u4e2a\u5341\u516d\u4f4d\u6574\u6570 <code>0x1234</code> \u6709\u5982\u4e0b\u533a\u522b\uff1a</p> <p>\u5927\u7aef \u9ad8\u5730\u5740\u5b58\u4f4e\u5b57\u8282\uff0c\u4f4e\u5730\u5740\u5b58\u9ad8\u5b57\u8282</p> <pre><code>\u5185\u5b58\u5730\u5740 | \u6570\u636e\n0x00       0x12\n0x01       0x34\n</code></pre> <p>\u5c0f\u7aef \u4f4e\u5730\u5740\u5b58\u4f4e\u5b57\u8282\uff0c\u9ad8\u5730\u5740\u5b58\u9ad8\u5b57\u8282</p> <pre><code>\u5185\u5b58\u5730\u5740 | \u6570\u636e\n0x00       0x34\n0x01       0x12\n</code></pre>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#117-aa","title":"11.7 <code>++a/a++</code> \u7684\u5b9e\u73b0\uff1a","text":"<p>a++\uff1a</p> <pre><code>int temp = a;\na = a + 1;\nreturn temp;\n</code></pre> <p>++a\uff1a</p> <pre><code>a = a + 1;\nreturn a;\n</code></pre>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#118-c","title":"11.8 C \u8bed\u8a00\u7f16\u8bd1\u8fc7\u7a0b","text":"<ol> <li>\u9884\u5904\u7406\uff1a \u5c55\u5f00\u5b8f\u548c\u5934\u6587\u4ef6\uff0c\u751f\u6210 <code>.i\u6587\u4ef6</code></li> <li>\u7f16\u8bd1\uff1a \u7f16\u8bd1\u5668\u5bf9\u9884\u5904\u7406\u540e\u7684\u6e90\u4ee3\u7801\u8fdb\u884c\u8bcd\u6cd5\u3001\u8bed\u6cd5\u3001\u8bed\u4e49\u5206\u6790\u3001\u4f18\u5316\uff0c\u6700\u540e\u7ffb\u8bd1\u4e3a\u6c47\u7f16\u7801\uff0c\u751f\u6210 <code>.s\u6587\u4ef6</code></li> <li>\u6c47\u7f16\uff1a \u6c47\u7f16\u5c06\u6c47\u7f16\u7801\u8f6c\u6362\u4e3a\u673a\u5668\u7801\uff0c\u751f\u6210 <code>.o\u6587\u4ef6</code></li> <li>\u94fe\u63a5\uff1a \u94fe\u63a5\u5668\u5c06\u591a\u4e2a\u76ee\u6807\u548c\u5e93\u6587\u4ef6\u7b49\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u89e3\u51b3\u5916\u90e8\u5f15\u7528\uff0c\u6700\u540e\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6</li> </ol> <p>\u2014\u2014\u7f16\u8bd1\u7ec6\u8282\uff1a</p> <ul> <li>\u8bcd\u6cd5\uff1a \u7f16\u8bd1\u8fc7\u7a0b\u7684\u7b2c\u4e00\u4e2a\u9636\u6bb5\uff0c\u53ea\u5173\u6ce8\u6e90\u4ee3\u7801\u7684\u5b57\u7b26\u5e8f\u5217\uff1b\u5c06\u5176\u5206\u5272\u4e3a\u4e00\u7cfb\u5217\u7684\u6807\u8bb0\u6216\u8bcd\u6c47\uff0c\u4e0d\u5173\u5fc3\u4ee3\u7801\u7684\u8bed\u6cd5\u7ed3\u6784\uff0c\u53ea\u505a\u5206\u7c7b\u4ee5\u53ca\u8bc6\u522b\u5355\u8bcd\uff08\u5173\u952e\u5b57\u3001\u6807\u8bc6\u7b26\u3001\u5e38\u91cf\u3001\u8fd0\u7b97\u7b26\uff09\u7684\u5de5\u4f5c\uff0c\u4e3a\u540e\u7ee7\u6b65\u9aa4\u63d0\u4f9b\u8f93\u5165\u3002</li> <li>\u8bed\u6cd5\uff1a \u5173\u6ce8\u6e90\u4ee3\u7801\u7684\u7ed3\u6784\u548c\u987a\u5e8f\uff1b\u4f7f\u7528\u8bcd\u6cd5\u7684\u8f93\u51fa\u6765\u6784\u5efa\u62bd\u8c61\u8bed\u6cd5\u6811\u3002\u8be5\u6811\u72b6\u7ed3\u6784\u5c55\u793a\u4e86\u4ee3\u7801\u7684\u8bed\u6cd5\u5c42\u6b21\u4ee5\u53ca\u6784\u6210\u89c4\u5219\uff08\u8bc6\u522b\u51fd\u6570\u5b9a\u4e49\u3001\u8868\u8fbe\u5f0f\u3001\u63a7\u5236\u6d41\u8bed\u53e5\u7b49\uff09</li> <li>\u8bed\u4e49\uff1a \u5173\u6ce8\u4ee3\u7801\u542b\u4e49\u3001\u903b\u8f91\uff1b\u4f7f\u7528\u62bd\u8c61\u8bed\u6cd5\u6811\u6765\u68c0\u67e5\u8bed\u4e49\u9519\u8bef\u2014\u2014\u8bf8\u5982\u7c7b\u578b\u4e0d\u5339\u914d\u3001\u672a\u5b9a\u4e49\u7684\u5f15\u7528\u3001\u9519\u8bef\u7684\u8868\u8fbe\u5f0f\u4f7f\u7528\u3002</li> </ul> <p>\u2014\u2014\u94fe\u63a5\u7ec6\u8282\uff1a</p> <ul> <li>\u76ee\u6807\u6587\u4ef6\uff1a <code>. o \u6587\u4ef6</code> \u662f\u7f16\u8bd1\u5668\u751f\u6210\u7684\u4e2d\u95f4\u4ea7\u7269\uff0c\u5305\u542b\u4e86\u6e90\u4ee3\u7801\u7f16\u8bd1\u540e\u7684\u673a\u5668\u7801\uff0c\u4f46\u672a\u89e3\u51b3\u5916\u90e8\u5f15\u7528\uff0c\u6bcf\u4e2a\u7f16\u8bd1\u7684\u6e90\u6587\u4ef6\u901a\u5e38\u4f1a\u751f\u6210\u4e00\u4e2a\u5bf9\u5e94\u7684\u76ee\u6807\u6587\u4ef6\u3002</li> <li>\u5e93\u6587\u4ef6\uff1a \u4e00\u822c\u5e93\u6587\u4ef6\u662f\u4e00\u7ec4\u7f16\u8bd1\u597d\u7684\u4ee3\u7801\u7684\u96c6\u5408\uff0c\u53ef\u4ee5\u662f\u9759\u6001\u5e93\uff08<code>. a</code> \uff09\u6216\u52a8\u6001\u5e93\uff08 <code>. so</code> \uff09\u3002\u5305\u542b\u4e86\u591a\u4e2a\u76ee\u6807\u6587\u4ef6\u7684\u96c6\u5408\uff0c\u4ee3\u7801\u53ef\u4ee5\u88ab\u591a\u4e2a\u4e0d\u540c\u7684\u7a0b\u5e8f\u5171\u4eab\u4ee5\u53ca\u91cd\u7528\u3002</li> </ul>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#119-strcpy","title":"11.9 \u81ea\u884c\u5b9e\u73b0 <code>strcpy</code> \u51fd\u6570","text":"<pre><code>char* mystrcpy (char* strDest, const char *strSrc)    /* const \u4fee\u9970\u62f7\u8d1d\u5b57\u7b26\u4e32 */\n{\n    assert ((strDest != NULL) &amp;&amp; (strSrc != NULL));   /* \u68c0\u67e5\u6709\u6548\u6027 */\n    char* address = strDest;                         /* \u5934\u6307\u9488 */\n    while ((*strDest++ = *strSrc++) != 0);            /* \u8f6c\u79fb\uff0c\u4e0d\u4fee\u6539 src \u5b57\u7b26\u4e32 */\n    return address;                                  /* \u94fe\u5f0f\u8868\u8fbe\uff0c\u63d0\u9ad8\u53ef\u7528*/\n}\n</code></pre> <p>\u8c03\u7528\u4e3e\u4f8b\uff1a</p> <pre><code>int length = strlen (mystrcpy (str, \"Hello World\"))\uff1b\n</code></pre>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#1110-sizeof","title":"11.10 \u81ea\u884c\u5b9e\u73b0 <code>sizeof</code> \u5b8f\u5b9a\u4e49","text":"<pre><code>#define mysizeof(val) (char*)(&amp;val + 1) - (char*)&amp;val\n</code></pre> <p>\u5b9e\u73b0\u601d\u8def\uff1a\u8ba1\u7b97\u5730\u5740\u504f\u79fb\u91cf\uff0c\u4ece\u800c\u5f97\u51fa val \u7684\u7c7b\u578b\u6570\u636e\u5927\u5c0f\u3002</p>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240918-C%E8%AF%AD%E8%A8%80%E5%85%AB%E8%82%A1/#12","title":"12 \u5237\u9898","text":"<p> \u672c\u9898\u9009 B\u3002\u8003\u5bdf\u5bf9\u6307\u9488\u7684\u7406\u89e3\u3002\u9996\u5148\u660e\u786e\uff1a\u6307\u9488\u53d8\u91cf\u52a0 1\uff0c\u5373\u5411\u540e\u79fb\u52a8 1 \u4e2a\u4f4d\u7f6e\u8868\u793a\u6307\u9488\u53d8\u91cf\u6307\u5411\u4e0b\u4e00\u4e2a\u6570\u636e\u5143\u7d20\u7684\u9996\u5730\u5740\u3002\u800c\u4e0d\u662f\u5728\u539f\u5730\u5740\u57fa\u7840\u4e0a\u52a0 1\u3002\u4e0b\u9762\u8fd9\u53e5\u4ee3\u7801\u4e2d\uff0c\u76f8\u5f53\u4e8e\u4f20\u5165 point \u51fd\u6570\u7684\u53c2\u6570\u662f\u6570\u7ec4\u7b2c 2 \u4e2a\u5143\u7d20 <code>c[1]</code> \u7684\u9996\u5730\u5740\u3002 <code>point (p+1);</code>  \u56e0\u6b64\u5728\u51fd\u6570\u4e2d\uff1a <code>*p=p[2];</code> <code>p[2]</code> \u662f\u76f8\u5bf9\u4e8e\u4f20\u5165\u7684\u5143\u7d20\u5411\u540e\u79fb\u52a8\u4e86\u4e24\u4e2a\u6570\u636e\u5143\u7d20\u7684\u4f4d\u7f6e\uff0c\u56e0\u6b64\u8fd9\u4e2a <code>p[2]</code> \u5b9e\u9645\u662f\u6570\u7ec4\u4e2d\u7684 <code>c[3]</code> \u3002\u6240\u4ee5\u5728\u8fd9\u91cc\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5c06\u6570\u7ec4 c \u7684\u7b2c4\u4e2a\u5143\u7d20\u7684\u503c\u8d4b\u503c\u7ed9\u6570\u7ec4\u7684\u7b2c2\u4e2a\u5143\u7d20\u3002\u6240\u4ee5\u6570\u7ec4\u53d8\u4e3a1,4,3,4,5\u3002\u4e0b\u9762\u8bbe\u6cd5\u5c06\u6570\u7ec4\u7684\u6570\u636e\u904d\u5386\u8f93\u51fa\u5373\u53ef\u3002 <code>*p++</code> \u7684\u4f5c\u7528\u662f\u5148\u53d6 p \u6307\u5411\u7684\u503c\uff0c\u518d\u5c06\u6307\u9488\u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u6570\u636e\u5143\u7d20\u3002\u56e0\u6b64\u4e0b\u5217\u4ee3\u7801\u53ef\u4ee5\u5c06\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u904d\u5386\u8f93\u51fa\u3002 <code>for(;p&lt;c+5;)    printf(\u201c%d\u201d,*p++);</code> \u7efc\u4e0a\uff0c\u672c\u9898\u9009 B\u3002</p> <p></p> <p></p> <p>\u8bbe\u6bcf\u884c\u6709n\u4e2a\u5143\u7d20\uff0c\u521d\u59cb\u5730\u5740\u4e3ax\uff1b \u5219\uff1a4n+4=140-x\uff1b 9n+9=21c-x\uff1b\u76f8\u51cf\u5f97 5n+5=dc\u8f6c\u6362\u4e3a\u5341\u8fdb\u5236\u4e3a220\uff0c\u65452n+2=88\uff0c\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u4e3a58\uff0c21c-58=1c4</p>","tags":["c","\u516b\u80a1","c\u8bed\u8a00","\u79cb\u62db"]},{"location":"_CS/240923-C%E8%AF%AD%E8%A8%80%E8%87%AA%E7%BC%96%E5%B0%8F%E6%A8%A1%E5%9D%97%E7%AC%94%E8%AE%B0/","title":"240923-C\u8bed\u8a00\u81ea\u7f16\u5c0f\u6a21\u5757\u7b14\u8bb0","text":"","tags":["c\u8bed\u8a00","\u590d\u7528\u6a21\u5757"]},{"location":"_CS/240923-C%E8%AF%AD%E8%A8%80%E8%87%AA%E7%BC%96%E5%B0%8F%E6%A8%A1%E5%9D%97%E7%AC%94%E8%AE%B0/#1","title":"1 \u5b57\u7b26\u4e32\u81ea\u7f16\u534f\u8bae","text":"<p>\u5bf9\u4e8e\u5b57\u7b26\u4e32\u534f\u8bae\uff0c\u4e00\u79cd\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u4e00\u4e2a\u6620\u5c04\u8868\uff08map\uff09\u6216\u8005\u67e5\u627e\u8868\uff08lookup table\uff09\uff0c\u5c06\u5b57\u7b26\u4e32\u547d\u4ee4\u6620\u5c04\u5230\u5bf9\u5e94\u7684\u5904\u7406\u51fd\u6570\u3002\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u4f7f\u7528\u591a\u4e2a\u00a0<code>strstr</code>\u00a0\u548c\u00a0<code>if</code>\u00a0\u8bed\u53e5\uff0c\u4f7f\u4ee3\u7801\u66f4\u52a0\u6e05\u6670\u548c\u6613\u4e8e\u7ef4\u62a4\u3002</p> <pre><code>typedef void (*config_processing_func)(char*);\n\ntypedef struct \n{\n    const char *command;\n    config_processing_func func;\n} cmd_map;\n</code></pre> <ul> <li>\u51fd\u6570\u6307\u9488\u7c7b\u578b\uff0c\u540d\u4e3a <code>config_processing_func</code> \uff0c\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u5f62\u53c2\u4e3a\u5b57\u7b26\u4e32\u6307\u9488</li> <li>\u7ed3\u6784\u4f53\uff0c\u5305\u542b\u9700\u8981\u5339\u914d\u7684 command &amp; \u5904\u7406\u51fd\u6570</li> </ul> <pre><code>static const cmd_map screen_cmd_map[] =\n    {\n        {\"MC+WAN+WIFI=\", wifi_config_processing},\n        {\"MC+WAN+ETH=\", eth_config_processing},\n        {\"MC+TSUM=\", tsum_config_processing},\n        {\"MC+TNUM=\", tnum_config_processing},\n    };\n\n    static const size_t cmd_map_size = sizeof(screen_cmd_map) / sizeof(screen_cmd_map[0]);\n\nfor (size_t i = 0; i &lt; cmd_map_size; i++)\n{\n    char *temp_ptr = strstr((char const *)temp_buffer_ptr, screen_cmd_map[i].command);\n    if (temp_ptr != NULL)\n    {\n        screen_cmd_map[i].func(temp_ptr);\n    }\n}\n</code></pre> <p>\u521b\u5efa\u4e00\u4e2a cmd_map \u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u5176\u5185\u90e8\u6bcf\u4e00\u4e2a\u6210\u5458\u90fd\u662f\u4e00\u4e2a cmd_map \u7ed3\u6784\u4f53\uff0c</p>","tags":["c\u8bed\u8a00","\u590d\u7528\u6a21\u5757"]},{"location":"_Embedded/","title":"Index","text":""},{"location":"_Embedded/#timeline","title":"Timeline","text":"2024-12-05\u00b6 <p>  [ Embedded ] &gt; ESP32&amp;FreeRTOS\u7b14\u8bb0\u4e0e\u82e5\u5e72\u914d\u7f6e</p> 2024-11-28\u00b6 <p>  [ Embedded ] &gt; JLINK\u8c03\u8bd5\u76f8\u5173\u6280\u5de7</p> 2024-11-24\u00b6 <p>  [ Embedded ] &gt; ESP32Light\u5f00\u53d1\u6587\u6863</p> 2024-10-10\u00b6 <p>  [ Embedded ] &gt; \u786c\u4ef6\u8bbe\u8ba1\u76f8\u5173\u77e5\u8bc6</p> 2024-09-24\u00b6 <p>  [ Embedded ] &gt; \u901a\u8baf\u534f\u8bae\u603b\u7ed3</p> 2024-09-23\u00b6 <p>  [ Embedded ] &gt; STM32 \u6742\u9879\u77e5\u8bc6\u70b9</p> 2024-09-05\u00b6 <p>  [ Embedded ] &gt; \u66f4\u65b0storage\u4ee5\u53camqtt\u6a21\u5757\u90e8\u5206\uff0c\u9010\u6b65\u5b9e\u73b0\u79c1\u6709json\u534f\u8bae</p> 2024-08-30\u00b6 <p>  [ Embedded ] &gt; \u5404\u79cd\u901a\u7528\u4e32\u53e3\u603b\u7ebf\u6807\u51c6</p> <p>  [ Embedded ] &gt; \u7f3a\u9677\u68c0\u6d4b\u5149\u6e90\u63a7\u5236\u5668\u5f00\u53d1\u7b14\u8bb0</p> 2024-08-22\u00b6 <p>  [ Embedded ] &gt; ESP32\u5206\u533a\u8868\u53caOTA</p> 2024-08-20\u00b6 <p>  [ Embedded ] &gt; SolidWorks\u5f00\u87ba\u7eb9\u5b54</p> 2024-08-18\u00b6 <p>  [ Embedded ] &gt; \u84dd\u7259\u914d\u7f51\u4ee5\u53casoftAP\u65b9\u5f0f\u914d\u7f51\u63a2\u7d22</p> 2024-08-14\u00b6 <p>  [ Embedded ] &gt; CubeMX+FreeRTOS\u5f00\u53d1\u7b14\u8bb0</p> 2024-07-19\u00b6 <p>  [ Embedded ] &gt; LEDPWM\u53ca\u5e38\u7528\u6307\u793a\u51fd\u6570\u5c01\u88c5</p> 2024-06-26\u00b6 <p>  [ Embedded ] &gt; BM8563 \u9a71\u52a8\u79fb\u690d\uff0cIDF-I2C \u7b14\u8bb0</p> 2024-06-25\u00b6 <p>  [ Embedded ] &gt; \u5361\u5173\u7cfb\u5b58\u50a8\u8bbe\u8ba1</p> 2024-06-19\u00b6 <p>  [ Embedded ] &gt; \u84dd\u7259\u5f00\u53d1</p> 2024-06-18\u00b6 <p>  [ Embedded ] &gt; SNTP \u83b7\u53d6\u65f6\u95f4\u3001AES \u52a0\u5bc6</p> 2024-06-17\u00b6 <p>  [ Embedded ] &gt; IDF \u7684\u4e8b\u4ef6\u5faa\u73af\uff0c\u53ca wifi \u8fd0\u884c\u6d41\u7a0b</p> 2024-06-15\u00b6 <p>  [ Embedded ] &gt; smartconfig\u914d\u7f51</p> 2024-06-03\u00b6 <p>  [ Embedded ] &gt; \u97e6\u6839\u534f\u8baeWiegand</p>"},{"location":"_Embedded/240603-%E9%9F%A6%E6%A0%B9%E5%8D%8F%E8%AE%AEWiegand/","title":"240603-\u97e6\u6839\u534f\u8bae Wiegand","text":"<p>\u97e6\u6839\u534f\u8bae\u662f\u4e00\u79cd\u6570\u636e\u4f20\u8f93\u534f\u8bae\uff0c\u5e38\u5e38\u5e94\u7528\u5728\u95e8\u7981\u63a7\u5236\u7cfb\u7edf\u4e2d\uff0c\u5b9e\u73b0\u8bfb\u5361\u5668\u548c\u63a7\u5236\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\u3002</p>"},{"location":"_Embedded/240603-%E9%9F%A6%E6%A0%B9%E5%8D%8F%E8%AE%AEWiegand/#_1","title":"\u7269\u7406\u5c42","text":"<p>\u97e6\u6839\u63a5\u53e3\u7684\u7269\u7406\u5c42\u4f7f\u7528\u4e09\u6839\u7ebf\uff0c\u5176\u4e2d\u4e24\u6839 D0\u3001D1 \u4e3a\u6570\u636e\u7ebf\uff0c\u4e00\u6839\u4e3a\u5730\u7ebf\u3002</p> <ul> <li>\u5f53\u6ca1\u6709\u6570\u636e\u88ab\u53d1\u9001\u7684\u65f6\u5019\uff0cD0 \u548c D1 \u90fd\u88ab\u4e0a\u62c9\u81f3\u9ad8\u7535\u5e73\uff0c\u901a\u5e38\u4e3a+5VDC</li> <li>\u5f53 0 \u88ab\u53d1\u9001\u7684\u65f6\u5019\uff0cD0 \u51fa\u73b0\u8d1f\u8109\u51b2\uff0cD1 \u4f1a\u4fdd\u6301\u5728\u9ad8\u7535\u5e73</li> <li>\u5f53 1 \u88ab\u53d1\u9001\u7684\u65f6\u5019\uff0cD1 \u51fa\u73b0\u8d1f\u8109\u51b2\uff0cD2 \u4f1a\u4fdd\u6301\u5728\u9ad8\u7535\u5e73</li> </ul>"},{"location":"_Embedded/240603-%E9%9F%A6%E6%A0%B9%E5%8D%8F%E8%AE%AEWiegand/#_2","title":"\u534f\u8bae","text":""},{"location":"_Embedded/240603-%E9%9F%A6%E6%A0%B9%E5%8D%8F%E8%AE%AEWiegand/#26","title":"\u97e6\u6839 26 \u7801","text":"<ul> <li>E \u4e3a bit1 ~ bit12\u7684\u5076\u6821\u9a8c</li> <li>X \u4e3a\u4e09\u4e2a\u5b57\u8282\u7684\u5361\u53f7\u4fe1\u606f</li> <li>O \u4e3a bit13 ~ bit24\u7684\u5947\u6821\u9a8c</li> </ul>"},{"location":"_Embedded/240603-%E9%9F%A6%E6%A0%B9%E5%8D%8F%E8%AE%AEWiegand/#34","title":"\u97e6\u6839 34 \u7801","text":"<ul> <li>E \u4e3a bit1 ~ bit16\u7684\u5076\u6821\u9a8c</li> <li>X \u4e3a ID \u5361\u4e24\u4e2a\u5b57\u8282\u7684 HID \u7801\uff08Hidden ID code\uff09</li> <li>Y \u4e3a ID \u5361\u4e24\u4e2a\u5b57\u8282\u7684 PID \u7801\uff08Public ID code\uff09</li> <li>O \u4e3a bit17 ~ bit32 \u7684\u5947\u6821\u9a8c</li> </ul>"},{"location":"_Embedded/240615-smartconfig%E9%85%8D%E7%BD%91/","title":"240615-smartconfig \u914d\u7f51","text":""},{"location":"_Embedded/240615-smartconfig%E9%85%8D%E7%BD%91/#1","title":"1 \u914d\u7f51\u6d4b\u8bd5","text":"<p>API \u53c2\u8003\uff1a https://docs.espressif.com/projects/esp-idf/zh_CN/v5.2.2/esp32s3/api-reference/network/esp_smartconfig.html</p> <p>\u5b98\u65b9\u4f8b\u7a0b\uff1a https://github.com/espressif/esp-idf/tree/v5.2.2/examples/wifi/smart_config</p> <p>\u5bf9\u4e8e\u6ca1\u6709\u56fe\u5f62\u754c\u9762\u7684\u65e0\u5934\u8bbe\u5907\u6765\u8bf4\uff0csmartconfig \u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u901a\u8fc7\u5176\u4ed6\u7ec8\u7aef\uff08\u5982\u624b\u673a\u7535\u8111\u5e73\u677f\uff09\u5e7f\u64ad\u7ed9\u672a\u914d\u7f51\u7684\u8bbe\u5907\uff1b\u5e76\u4e14 IDF \u7684 smartconfig \u63a5\u53e3\u8fd8\u540c\u65f6\u652f\u6301\u5fae\u4fe1\u7684 airkiss \u914d\u7f51\u65b9\u5f0f\u3002</p> <p>\u5728\u5b9e\u9645\u6d4b\u8bd5\u7684\u65f6\u5019\u5b58\u5728\u5e7f\u64ad\u4e0d\u7a33\u5b9a\u7684\u60c5\u51b5\uff0c\u4e0d\u8fc7\u51e0\u7387\u8f83\u5c0f\uff0c\u5931\u8d25\u540e\u91cd\u65b0\u914d\u7f51\u5373\u53ef\u3002\u5bf9\u4e8e\u96c6\u6210\u5230\u5fae\u4fe1\u7684\u914d\u7f51\u65b9\u5f0f\u4ecd\u5f85\u6d4b\u8bd5\u3002</p>"},{"location":"_Embedded/240617-IDF%20%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%EF%BC%8C%E5%8F%8A%20wifi%20%E8%BF%90%E8%A1%8C%E6%B5%81%E7%A8%8B/","title":"240617-IDF \u7684\u4e8b\u4ef6\u5faa\u73af\uff0c\u53ca wifi \u8fd0\u884c\u6d41\u7a0b","text":""},{"location":"_Embedded/240617-IDF%20%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%EF%BC%8C%E5%8F%8A%20wifi%20%E8%BF%90%E8%A1%8C%E6%B5%81%E7%A8%8B/#1","title":"1 \u4e8b\u4ef6\u5faa\u73af","text":"<p>API \u53c2\u8003\uff1a https://docs.espressif.com/projects/esp-idf/zh_CN/v5.2.2/esp32s3/api-reference/system/esp_event.html</p> <p>wifi \u4f7f\u7528\u7684\u4e8b\u4ef6\u5faa\u73af\uff0c\u53c2\u8003\u535a\u5ba2\uff1a https://blog.csdn.net/m0_63235356/article/details/137833228</p> <p>\u7c7b\u4f3c\u4e8e FreeRTOS \u7684\u4e8b\u4ef6\u7ec4\uff0cIDF \u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u5faa\u73af\u5e93\uff0c\u4f7f\u5f97\u7ec4\u4ef6\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u76d1\u542c\u4e8b\u4ef6\u7684\u53d1\u751f\u6216\u53d1\u5e03\u4e8b\u4ef6\u3002</p> <p>IDF \u7ef4\u62a4\u4e00\u4e2a\u7279\u6b8a\u7684\u4e8b\u4ef6\u5faa\u73af\uff0c\u88ab\u79f0\u4f5c <code>\u9ed8\u8ba4\u4e8b\u4ef6\u5faa\u73af</code> \u3002\u8be5\u5faa\u73af\u7528\u4e8e\u5904\u7406\u5404\u79cd\u5e38\u89c1\u7684\u7cfb\u7edf\u4e8b\u4ef6\u3002\u7528\u6237\u4e0d\u80fd\u64cd\u4f5c\u8be5\u5faa\u73af\u7684\u53e5\u67c4\uff0c\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u901a\u8fc7\u4e8b\u4ef6\u5faa\u73af\u7684\u53d8\u4f53 API \u5b8c\u6210\uff0c\u4e0b\u8868\u4e3a\u53d8\u4f53\u4e0e\u539f\u672c\u7684 API \u5bf9\u7167\uff1a</p> \u7528\u6237\u4e8b\u4ef6\u5faa\u73af \u9ed8\u8ba4\u4e8b\u4ef6\u5faa\u73af <code>esp_event_loop_create ()</code> <code>esp_event_loop_create_default ()</code> <code>esp_event_loop_delete ()</code> <code>esp_event_loop_delete_default ()</code> <code>esp_event_handler_register_with ()</code> <code>esp_event_handler_register ()</code> <code>esp_event_handler_unregister_with ()</code> <code>esp_event_handler_unregister ()</code> <code>esp_event_post_to ()</code> <code>esp_event_post ()</code>"},{"location":"_Embedded/240617-IDF%20%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%EF%BC%8C%E5%8F%8A%20wifi%20%E8%BF%90%E8%A1%8C%E6%B5%81%E7%A8%8B/#2-idf-wifi","title":"2 IDF \u4e2d\u7684 wifi \u8fd0\u884c\u903b\u8f91","text":"<p>\u5b98\u65b9 wifi \u9a71\u52a8\u7a0b\u5e8f\u6307\u5357\uff0c\u7f57\u5217\u4e86\u9ed8\u8ba4\u4e8b\u4ef6\u5faa\u73af\u4e2d\u7684 wifi \u4e8b\u4ef6\uff1a https://docs.espressif.com/projects/esp-idf/zh_CN/v5.2.2/esp32s3/api-guides/wifi.html#id6</p> <p>\u5b98\u65b9\u5173\u4e8e wifi \u7684 demo \uff1a https://github.com/espressif/esp-idf/tree/v5.2.2/examples/wifi</p>"},{"location":"_Embedded/240617-IDF%20%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%EF%BC%8C%E5%8F%8A%20wifi%20%E8%BF%90%E8%A1%8C%E6%B5%81%E7%A8%8B/#21","title":"2.1 \u521d\u59cb\u5316","text":"<p>LwIP for Lightweight TCP/IP stack</p> <p>LwIP \u6027\u80fd\u8981\u6c42\u53ea\u6709\u6570\u5341 KB \u53ef\u7528 RAM \u548c\u5927\u81f4 40KB \u53ef\u7528 ROM \u7a7a\u95f4\u5373\u53ef</p> <p>\u8fd9\u4e00\u9636\u6bb5\u6ca1\u6709\u4ec0\u4e48\u9700\u8981\u6539\u52a8\u7684\uff0c\u6ce8\u610f\u4e00\u4e0b\u521d\u59cb\u5316\u987a\u5e8f\u5c31\u597d\uff0c\u5957\u63a5\u5b57\u4e00\u822c\u5728\u83b7\u5f97\u5230 IP \u4e4b\u540e\u518d\u521b\u5efa</p>"},{"location":"_Embedded/240617-IDF%20%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%EF%BC%8C%E5%8F%8A%20wifi%20%E8%BF%90%E8%A1%8C%E6%B5%81%E7%A8%8B/#22","title":"2.2 \u914d\u7f6e","text":"<p>\u9700\u8981\u6ce8\u610f\u8c03\u7528\u914d\u7f6e API \u4e4b\u540e\u4f1a\u5c06 wifi \u65ad\u5f00\uff0c\u4e00\u822c\u5728\u5efa\u7acb\u8fde\u63a5\u4e4b\u524d\u914d\u7f6ewifi</p>"},{"location":"_Embedded/240617-IDF%20%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%EF%BC%8C%E5%8F%8A%20wifi%20%E8%BF%90%E8%A1%8C%E6%B5%81%E7%A8%8B/#23","title":"2.3 \u542f\u52a8","text":"<p>\u542f\u52a8 wifi \u9a71\u52a8\u7a0b\u5e8f\uff0c\u6b64\u65f6\u4f1a\u53d1\u5e03\u4e00\u4e2a <code>WIFI_EVENT_STA_START</code> \u7684\u4e8b\u4ef6\uff0c\u53ef\u4ee5\u5728\u8be5\u4e8b\u4ef6\u53d1\u751f\u4e4b\u540e\u8c03\u7528\u51fd\u6570\u8fdb\u884c wifi \u7684\u8fde\u63a5</p>"},{"location":"_Embedded/240617-IDF%20%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%EF%BC%8C%E5%8F%8A%20wifi%20%E8%BF%90%E8%A1%8C%E6%B5%81%E7%A8%8B/#24","title":"2.4 \u8fde\u63a5","text":"<p>\u8c03\u7528 connect \u51fd\u6570\u4e4b\u540e\u5c06\u4f1a\u89e6\u53d1 <code>CONNECTED</code> \u4e8b\u4ef6\uff0c\u5e76\u7531\u9ed8\u8ba4\u4e8b\u4ef6\u5faa\u73af\u542f\u52a8 DHCP \u5ba2\u6237\u7aef\u670d\u52a1\uff0c\u5f00\u59cb\u5c1d\u8bd5\u83b7\u53d6 IP</p> <p>DHCP \u534f\u8bae\u4f7f\u7528 UDP \u4f5c\u4e3a\u4f20\u8f93\u534f\u8bae\uff0c\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u7aef\u53d1\u9001\u8bf7\u6c42\uff0c\u670d\u52a1\u7aef\u5e94\u7b54\u3002\u5ba2\u6237\u7aef\u5e7f\u64ad DHCP DISCOVER \u62a5\u6587\u7ed9\u670d\u52a1\u7aef\uff0c\u6b64\u65f6\uff0c\u4e0e\u5ba2\u6237\u7aef\u5728\u540c\u4e00\u4e2a\u7f51\u6bb5\u7684 DHCP \u670d\u52a1\u7aef\u624d\u53ef\u4ee5\u63a5\u6536\u5230\u62a5\u6587\uff0c\u5982\u679c\u4e0d\u5728\u7684\u8bdd\u9700\u8981 DHCP \u4e2d\u7ee7</p> <p>\u603b\u4e4b DHCP \u670d\u52a1\u7aef\u4f1a\u7ed9\u5ba2\u6237\u7aef\u5206\u914d\u4e00\u4e2a IP\uff0c\u4e00\u822c\u5c40\u57df\u7f51\u8def\u7531\u5668\u9ed8\u8ba4\u5f00\u542f DHCP \u670d\u52a1\u7aef\u529f\u80fd</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u5065\u58ee\u7684 wifi \u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\uff0c\u6b64\u65f6\u6ce8\u610f\u8981\u5904\u7406\u53ef\u80fd\u53d1\u751f\u7684 <code>DISCONNECTED</code> \u4e8b\u4ef6\uff0c\u4e00\u65e6\u53d1\u751f <code>DISCONNECTED</code> \u4e8b\u4ef6\uff0c\u9ed8\u8ba4\u4e8b\u4ef6\u5faa\u73af\u4efb\u52a1\u5c06\u4f1a\u79fb\u9664\u6240\u6709 UDP/ICP \u8fde\u63a5\uff0c\u6b64\u65f6\u6240\u6709\u5957\u63a5\u5b57\u5931\u6548\u3002</p> <p>\u5982\u9636\u6bb5 6 \u6240\u63a8\u8350\u7684\u4e00\u6837\uff0c\u6b64\u65f6\u5e94\u5f53\u518d\u6b21\u8c03\u7528\u8fde\u63a5\u51fd\u6570\uff1a\u79fb\u9664\u6240\u6709\u5957\u63a5\u5b57\uff0c\u5e76\u5c1d\u8bd5\u91cd\u65b0\u8fde\u63a5 wifi</p>"},{"location":"_Embedded/240617-IDF%20%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%EF%BC%8C%E5%8F%8A%20wifi%20%E8%BF%90%E8%A1%8C%E6%B5%81%E7%A8%8B/#25-ip","title":"2.5 \u83b7\u53d6 IP","text":"<p>\u8fd9\u4e2a\u9636\u6bb5\u9700\u8981\u6ce8\u610f\u7684\u5c31\u662f\u4e00\u70b9\uff0c\u5373 \u5728\u63a5\u6536\u5230 IP \u4e4b\u540e\u518d\u8fdb\u884c\u6240\u6709\u7684\u5957\u63a5\u5b57\u521b\u5efa\u7b49\u76f8\u5173\u64cd\u4f5c</p>"},{"location":"_Embedded/240617-IDF%20%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%EF%BC%8C%E5%8F%8A%20wifi%20%E8%BF%90%E8%A1%8C%E6%B5%81%E7%A8%8B/#26","title":"2.6 \u65ad\u5f00\u5904\u7406","text":"<p>\u5982\u4e0a\u6587 1.4 \u6240\u8ff0</p>"},{"location":"_Embedded/240617-IDF%20%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%EF%BC%8C%E5%8F%8A%20wifi%20%E8%BF%90%E8%A1%8C%E6%B5%81%E7%A8%8B/#27-ip","title":"2.7 IP \u66f4\u6539","text":"<p>IP \u5730\u5740\u53d1\u751f\u66f4\u6539\u65f6\u4e5f\u7c7b\u4f3c <code>DISCONNECTED</code> \u4e8b\u4ef6\u4e00\u6837\uff0c\u63a8\u8350\u5173\u95ed\u6240\u6709\u5df2\u521b\u5efa\u7684\u5957\u63a5\u5b57\u8fdb\u884c\u91cd\u65b0\u521b\u5efa</p>"},{"location":"_Embedded/240617-IDF%20%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%EF%BC%8C%E5%8F%8A%20wifi%20%E8%BF%90%E8%A1%8C%E6%B5%81%E7%A8%8B/#28","title":"2.8 \u6e05\u7406","text":""},{"location":"_Embedded/240618-SNTP%20%E8%8E%B7%E5%8F%96%E6%97%B6%E9%97%B4%E3%80%81AES%20%E5%8A%A0%E5%AF%86/","title":"240618-SNTP \u83b7\u53d6\u65f6\u95f4\u3001AES \u52a0\u5bc6","text":""},{"location":"_Embedded/240618-SNTP%20%E8%8E%B7%E5%8F%96%E6%97%B6%E9%97%B4%E3%80%81AES%20%E5%8A%A0%E5%AF%86/#1-sntp","title":"1 SNTP \u83b7\u53d6\u65f6\u95f4","text":"<p>\u53c2\u8003\u535a\u5ba2\uff1a https://blog.csdn.net/qq_41741344/article/details/120117151</p> <p>\u5b98\u65b9\u6587\u6863\uff1a https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32s3/api-reference/system/system_time.html#sntp</p> <p>SNTP for Simple Network Time Protocol. \u662f NTP \u534f\u8bae\u7684\u4e00\u4e2a\u5b50\u96c6</p> <p>NTP \u65f6\u95f4\u6233\u662f\u8be5\u534f\u8bae\u7684\u91cd\u8981\u5185\u5bb9\uff0c\u662f\u4e00\u4e2a 64 \u4f4d\u65e0\u7b26\u53f7\u6d6e\u70b9\u6570\u7ec4\u6210\uff0c\u524d\u9762 32 \u4f4d\u8868\u793a\u6574\u6570\uff0c\u540e\u9762 32 \u4f4d\u8868\u793a\u5c0f\u6570\u3002\u5355\u4f4d\u662f\u79d2\u3002\u65f6\u95f4\u662f\u76f8\u5bf9\u4e8e 1900 \u5e74 1 \u6708 0 \u70b9\u5f00\u59cb\u5230\u73b0\u5728\u6240\u7ecf\u8fc7\u7684\u79d2\u6570\u3002\u5b83\u80fd\u8868\u793a\u7684\u6700\u5927\u6570\u5b57\u662f 4,294,967,295 \u79d2\u3002\u5d4c\u5165\u5f0f\u8bbe\u5907\u4e0a\u7535\u540e\u8fde\u63a5 AP \u83b7\u53d6 IP \u5730\u5740\u4e4b\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7 SNTP \u7684\u534f\u8bae\u83b7\u53d6\u5168\u7403\u65f6\u95f4\u3002</p> <p>LwIP \u7684 SNTP \u5e93\u4e2d\u542b\u6709\u4e00\u4e9b API \u53ef\u4ee5\u66f4\u65b0\u7cfb\u7edf\u65f6\u95f4\uff0c\u4f46\u662f\u5e76\u975e\u4e3a\u7ebf\u7a0b\u5b89\u5168\u7684 API\uff0c\u5b98\u65b9\u63a8\u8350\u4f7f\u7528 <code>esp_netif_component</code> \u6765\u66f4\u65b0\u65f6\u95f4</p> <p>\u5177\u4f53\u5f00\u53d1\u4e0a\u5728 wifi \u90a3\u8fb9\u83b7\u53d6\u5230 ip \u4e4b\u540e\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u8c03\u7528\u5e76\u8bbe\u7f6e sntp \u670d\u52a1\u5668\u5373\u53ef\u5f00\u542f sntp \u670d\u52a1\uff1a <pre><code>static void esp_initialize_sntp(void)\n{\n    ESP_LOGI(TAG, \"Initializing SNTP\");\n    sntp_setoperatingmode(SNTP_OPMODE_POLL);\n    sntp_set_sync_mode(SNTP_SYNC_MODE_IMMED);\n    sntp_setservername(0, \"s1b.time.edu.cn\");\n    sntp_setservername(1, \"210.72.145.44\");\n    sntp_setservername(2, \"ntp1.aliyun.com\");\n    sntp_init();\n}\n</code></pre></p> <p>\u968f\u540e\u8c03\u7528 POSIX \u51fd\u6570 <code>setenv</code> \u548c <code>tzset</code> \u8bbe\u7f6e\u65f6\u533a\u4ee5\u53ca\u66f4\u65b0 C \u5e93\u7684\u8fd0\u884c\u6570\u636e\u3002</p> <p>\u5b8c\u6210\u4e0a\u8ff0\u64cd\u4f5c\u4e4b\u540e\u53ef\u4ee5\u8c03\u7528\u5982\u4e0b\u51fd\u6570\u83b7\u53d6\u672c\u5730\u65f6\u95f4\uff1a</p> <ul> <li><code>localtime</code>\uff0c\u5728\u8c03\u7528 <code>time(NULL)</code> \u540e\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570\u5c06 <code>time_t</code> \u8f6c\u6362\u4e3a <code>tm</code> \u7ed3\u6784\u4f53</li> <li><code>localtime_r</code>\uff0c\u8ddf\u4e0a\u9762\u76f8\u540c\uff0c\u4f46\u7531\u4e8e\u4e0d\u5e26 <code>_r</code> \u7684\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u6307\u5411\u9759\u6001\u53d8\u91cf\u7684\u6307\u9488\uff0c\u56e0\u6b64\u6709\u53ef\u80fd\u88ab\u8986\u76d6\uff0c\u7279\u522b\u662f\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b</li> </ul> <p></p> <p>\u6ce8\u610f: sntp \u4f9d\u8d56\u5957\u63a5\u5b57, \u56e0\u6b64\u7ef4\u62a4\u7684 sntp \u5e94\u7528\u9700\u8981\u76d1\u542c wifi \u4e8b\u4ef6</p>"},{"location":"_Embedded/240618-SNTP%20%E8%8E%B7%E5%8F%96%E6%97%B6%E9%97%B4%E3%80%81AES%20%E5%8A%A0%E5%AF%86/#2-aes","title":"2 AES \u52a0\u5bc6","text":"<p>\u53c2\u8003\u535a\u5ba2: https://blog.csdn.net/qq_36347513/article/details/120991568</p> <p>idf \u96c6\u6210\u7684 mbedtls \u52a0\u5bc6\u5e93\u7684 API \u53c2\u8003\uff1a https://mbed-tls.readthedocs.io/projects/api/en/v3.4.1/api/file/aes_8h/#_CPPv416mbedtls_aes_initP19mbedtls_aes_context</p> <p>\u4e50\u946b esp-idf \u6846\u67b6\u96c6\u6210\u5f00\u6e90\u7684 mbedtls \u52a0\u5bc6\u5e93\u3002Mbedtls \u4e5f\u8bb8\u662f\u6700\u5c0f\u5de7\u7684 SSL \u4ee3\u7801\u5e93\u3002\u9ad8\u6548\u3001\u4fbf\u4e8e\u79fb\u690d\u548c\u96c6\u6210\u3002\u652f\u6301\u5e38\u89c1\u7684\u5b89\u5168\u7b97\u6cd5\uff0c\u5982\uff1aAES\u3001DES\u3001RSA\u3001ECC\u3001SHA256\u3001MD5\u3001BASE64 \u7b49\u7b49\u3002\u9664\u6b64\u4e4b\u5916\u8fd8\u652f\u6301\u516c\u94a5\u8bc1\u4e66\u4f53\u7cfb\u3002\u5b83\u63d0\u4f9b\u4e86\u5177\u6709\u76f4\u89c2\u7684 API \u548c\u53ef\u8bfb\u6e90\u4ee3\u7801\u7684 SSL \u5e93\u3002\u8be5\u5de5\u5177\u5373\u5f00\u5373\u7528\uff0c\u53ef\u4ee5\u5728\u5927\u90e8\u5206\u7cfb\u7edf\u4e0a\u76f4\u63a5\u6784\u5efa\u5b83\uff0c\u4e5f\u53ef\u4ee5\u624b\u52a8\u9009\u62e9\u548c\u914d\u7f6e\u5404\u9879\u529f\u80fd\u3002</p>"},{"location":"_Embedded/240618-SNTP%20%E8%8E%B7%E5%8F%96%E6%97%B6%E9%97%B4%E3%80%81AES%20%E5%8A%A0%E5%AF%86/#21-aes","title":"2.1 AES \u79cd\u7c7b","text":"<p>ECB \u5f62\u5f0f\uff1a\u5373\u7535\u5b50\u5bc6\u7801\u672c\u5f62\u5f0f\uff0c\u6700\u65e9\u91c7\u7528\u5e76\u4e14\u6700\u7b80\u5355\u7684\u65b9\u5f0f\uff0c\u5c06\u52a0\u5bc6\u7684\u6570\u636e\u5206\u4e3a\u82e5\u5e72\u7ec4\uff0c\u6bcf\u7ec4\u5927\u5c0f\u8ddf\u52a0\u5bc6\u5bc6\u94a5\u957f\u5ea6\u76f8\u540c\u3002\u4e00\u6b21\u53ea\u80fd\u52a0\u89e3\u5bc6 128 \u4f4d\u7684\u660e\u6587\uff0c\u4e5f\u5c31\u662f 16 \u4e2a\u5b57\u8282\u3002</p> <p>CBC \u5f62\u5f0f\uff1a\u5373\u52a0\u5bc6\u5757\u94fe\u5f62\u5f0f\uff0c\u9700\u8981\u4e00\u4e2a\u521d\u59cb\u5316\u5411\u91cf\u3002</p> <p>\u4ec0\u4e48\u662f\u521d\u59cb\u5316\u5411\u91cf\uff1f</p> <p>\u5728\u5bc6\u7801\u5b66\u4e2d\uff0c\u521d\u59cb\u5316\u5411\u91cf\uff08Initialization Vector\uff0c\u7b80\u79f0 IV\uff09\u662f\u4e00\u4e2a\u5728\u52a0\u5bc6\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u7684\u56fa\u5b9a\u957f\u5ea6\u7684\u968f\u673a\u6216\u4f2a\u968f\u673a\u503c\u3002\u5b83\u4e0e\u7b2c\u4e00\u4e2a\u5757\u7684\u660e\u6587\u4e00\u8d77\u4f7f\u7528\uff0c\u4ee5\u786e\u4fdd\u5373\u4f7f\u76f8\u540c\u7684\u660e\u6587\u5757\u591a\u6b21\u52a0\u5bc6\uff0c\u4e5f\u4f1a\u4ea7\u751f\u4e0d\u540c\u7684\u5bc6\u6587\u5757\uff0c\u4ece\u800c\u589e\u52a0\u52a0\u5bc6\u7684\u5b89\u5168\u6027\u3002</p> <p>\u5728\u4f7f\u7528\u50cf AES \u8fd9\u6837\u7684\u5757\u52a0\u5bc6\u7b97\u6cd5\u65f6\uff0c\u6bcf\u4e2a\u6570\u636e\u5757\uff08\u901a\u5e38\u662f 16 \u5b57\u8282\uff09\u90fd\u9700\u8981\u4f7f\u7528\u5bc6\u94a5\u8fdb\u884c\u52a0\u5bc6\u3002\u5982\u679c\u4e0d\u4f7f\u7528 IV\uff0c\u90a3\u4e48\u76f8\u540c\u7684\u660e\u6587\u5757\u5c06\u603b\u662f\u4ea7\u751f\u76f8\u540c\u7684\u5bc6\u6587\u5757\uff0c\u8fd9\u5c06\u4f7f\u5f97\u52a0\u5bc6\u7b97\u6cd5\u5bb9\u6613\u88ab\u653b\u51fb\u3002</p>"},{"location":"_Embedded/240618-SNTP%20%E8%8E%B7%E5%8F%96%E6%97%B6%E9%97%B4%E3%80%81AES%20%E5%8A%A0%E5%AF%86/#22-esp32-aes-menuconfig","title":"2.2 ESP32 \u5173\u4e8e AES \u7684 menuconfig \u9009\u9879","text":"<p>\u53ef\u4ee5\u9009\u62e9\u6253\u5f00\u786c\u4ef6 AES \u52a0\u901f, \u5e76\u6709\u5982\u4e0b\u8bbe\u7f6e</p> <ul> <li><code>CONFIG_MBEDTLS_AES_USE_INTERRUPT</code> </li> <li><code>CONFIG_MBEDTLS_AES_INTERRUPT_LEVEL</code></li> </ul>"},{"location":"_Embedded/240618-SNTP%20%E8%8E%B7%E5%8F%96%E6%97%B6%E9%97%B4%E3%80%81AES%20%E5%8A%A0%E5%AF%86/#23-aes","title":"2.3 AES \u586b\u5145","text":"<p>AES-128-CBC \u5c5e\u4e8e\u5206\u7ec4\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\uff1a\u540c\u4e00\u7ec4 key \u8fdb\u884c\u660e\u6587\u548c\u5bc6\u6587\u7684\u8f6c\u6362</p> <p>\u4f7f\u7528 16B \u4e3a\u4e00\u7ec4\u8fdb\u884c\u52a0\u5bc6\uff0c\u5373\u660e\u6587\u7684 16B \u5bf9\u5e94\u4e00\u7ec4\u52a0\u5bc6\u540e\u7684 16B \u5bc6\u6587\u3002\u56e0\u6b64 AES-CBC \u9700\u8981\u660e\u6587\u4e3a 16B \u7684\u500d\u6570\uff0c\u5728\u4e0d\u6ee1 16B \u7684\u65f6\u5019\u9700\u8981\u5bf9\u660e\u6587\u8fdb\u884c\u586b\u5145\uff0c\u901a\u5e38\u7684\u586b\u5145\u65b9\u6cd5\u4e3a PKCS7\uff08Public-Key Cryptography Standards 7\uff09\uff1a</p> <p>\u5f53\u52a0\u5bc6\u5230\u6700\u540e\u4e00\u7ec4\u7684\u65f6\u5019\uff1a\u82e5\u4e0d\u8db3 16B \u5219\u586b\u5145\u957f\u5ea6\u4e3a\u6070\u597d\u8865\u8db3\u5230 16B \u7684\u957f\u5ea6\uff0c\u586b\u5145\u5185\u5bb9\u5373\u586b\u5145\u957f\u5ea6\u503c\u672c\u8eab\uff1b\u82e5\u6070\u597d\u4e3a 16B \u5219\u6700\u540e\u52a0\u5165\u4e00\u4e2a 16B \u7684 0x10 \u7ec4\u518d\u8fdb\u884c\u52a0\u5bc6\u3002</p> <p>\u4f20\u5165\u660e\u6587\u300116B \u7684 key\u300116B \u7684\u521d\u59cb\u504f\u79fb\u5411\u91cf IV</p> <p>\u521d\u59cb\u5411\u91cf\u548c key \u52a0\u5bc6\u7b2c\u4e00\u7ec4\u6570\u636e\u4e4b\u540e\uff0c\u4f1a\u5c06\u7b2c\u4e00\u7ec4\u52a0\u5bc6\u540e\u7684\u5bc6\u6587\u8d4b\u503c\u7ed9 IV\uff0c\u7136\u540e\u518d\u8fdb\u884c\u7b2c\u4e8c\u7ec4\u52a0\u5bc6\uff0c\u5faa\u73af\u76f4\u5230\u7ed3\u675f\u3002</p>"},{"location":"_Embedded/240618-SNTP%20%E8%8E%B7%E5%8F%96%E6%97%B6%E9%97%B4%E3%80%81AES%20%E5%8A%A0%E5%AF%86/#24-mbedtls","title":"2.4 Mbedtls \u5e93","text":"<p>\u4f7f\u7528\u8be5\u5e93\u51fd\u6570\u4e4b\u524d\u9700\u8981\u521d\u59cb\u5316\u8bed\u5883\uff08contex\uff09\u4ee5\u53ca\u8bbe\u7f6e\u52a0\u89e3\u5bc6\u7684\u5bc6\u94a5</p> <pre><code>mbedtls_aes_init(&amp;aes_ctx);\n\nmbedtls_aes_setkey_dec(&amp;aes_ctx, aes_key, 128);\nmbedtls_aes_setkey_enc(&amp;aes_ctx, aes_key, 128);\n</code></pre>"},{"location":"_Embedded/240618-SNTP%20%E8%8E%B7%E5%8F%96%E6%97%B6%E9%97%B4%E3%80%81AES%20%E5%8A%A0%E5%AF%86/#25-aes-api","title":"2.5 \u95e8\u7981 AES \u4efb\u52a1 API","text":"<pre><code>uint8_t aes_enc_uint8(mbedtls_aes_context *aes_ctx, uint8_t *input_iv, uint8_t *plain, uint8_t *cipher, size_t *cipher_len)\n</code></pre> <pre><code>/**\n * @brief AES\u52a0\u5bc6\u4efb\u52a1\uff0c\u5bc6\u6587\u8f93\u51fa\u4e3auint8_t\uff0cHEX\u683c\u5f0f\n *\n * @param aes_ctx AES\u4e0a\u4e0b\u6587\n * @param[in] input_iv \u672c\u6b21\u52a0\u5bc6\u7684\u504f\u79fb\u91cfIV\n * @param[in] plain \u9700\u8981\u88ab\u52a0\u5bc6\u7684\u660e\u6587\uff0c\u53ef\u4e0d\u5b9a\u957f\uff0c\u6700\u5927\u4e0d\u53ef\u8d85\u8fc7 AES_TASK_MAX_LEN\n * @param[out] cipher \u52a0\u5bc6\u540e\u8f93\u51fa\u7684\u5bc6\u6587\uff0c\u957f\u5ea6\u4e0e\u8f93\u5165\u7684\u660e\u6587\u957f\u5ea6\u76f8\u540c\n * @param[out] cipher_len \u52a0\u5bc6\u540e\u8f93\u51fa\u7684\u5bc6\u6587\u957f\u5ea6\n *\n * @return 0: \u52a0\u5bc6\u6210\u529f\n * @return 1: \u660e\u6587\u4e3a\u7a7a\n * @return 2: \u660e\u6587\u8fc7\u957f\n *\n * @attention \u672c\u51fd\u6570\u4f1a\u81ea\u52a8\u5bf9\u8f93\u5165\u7684\u660e\u6587\u8fdb\u884cPKCS7\u586b\u5145\n */\n</code></pre> <pre><code>uint8_t aes_dec_uint8(mbedtls_aes_context *aes_ctx, uint8_t *input_iv, uint8_t *plain, uint8_t *cipher, size_t cipher_len)\n</code></pre> <pre><code>/**\n * @brief AES\u89e3\u5bc6\u4efb\u52a1\uff0c\u660e\u6587\u8f93\u51fa\u4e3auint8_t\uff0c\u5b57\u7b26\u4e32\u683c\u5f0f\n *\n * @param aes_ctx AES\u4e0a\u4e0b\u6587\n * @param[in] input_iv \u672c\u6b21\u89e3\u5bc6\u7684\u504f\u79fb\u91cfIV\n * @param[out] plain \u89e3\u5bc6\u540e\u8f93\u51fa\u7684\u660e\u6587\n * @param[in] cipher \u9700\u8981\u88ab\u89e3\u5bc6\u7684\u5bc6\u6587\uff0c\u6700\u5927\u957f\u5ea6\u4e0d\u53ef\u8d85\u8fc7 AES_TASK_MAX_LEN\n * @param[in] cipher_len \u9700\u8981\u88ab\u89e3\u5bc6\u7684\u5bc6\u6587\u957f\u5ea6\n *\n * @return 0: \u89e3\u5bc6\u6210\u529f\n * @return 1: \u5bc6\u6587\u4e3a\u7a7a\n * @return 2: \u5bc6\u6587\u8fc7\u957f\n * @return 3: \u586b\u5145\u9519\u8bef\n *\n * @attention \u672c\u51fd\u6570\u4f1a\u81ea\u52a8\u5bf9\u8f93\u51fa\u7684\u660e\u6587\u79fb\u9664PKCS7\u586b\u5145\n */\n</code></pre> <p>\u4ee5\u4e0b\u4e3a\u6839\u636e\u84dd\u7259\u79c1\u6709\u534f\u8bae\u5c01\u88c5\u7684\u6253\u5305/\u89e3\u5305\u6570\u636e\u5e27\u51fd\u6570</p> <p></p> <pre><code>uint8_t data_frame_packing(uint8_t *payload, size_t payload_len, uint8_t *frame, size_t *frame_len)\n</code></pre> <pre><code>/**\n * @brief \u6253\u5305\u6570\u636e\u5e27\n *\n * @param[in] payload \u9700\u8981\u52a0\u5bc6\u7684\u7279\u5f81\u503c\u8d1f\u8f7d\n * @param[in] payload_len \u7279\u5f81\u503c\u957f\u5ea6\n * @param[out] frame \u6307\u5411\u6570\u636e\u5e27\u7684\u6307\u9488\u5730\u5740\n * @param[out] frame_len \u8f93\u51fa\u7684\u6570\u636e\u5e27\u957f\u5ea6\n *\n * @return 0: \u6253\u5305\u6210\u529f\n * @return 1: AES\u5bc6\u94a5\u8bbe\u7f6e\u9519\u8bef\n * @return 2: \u52a0\u5bc6\u9519\u8bef\n *\n * @note \u6682\u672a\u652f\u6301\u5206\u5305\u64cd\u4f5c\n */\n</code></pre> <pre><code>uint8_t data_frame_unpacking(uint8_t *frame, size_t frame_len, uint8_t *payload, size_t *payload_len)\n</code></pre> <pre><code>/**\n * @brief \u89e3\u5305\u6570\u636e\u5e27\n *\n * @param[in] frame \u63a5\u6536\u5230\u7684\u6570\u636e\u5e27\n * @param[in] frame_len \u6570\u636e\u5e27\u957f\u5ea6\n * @param[out] payload \u89e3\u5bc6\u540e\u7684\u7279\u5f81\u503c\u8d1f\u8f7d\n * @param[out] payload_len \u7279\u5f81\u503c\u8d1f\u8f7d\u957f\u5ea6\n *\n * @return 0: \u89e3\u5305\u6210\u529f\n * @return 1: \u5e27\u5934\u9519\u8bef\n * @return 2: AES\u5bc6\u94a5\u8bbe\u7f6e\u9519\u8bef\n * @return 3: \u89e3\u5bc6\u9519\u8bef\n * @return 4: CRC\u6821\u9a8c\u9519\u8bef\n *\n * @note \u6682\u672a\u652f\u6301\u5206\u5305\u64cd\u4f5c\n *\n */\n</code></pre> <p>\u4f7f\u7528\u65f6, \u5e94\u5f53\u5148\u7ef4\u62a4\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf <code>uint8_t aes_key[16] = AES_KEY_DEFAULT;</code> \u7528\u4e8e\u63d0\u4f9b\u5bc6\u94a5</p> <p>\u7cfb\u7edf\u5728\u521d\u59cb\u5316\u9636\u6bb5\u5e94\u5f53\u901a\u8fc7\u8bfb\u53d6\u521d\u59cb\u53c2\u6570\u83b7\u53d6\u5386\u53f2\u5b58\u50a8\u8fc7\u7684\u5bc6\u94a5, \u5e76\u66ff\u6362\u5168\u5c40\u53d8\u91cf\u7684\u9ed8\u8ba4\u503c.</p>"},{"location":"_Embedded/240619-%E8%93%9D%E7%89%99%E5%BC%80%E5%8F%91/","title":"240619-\u84dd\u7259\u5f00\u53d1","text":"<p>ESP32-S3 \u7684 ESP-Bluedroid \u4ec5\u652f\u6301\u4f4e\u529f\u8017\u84dd\u7259, \u4e0d\u652f\u6301\u7ecf\u5178\u84dd\u7259</p>"},{"location":"_Embedded/240619-%E8%93%9D%E7%89%99%E5%BC%80%E5%8F%91/#1","title":"1 \u57fa\u7840\u6982\u5ff5","text":"<p>\u53c2\u8003\u535a\u5ba2\uff1a https://blog.csdn.net/qq_36347513/article/details/118567281</p>"},{"location":"_Embedded/240619-%E8%93%9D%E7%89%99%E5%BC%80%E5%8F%91/#11-gatt","title":"1.1 GATT","text":"<p>\u57fa\u4e8e Attribute Protocal(\u5c5e\u6027\u534f\u8bae)\u5b9a\u4e49\u7684\u4e00\u4e2a service(\u670d\u52a1)\u6846\u67b6\u3002\u8fd9\u4e2a\u6846\u67b6\u5b9a\u4e49\u4e86 Services \u4ee5\u53ca\u5b83\u4eec\u7684 Characteristics \u7684\u683c\u5f0f\u548c\u89c4\u7a0b\u3002\u89c4\u7a0b\u5c31\u662f\u5b9a\u4e49\u4e86\u5305\u62ec\u53d1\u73b0\u3001\u8bfb\u3001\u5199\u3001\u901a\u77e5\u3001\u6307\u793a\u4ee5\u53ca\u914d\u7f6e\u5e7f\u64ad\u7684 characteristics\u3002</p> <p>\u6846\u67b6\u8fd8\u5b9a\u4e49\u4e86\u5728\u84dd\u7259\u901a\u4fe1\u4e2d\u7684\u4e24\u4e2a\u89d2\u8272, \u5ba2\u6237\u7aef\u4ee5\u53ca\u670d\u52a1\u5668\uff0c\u4e00\u822c\u7ec8\u7aef\u8bbe\u5907\u7684 ble \u5de5\u4f5c\u5728 server \u6a21\u5f0f\u3002</p> <p>\u5f53\u4e24\u4e2a\u8bbe\u5907\u5efa\u7acb\u4e86\u8fde\u63a5\u540e\u5373\u8868\u793a GAP \u534f\u8bae\u7ba1\u7406\u7684\u5e7f\u64ad\u8fc7\u7a0b\u5df2\u7ecf\u7ed3\u675f\u3002</p>"},{"location":"_Embedded/240619-%E8%93%9D%E7%89%99%E5%BC%80%E5%8F%91/#12-profile","title":"1.2 Profile","text":"<p>\u4e00\u822c\u7406\u89e3\u505a\u89c4\u8303, \u5206\u6210\u6807\u51c6\u4ee5\u53ca\u975e\u6807\u51c6\uff0c \u6216\u8005\u516c\u6709\u4ee5\u53ca\u79c1\u6709\u89c4\u8303\u3002</p>"},{"location":"_Embedded/240619-%E8%93%9D%E7%89%99%E5%BC%80%E5%8F%91/#13-service","title":"1.3 Service","text":"<p>\u7406\u89e3\u6210\u670d\u52a1\uff0c\u5b58\u5728\u4e8e Profile \u4e0b\u3002\u6bcf\u4e2a Service \u5305\u542b\u6709\u82e5\u5e72\u4e2a Characteristic\uff0c\u5373\u7279\u5f81\u3002</p> <p>\u6bcf\u4e2a\u7279\u5f81\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u6807\u7b7e\uff0c\u662f\u5b9e\u9645\u60f3\u8981\u4f20\u8f93\u7684\u4fe1\u606f\u8f7d\u4f53\u3002</p>"},{"location":"_Embedded/240619-%E8%93%9D%E7%89%99%E5%BC%80%E5%8F%91/#14-characteristic","title":"1.4 Characteristic","text":"<p>\u82e5\u7279\u5f81\u503c\u652f\u6301\u901a\u77e5\u4ee5\u53ca\u6307\u793a\u529f\u80fd\uff0c\u5219\u8be5\u7279\u5f81\u503c\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u989d\u5916\u7684 ATT\u2014\u2014CCCD\uff08Client Characteristic Configuration Descriptor\uff09</p>"},{"location":"_Embedded/240619-%E8%93%9D%E7%89%99%E5%BC%80%E5%8F%91/#15-uuid","title":"1.5 UUID","text":"<p>\u6240\u6709\u7684\u670d\u52a1\u4ee5\u53ca\u7279\u5f81\u90fd\u9700\u8981\u6709\u552f\u4e00\u4e00\u4e2a UUID \u6765\u6807\u8bc6\u3002</p>"},{"location":"_Embedded/240619-%E8%93%9D%E7%89%99%E5%BC%80%E5%8F%91/#2-ble_gatt_server_service_table","title":"2 \u57fa\u4e8e../ble_gatt_server_service_table \u4f8b\u7a0b\u7684\u4e8c\u6b21\u5f00\u53d1","text":"<p>\u5b98\u65b9 GATT_SERVER_API \u53c2\u8003: https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32s3/api-reference/bluetooth/esp_gatts.html</p> <p>\u4f8b\u7a0b\u6e90\u7801: https://github.com/espressif/esp-idf/tree/d7ca8b94/examples/bluetooth/bluedroid/ble/gatt_server_service_table</p>"},{"location":"_Embedded/240619-%E8%93%9D%E7%89%99%E5%BC%80%E5%8F%91/#21-app-profiles","title":"2.1 APP Profiles","text":"<p>demo \u4e2d\u53ea\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7528\u4e8e\u6d4b\u91cf\u5fc3\u7387\u7684 Profile\uff0c\u5f00\u5934\u7684\u5b8f\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>#define PROFILE_NUM 1\n#define PROFILE_APP_IDX 0\n#define ESP_APP_ID 0x55\n</code></pre> <p>\u5176\u4e2d ESP_APP_ID \u662f\u7531\u7528\u6237\u5b9a\u4e49\u7684\u4e00\u4e2a ID\uff0c\u7528\u4e8e\u533a\u522b\u4e0d\u540c\u7684 profile\u3002</p> <p>\u5728 IDF \u4e2d profile \u88ab\u4fdd\u5b58\u5728\u4e00\u4e2a\u7c7b\u578b\u4e3a <code>gatts_profile_inst</code> \u7684\u6570\u7ec4\u4e2d\uff0c\u5e76\u9700\u8981\u6307\u5b9a <code>gatts_cb</code> \u4ee5\u53ca <code>gatts_if</code> \uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>static struct gatts_profile_inst heart_rate_profile_tab[HEART_PROFILE_NUM] = {\n    [HEART_PROFILE_APP_IDX] = {\n        .gatts_cb = gatts_profile_event_handler,\n        .gatts_if = ESP_GATT_IF_NONE,\n    },\n};\n</code></pre>"},{"location":"_Embedded/240619-%E8%93%9D%E7%89%99%E5%BC%80%E5%8F%91/#22","title":"2.2 \u8bbe\u7f6e\u5e7f\u64ad\u6570\u636e","text":"<p>\u6ce8\u518c\u5e94\u7528\u7a0b\u5e8f\u4e8b\u4ef6\u662f\u5728\u7a0b\u5e8f\u751f\u547d\u5468\u671f\u4e2d\u89e6\u53d1\u7684\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u3002</p> <p>\u6b64\u793a\u4f8b\u4f7f\u7528\u6b64\u4e8b\u4ef6\u5728\u6ce8\u518c\u6982\u8981\u6587\u4ef6\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u65f6\u914d\u7f6e\u5e7f\u64ad\u53c2\u6570\u3002\u7528\u4e8e\u5b9e\u73b0\u6b64\u76ee\u7684\u7684\u51fd\u6570\u6709\uff1a</p> <ul> <li><code>esp_ble_gap_set_device_name()</code>: \u7528\u4e8e\u8bbe\u7f6e\u88ab\u5e7f\u64ad\u7684\u8bbe\u5907\u540d\u79f0\u3002</li> <li><code>esp_ble_gap_config_adv_data()</code>: \u7528\u4e8e\u914d\u7f6e\u6807\u51c6\u5e7f\u64ad\u6570\u636e\u3002</li> </ul> <p>\u540e\u8005\u63a5\u6536\u4e00\u4e2a\u6307\u5411 <code>esp_ble_adv_data_t</code> \u7c7b\u578b\u7ed3\u6784\u4f53\u7684\u6307\u9488\uff0c\u8be5\u7ed3\u6784\u4f53\u5b9a\u4e49\u4e86\u5e7f\u64ad\u6570\u636e\u5305\u7684\u5177\u4f53\u8d1f\u8f7d\u3002\u6b64\u5904\u9700\u8981\u6ce8\u610f\uff0c\u4e00\u822c\u5e7f\u64ad\u6570\u636e\u5305\u7684\u5177\u4f53\u8d1f\u8f7d\u4e0d\u80fd\u8d85\u8fc7 31 \u4e2a\u5b57\u8282\uff0c\u5426\u5219\u5c06\u4f1a\u88ab\u5806\u6808\u622a\u65ad\u540e\u9762\u7684\u6d88\u606f\u3002</p> <p>\u4e00\u822c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8f83\u957f\u7684\u53c2\u6570\u53ef\u4ee5\u5b58\u50a8\u5728\u626b\u63cf\u54cd\u5e94\u4e2d\u3002\u5982\u679c\u8981\u91c7\u53d6\u626b\u63cf\u54cd\u5e94\u7684\u8bdd\uff0c\u53ef\u4ee5\u65b0\u5efa\u4e00\u4e2a <code>esp_ble_adv_data_t</code> \u7c7b\u578b\u7684\u7ed3\u6784\u4f53\uff0c\u5e76\u5c06 <code>set_scan_rsp</code> \u8bbe\u7f6e\u4e3a <code>true</code> \u540e\u4f7f\u7528\u76f8\u540c\u7684\u51fd\u6570\u8fdb\u884c\u914d\u7f6e\u3002</p> <p>\u4ee5\u4e0a\u7684\u64cd\u4f5c\u88ab\u653e\u5728 <code>gatts_profile_event_handler</code> \u8fd9\u4e2a\u51fd\u6570\u4e2d\u7684 <code>ESP_GATTS_REG_EVT</code> \u4e8b\u4ef6\u4e2d\uff0c\u4e00\u65e6\u8bbe\u7f6e\u5b8c\u5e7f\u64ad\u6570\u636e\u4e4b\u540e\uff0c\u5c06\u4f1a\u89e6\u53d1 <code>ESP_GAP_BLE_ADV_DATA_SET_COMPLETE_EVT</code> \u4e8b\u4ef6\uff0c\u5e76\u4ea4\u7531 <code>gap_event_handler</code> \u51fd\u6570\u8fdb\u884c\u7ba1\u7406\uff0c\u82e5\u4e5f\u8bbe\u7f6e\u4e86\u626b\u63cf\u54cd\u5e94\uff0c\u5219 <code>ESP_GAP_BLE_SCAN_RSP_DATA_SET_COMPLETE_EVT</code> \u4e8b\u4ef6\u4e5f\u4f1a\u88ab\u89e6\u53d1\u3002</p>"},{"location":"_Embedded/240619-%E8%93%9D%E7%89%99%E5%BC%80%E5%8F%91/#23-gap-gap_event_handler","title":"2.3 GAP \u4e8b\u4ef6\uff08<code>gap_event_handler</code>\uff09","text":"<p>\u63a5\u7740\u4e0a\u9762\uff0c\u5982\u679c\u5e7f\u64ad\u6570\u636e\u4e24\u4e2a\u4e8b\u4ef6\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u4e8b\u4ef6\uff08\u8bbe\u7f6e\u5e7f\u64ad\u6570\u636e\u6216\u8bbe\u7f6e\u626b\u63cf\u54cd\u5e94\u5b8c\u6210\uff09\u88ab\u89e6\u53d1\uff0c\u5219\u4f1a\u8c03\u7528 <code>esp_ble_gap_start_advertising</code> \u51fd\u6570\u6765\u5f00\u59cb\u5e7f\u64ad\uff0c\u8be5\u51fd\u6570\u9700\u8981\u4e00\u4e2a <code>esp_ble_adv_params_t</code> \u7c7b\u578b\u7684\u5e7f\u64ad\u53c2\u6570\u3002</p> <p>\u8be5\u53c2\u6570\u6307\u5b9a\u4e86\u5f00\u542f\u5e7f\u64ad\u6240\u9700\u7684\u5404\u79cd\u53c2\u6570\uff0c\u4f8b\u5982\u5e7f\u64ad\u95f4\u9694\u3001\u5e7f\u64ad\u7c7b\u578b\u3001\u5e7f\u64ad\u4fe1\u9053\u4ee5\u53ca\u5e7f\u64ad\u8fc7\u6ee4\u7b56\u7565\u7b49\uff1a</p> <pre><code>/// \u5e7f\u64ad\u53c2\u6570\ntypedef struct {\n    uint16_t adv_int_min; /*!&lt; \u672a\u5b9a\u5411\u548c\u4f4e\u5360\u7a7a\u6bd4\u5b9a\u5411\u5e7f\u64ad\u7684\u6700\u5c0f\u5e7f\u64ad\u95f4\u9694\u3002\n    \u8303\u56f4\uff1a0x0020\u52300x4000\n    \u9ed8\u8ba4\u503c\uff1aN = 0x0800\uff081.28\u79d2\uff09\n    \u65f6\u95f4= N * 0.625\u6beb\u79d2\n    \u65f6\u95f4\u8303\u56f4\uff1a20\u6beb\u79d2\u523010.24\u79d2 */\n    uint16_t adv_int_max; /*!&lt; \u672a\u5b9a\u5411\u548c\u4f4e\u5360\u7a7a\u6bd4\u5b9a\u5411\u5e7f\u64ad\u7684\u6700\u5927\u5e7f\u64ad\u95f4\u9694\u3002\n    \u8303\u56f4\uff1a0x0020\u52300x4000\n    \u9ed8\u8ba4\u503c\uff1aN = 0x0800\uff081.28\u79d2\uff09\n    \u65f6\u95f4= N * 0.625\u6beb\u79d2\n    \u65f6\u95f4\u8303\u56f4\uff1a20\u6beb\u79d2\u523010.24\u79d2 */\n    esp_ble_adv_type_t adv_type;            /*!&lt; \u5e7f\u64ad\u7c7b\u578b */\n    esp_ble_addr_type_t own_addr_type;      /*!&lt; \u6240\u6709\u8005\u84dd\u7259\u8bbe\u5907\u5730\u5740\u7c7b\u578b */\n    esp_bd_addr_t peer_addr;                /*!&lt; \u5bf9\u7b49\u65b9\u8bbe\u5907\u7684\u84dd\u7259\u8bbe\u5907\u5730\u5740 */\n    esp_ble_addr_type_t peer_addr_type;     /*!&lt; \u5bf9\u7b49\u65b9\u8bbe\u5907\u7684\u84dd\u7259\u8bbe\u5907\u5730\u5740\u7c7b\u578b */\n    esp_ble_adv_channel_t channel_map;      /*!&lt; \u5e7f\u64ad\u901a\u9053\u6620\u5c04 */\n    esp_ble_adv_filter_t adv_filter_policy; /*!&lt; \u5e7f\u64ad\u8fc7\u6ee4\u7b56\u7565 */\n} esp_ble_adv_params_t;\n</code></pre> <p>\u4f8b\u7a0b\u4e2d\u914d\u7f6e\u7684\u51e0\u4e2a\u91cd\u8981\u53c2\u6570\uff1a</p> <ul> <li><code>adv_type</code> - <code>ADV_ IND</code> \u7c7b\u578b\uff0c\u901a\u7528\u7c7b\u578b\uff0c\u4e0d\u9488\u5bf9\u7279\u5b9a\u7684\u4e2d\u5fc3\u8bbe\u5907\uff0c\u5e7f\u64ad\u670d\u52a1\u5668\u4e3a\u53ef\u8fde\u63a5\u7684\u3002</li> <li><code>own_addr_type</code> - <code>BLE_ADDR_TYPE_PUBLIC</code> \u516c\u5171\u5730\u5740\u7c7b\u578b</li> <li><code>channel_map</code> - <code>ADV_CHNL_ALL</code> \u4f7f\u7528\u6240\u6709\u901a\u9053</li> <li><code>adv_filter_policy</code> - <code>ADV_FILTER_ALLOW_SCAN_ANY_CON_ANY</code> \u5141\u8bb8\u6765\u81ea\u4efb\u4f55\u4e2d\u5fc3\u8bbe\u5907\u7684\u626b\u63cf\u548c\u8fde\u63a5\u8bf7\u6c42</li> </ul> <p>\u4e00\u65e6\u5e7f\u64ad\u6210\u529f\u5f00\u59cb\u540e\uff0c<code>esp_ble_gap_start_advertising</code> \u51fd\u6570\u5c06\u4f1a\u89e6\u53d1 <code>ESP_GAP_BLE_ADV_START_COMPLETE_EVT</code> \u4e8b\u4ef6\uff0c\u4f8b\u7a0b\u4e2d\u5728\u8fd9\u4e2a\u4e8b\u4ef6\u4e2d\u53ea\u662f\u5355\u7eaf\u68c0\u67e5\u5e7f\u64ad\u72b6\u6001\uff0c\u5e76\u6253\u5370\u6d88\u606f\u3002</p>"},{"location":"_Embedded/240619-%E8%93%9D%E7%89%99%E5%BC%80%E5%8F%91/#24-gatt","title":"2.4 GATT \u4e8b\u4ef6","text":"<p>\u5e94\u7528\u7684 <code>Profile</code> \u6ce8\u518c\u64cd\u4f5c\u5728\u4f8b\u7a0b\u4e2d\u7684 <code>ble_server_task_init</code> \u521d\u59cb\u5316\u6d41\u7a0b\u4e2d\u901a\u8fc7\u8c03\u7528 <code>esp_ble_gatts_app_register</code> \u51fd\u6570\u5b9e\u73b0\uff0c\u8be5\u51fd\u6570\u4f7f\u7528\u4e00\u4e2a <code>APP ID</code> \u7528\u4e8e\u533a\u5206\u5404\u79cd\u5e94\u7528\u5c42\u7684\u56de\u8c03\u3002</p> <p>\u8c03\u7528 <code>esp_ble_gatts_app_register</code> \u51fd\u6570\u540e\uff0c <code>ESP_GATTS_REG_EVT</code> \u4e8b\u4ef6\u5c06\u4f1a\u88ab\u89e6\u53d1\uff0c\u8be5\u4e8b\u4ef6\u4f1a\u88ab <code>gatts_event_handler</code> \u51fd\u6570\u6355\u83b7\uff0c\u7136\u540e\u5c06\u751f\u6210\u7684 <code>gatt_if</code>\uff08interface\uff09\u63a5\u53e3\u5b58\u653e\u5728 <code>profile_tab</code> \u4e2d\uff0c\u4e5f\u5c31\u662f\u4e00\u5f00\u59cb\u521d\u59cb\u5316\u7684\u65f6\u5019\u8bbe\u7f6e\u4e3a <code>ESP_GATT_IF_NONE</code> \u7684 <code>Profile</code>\u3002</p> <p>\u672c\u4f8b\u4e2d\u5b9a\u4e49\u7684\u5e94\u7528\u7a0b\u5e8f\u53ea\u6709\u4e00\u4e2a <code>Profile</code>\uff0c\u56e0\u6b64\u5728\u5c06\u751f\u6210\u7684\u63a5\u53e3\u5b58\u653e\u8fc7\u53bb\u4e4b\u540e\uff0c\u4e5f\u5c31\u76f8\u5f53\u4e8e\u5c06\u5176\u8f6c\u53d1\u5230\u76f8\u5e94\u7684 <code>gatts_profile_event_handler</code> \u51fd\u6570\u4e2d\uff0c\u5f00\u59cb\u5bf9\u8fd9\u4e2a <code>Profile</code> \u89e6\u53d1\u7684\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406\u4e86\u3002</p>"},{"location":"_Embedded/240619-%E8%93%9D%E7%89%99%E5%BC%80%E5%8F%91/#25","title":"2.5 \u670d\u52a1\u8868","text":"<pre><code>enum\n{\n    HRS_IDX_SVC,\n\n    HRS_IDX_HR_MEAS_CHAR,\n    HRS_IDX_HR_MEAS_VAL,\n    HRS_IDX_HR_MEAS_NTF_CFG,\n\n    HRS_IDX_BOBY_SENSOR_LOC_CHAR,\n    HRS_IDX_BOBY_SENSOR_LOC_VAL,\n\n    HRS_IDX_HR_CTNL_PT_CHAR,\n    HRS_IDX_HR_CTNL_PT_VAL,\n\n    HRS_IDX_NB,\n};\n</code></pre> <p>\u8fd9\u4e2a\u679a\u4e3e\u5143\u7d20\u5b9a\u4e49\u4e86\u5fc3\u7387\u670d\u52a1\u7684\u4e00\u7cfb\u5217\u7d22\u5f15\uff0c\u6bcf\u4e2a\u670d\u52a1\u548c\u7279\u5f81\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u7d22\u5f15\uff0c\u8fd9\u4e9b\u7d22\u5f15\u7528\u4e8e\u5728\u4ee3\u7801\u4e2d\u5e94\u7528\u7279\u5b9a\u7684\u670d\u52a1\u548c\u7279\u5f81\u3002</p> <p>\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u7ba1\u7406\u548c\u64cd\u4f5c GATT_server \u7684\u7279\u6027\u3002</p> <p>HRS for Heart Rate Service.</p> <p>BTW\uff0c\u8fd9\u4e2a\u670d\u52a1\u8868\u4e2d\u7684\u679a\u4e3e\u7c7b\u578b\u4e3a\u81ea\u5df1\u5b9a\u4e49\u7684\u4e1c\u897f\uff0c\u4f8b\u7a0b\u53ea\u662f\u7ed9\u51fa\u4e86\u4e00\u4e2a\u5fc3\u7387\u6d4b\u91cf\u5e94\u7528\u573a\u666f\u4e0b\u7684\u6837\u4f8b\u3002walkthrough \u6587\u6863\u4e2d\u7684\u4ee3\u7801\u4f3c\u4e4e\u662f\u6bd4\u8f83\u65e9\u7684\u7248\u672c\u4e86\uff0c\u73b0\u5728\u7684\u5b9e\u9645\u4ee3\u7801\u6587\u4ef6\u4e2d\u7ed9\u51fa\u7684\u4f8b\u5b50\u662f\u8fd9\u6837\u7684\uff0c\u901a\u7528\u6027\u66f4\u5f3a\u4e00\u70b9\uff1a</p> <pre><code>enum\n{\n    IDX_SVC,\n    IDX_CHAR_A,\n    IDX_CHAR_VAL_A,\n    IDX_CHAR_CFG_A,\n\n    IDX_CHAR_B,\n    IDX_CHAR_VAL_B,\n\n    IDX_CHAR_C,\n    IDX_CHAR_VAL_C,\n\n    HRS_IDX_NB,\n};\n</code></pre>"},{"location":"_Embedded/240619-%E8%93%9D%E7%89%99%E5%BC%80%E5%8F%91/#26-attribute-table-services-characteristics","title":"2.6 \u901a\u8fc7\u5c5e\u6027\u8868\uff08Attribute Table\uff09\u521b\u5efa Services \u548c Characteristics","text":"<p>\u6ce8\u518c Services \u548c Characteristics \u7684\u4e8b\u4ef6\u901a\u8fc7\u4f7f\u7528 <code>esp_ble_gatts_create_attr_tab</code> \u51fd\u6570\u6765\u521b\u5efa\u5c5e\u6027\u8868\uff0c\u8be5\u51fd\u6570\u9700\u8981\u4e00\u4e2a\u7c7b\u578b\u4e3a <code>esp_gatts_attr_db_t</code> \u7684\u53c2\u6570\u3002\u8be5\u53c2\u6570\u7531\u679a\u4e3e\u503c\u8fdb\u884c\u7d22\u5f15\uff0c\u5373\u4e0a\u8282\u5b9a\u4e49\u7684\u670d\u52a1\u8868\uff0c\u5305\u62ec\u4e24\u4e2a\u6210\u5458\uff1a</p> <pre><code>typedef struct {\n    esp_attr_control_t      attr_control; \n    esp_attr_desc_t         att_desc;  \n} esp_gatts_attr_db_t;\n</code></pre> <p>\u7b2c\u4e00\u4e2a\u662f\u81ea\u52a8\u54cd\u5e94\u53c2\u6570\uff0c\u6709\u4e24\u4e2a\u53ef\u9009\uff1a</p> <ul> <li><code>ESP_GATT_AUTO_RSP</code> - \u5141\u8bb8 BLE \u5806\u6808\u5bf9\u4e8e\u8bfb\u53d6\u6216\u5199\u5165\u4e8b\u4ef6\u5230\u8fbe\u65f6\u81ea\u52a8\u53d1\u9001\u54cd\u5e94\u6d88\u606f</li> <li><code>ESP_GATT_RSP_BY_APP</code> - \u4f7f\u7528 <code>esp_ble_gatts_send_response</code> \u51fd\u6570\u8fdb\u884c\u624b\u52a8\u54cd\u5e94\u6d88\u606f</li> </ul> <p>\u7b2c\u4e8c\u4e2a\u662f\u5c5e\u6027\u7c7b\u578b\uff1a</p> <pre><code>uint16_t uuid_length;      /*!&lt; UUID\u957f\u5ea6 */\nuint8_t  *uuid_p;          /*!&lt; UUID\u503c */\nuint16_t perm;             /*!&lt; \u5c5e\u6027\u6743\u9650 */\nuint16_t max_length;       /*!&lt; \u5143\u7d20\u7684\u6700\u5927\u957f\u5ea6 */\nuint16_t length;           /*!&lt; \u5143\u7d20\u7684\u5f53\u524d\u957f\u5ea6 */\nuint8_t  *value;           /*!&lt; \u5143\u7d20\u503c\u6570\u7ec4*/\n</code></pre> <p>\u901a\u8fc7\u51fd\u6570 <code>esp_ble_gatts_create_attr_tab</code> \u521b\u5efa\u5b8c\u540e\u5c06\u4f1a\u89e6\u53d1 <code>ESP_GATTS_CREAT_ATTR_TAB_EVT</code> \u4e8b\u4ef6\uff0c\u7528\u4e8e\u6253\u5370\u5404\u79cd\u4fe1\u606f\uff0c\u68c0\u67e5\u521b\u5efa\u7684\u5c5e\u6027\u8868\u5927\u5c0f\u662f\u5426\u7b49\u4e8e <code>HRS_IDX_NB</code> \uff0c\u5728\u68c0\u67e5\u5b8c\u6210\u4e4b\u540e\u5c06\u4f1a\u5c06\u5c5e\u6027\u8868\u7684\u53e5\u67c4\u590d\u5236\u5230 <code>heart_rate_handle_table</code> \u4e2d\uff0c\u4ee5\u4fbf\u7528\u4e8e\u4f20\u9012\uff0c\u4ee5\u53ca\u7528\u4e8e app \u7684\u4e0a\u5c42\u6765\u8fdb\u884c\u4e0d\u540c\u7684\u64cd\u4f5c\u3002\u901a\u8fc7\u8fd9\u4e9b\u5c5e\u6027\u8868\u7684\u53e5\u67c4\uff0c\u53ef\u4ee5\u7528\u4e8e\u77e5\u9053\u5f53\u524d\u6b63\u5728\u8bfb\u53d6/\u5199\u5165\u54ea\u4e9b\u7279\u5f81\u3002</p> <p>\u6700\u540e\u901a\u8fc7 <code>esp_ble_gatts_start_service</code> \u51fd\u6570\u5f00\u59cb\u670d\u52a1\u3002</p>"},{"location":"_Embedded/240619-%E8%93%9D%E7%89%99%E5%BC%80%E5%8F%91/#27-service","title":"2.7 \u6dfb\u52a0\u65b0\u7684 Service","text":"<ul> <li>\u5b8f\u5b9a\u4e49\u5904\u6dfb\u52a0\u65b0 Service \u5b9e\u4f8b\u7684 ID\uff0c\u5982\uff1a <pre><code>#define SVC_INST_ID1 1\n</code></pre></li> <li>\u6dfb\u52a0\u65b0\u7684 Service_handle_table\uff0c\u5982\uff1a <pre><code>uint16_t &lt;srvc&gt;_handle_table[&lt;svc&gt;_IDX_NB];\n</code></pre></li> <li>\u5b9a\u4e49\u65b0\u7684 Service \u4e0e Characteristic \u7684 UUID\uff0c\u5982\uff1a <pre><code>static const uint16_t &lt;srvc&gt;_SERVICE_UUID_DM = 0x00EE;\nstatic const uint16_t GATTS_CHAR_UUID_&lt;srvc&gt;_&lt;value&gt; = 0xEE01;\n</code></pre></li> <li>\u5b9a\u4e49\u65b0\u7684 Service database\uff0c\u5982\uff1a <pre><code>/* \u7279\u5f81\u503c\u4ee5\u53caUUID\u540d\u53ef\u80fd\u6709\u51fa\u5165 */\nstatic const esp_gatts_attr_db_t gatt_db2[DM_IDX_NB] = {\n    [IDX_SVC2] =\n        {{ESP_GATT_AUTO_RSP}, {ESP_UUID_LEN_16, (uint8_t *)&amp;primary_service_uuid, ESP_GATT_PERM_READ, \n        sizeof(uint16_t), sizeof(GATTS_SERVICE_UUID_DM), (uint8_t *)&amp;GATTS_SERVICE_UUID_DM}},\n\n    [IDX_CHAR_A2] =\n        {{ESP_GATT_AUTO_RSP}, {ESP_UUID_LEN_16, (uint8_t *)&amp;character_declaration_uuid, ESP_GATT_PERM_READ, \n        CHAR_DECLARATION_SIZE, CHAR_DECLARATION_SIZE, (uint8_t *)&amp;char_prop_read_write_notify}},\n\n    [IDX_CHAR_VAL_A2] =\n        {{ESP_GATT_AUTO_RSP}, {ESP_UUID_LEN_16, (uint8_t *)&amp;GATTS_CHAR_UUID_DM_A, ESP_GATT_PERM_READ | ESP_GATT_PERM_WRITE, \n        GATTS_DEMO_CHAR_VAL_LEN_MAX, sizeof(char_value2), (uint8_t *)char_value2}},\n};\n</code></pre></li> </ul> <p><code>esp_gatts_attr_db_t</code> \u7684\u6210\u5458\u5b9a\u4e49\u53c2\u8003\u5982\u4e0b\uff1a</p> <p><pre><code>/* esp_gatts_attr_db_t */\nesp_attr_control_t      attr_control; \nesp_attr_desc_t         att_desc;  \n</code></pre> <pre><code>/* esp_attr_desc_t */\nuint16_t uuid_length;      /*!&lt; UUID\u957f\u5ea6 */\nuint8_t  *uuid_p;          /*!&lt; UUID\u503c */\nuint16_t perm;             /*!&lt; \u5c5e\u6027\u6743\u9650 */\nuint16_t max_length;       /*!&lt; \u5143\u7d20\u7684\u6700\u5927\u957f\u5ea6 */\nuint16_t length;           /*!&lt; \u5143\u7d20\u7684\u5f53\u524d\u957f\u5ea6 */\nuint8_t  *value;           /*!&lt; \u5143\u7d20\u503c\u6570\u7ec4*/\n</code></pre></p> <p>\u5176\u4e2d\u4e00\u4e2a service \u9700\u8981\u5305\u542b\uff1a\u4e00\u4e2a\u4e3b\u670d\u52a1\u58f0\u660e\u3001\u7279\u5f81\u503c\u58f0\u660e\u3001\u7279\u5f81\u503c\u3002</p> <p>\u9664\u6b64\u4e4b\u5916\uff0c\u5982\u679c\u670d\u52a1\u5c5e\u6027\u6709 Notify \u5c5e\u6027\uff0c\u8fd8\u9700\u8981\u5305\u542b\u4e00\u4e2a CCCD\uff08\u5ba2\u6237\u7aef\u7279\u5f81\u503c\u914d\u7f6e\u63cf\u8ff0\u7b26\uff09\u3002</p> <p>\u4ee5\u4e0a\u53ea\u6709\u7279\u5f81\u503c\u7684 UUID \u662f\u7528\u6237\u81ea\u5df1\u5b9a\u4e49\u7684\uff0c\u5176\u4ed6\u4e09\u4e2a\u53ef\u4ee5\u53c2\u8003\u84dd\u7259\u89c4\u8303\uff0c\u4f8b\u7a0b\u4e2d\u4f7f\u7528\u4e86\u5982\u4e0b\u5b9a\u4e49\uff1a</p> <pre><code>static const uint16_t primary_service_uuid = ESP_GATT_UUID_PRI_SERVICE;\nstatic const uint16_t character_declaration_uuid = ESP_GATT_UUID_CHAR_DECLARE;\nstatic const uint16_t character_client_config_uuid = ESP_GATT_UUID_CHAR_CLIENT_CONFIG;\n</code></pre> <p>\u5173\u4e8e\u670d\u52a1\u4ee5\u53ca\u7279\u5f81\u503c\u7684\u8bfb\u5199\u5c5e\u6027\uff0c\u6ce8\u610f\u5982\u4e0b\u903b\u8f91\uff1a</p> <p>\u4e0d\u7ba1\u662f\u670d\u52a1\u58f0\u660e\u3001\u7279\u5f81\u503c\u58f0\u660e\u8fd8\u662f\u7279\u5f81\u503c\u672c\u8eab\uff0c\u90fd\u9700\u8981\u8bbe\u7f6e\u8bfb\u5199\u6743\u9650\uff0c\u8fd9\u91cc\u7684\u8bfb\u5199\u6743\u9650\u662f\u6307\u670d\u52a1\u7aef\u7684\u6743\u9650\uff0c\u5373\u670d\u52a1\u7aef\u662f\u5426\u5141\u8bb8\u5ba2\u6237\u7aef\u8bfb\u5199\u670d\u52a1\u58f0\u660e\u3001\u7279\u5f81\u503c\u58f0\u660e\u8fd8\u662f\u7279\u5f81\u503c\u3002</p> <p>\u800c\u5bf9\u4e8e\u7279\u5f81\u503c\u672c\u8eab\u7684\u5c5e\u6027\u6765\u8bf4\uff0c\u9700\u8981\u5728\u7279\u5f81\u503c\u58f0\u660e\u4e2d\u8bbe\u7f6e\u503c\u4ee5\u58f0\u660e\u662f\u5426\u5305\u542b\u8bfb\u5199\u5c5e\u6027\u4ee5\u53ca notify/indicate \u5c5e\u6027\u3002</p> <p>\u4e5f\u5c31\u662f\u6ce8\u610f\u533a\u5206\u4ee5\u4e0b\u4e24\u7ec4\u6982\u5ff5\uff1a</p> <pre><code>/* file: esp_gatt_defs.h */\n/* relate to BTA_GATT_PERM_xxx in bta/bta_gatt_api.h */\n/**\n * @brief Attribute permissions\n */\n#define    ESP_GATT_PERM_READ                  (1 &lt;&lt; 0)   /* bit 0 -  0x0001 */    /* relate to BTA_GATT_PERM_READ in bta/bta_gatt_api.h */\n#define    ESP_GATT_PERM_READ_ENCRYPTED        (1 &lt;&lt; 1)   /* bit 1 -  0x0002 */    /* relate to BTA_GATT_PERM_READ_ENCRYPTED in bta/bta_gatt_api.h */\n#define    ESP_GATT_PERM_READ_ENC_MITM         (1 &lt;&lt; 2)   /* bit 2 -  0x0004 */    /* relate to BTA_GATT_PERM_READ_ENC_MITM in bta/bta_gatt_api.h */\n#define    ESP_GATT_PERM_WRITE                 (1 &lt;&lt; 4)   /* bit 4 -  0x0010 */    /* relate to BTA_GATT_PERM_WRITE in bta/bta_gatt_api.h */\n#define    ESP_GATT_PERM_WRITE_ENCRYPTED       (1 &lt;&lt; 5)   /* bit 5 -  0x0020 */    /* relate to BTA_GATT_PERM_WRITE_ENCRYPTED in bta/bta_gatt_api.h */\n#define    ESP_GATT_PERM_WRITE_ENC_MITM        (1 &lt;&lt; 6)   /* bit 6 -  0x0040 */    /* relate to BTA_GATT_PERM_WRITE_ENC_MITM in bta/bta_gatt_api.h */\n#define    ESP_GATT_PERM_WRITE_SIGNED          (1 &lt;&lt; 7)   /* bit 7 -  0x0080 */    /* relate to BTA_GATT_PERM_WRITE_SIGNED in bta/bta_gatt_api.h */\n#define    ESP_GATT_PERM_WRITE_SIGNED_MITM     (1 &lt;&lt; 8)   /* bit 8 -  0x0100 */    /* relate to BTA_GATT_PERM_WRITE_SIGNED_MITM in bta/bta_gatt_api.h */\n#define    ESP_GATT_PERM_READ_AUTHORIZATION    (1 &lt;&lt; 9)   /* bit 9 -  0x0200 */\n#define    ESP_GATT_PERM_WRITE_AUTHORIZATION   (1 &lt;&lt; 10)  /* bit 10 - 0x0400 */\n#define    ESP_GATT_PERM_ENCRYPT_KEY_SIZE(keysize)     (((keysize - 6) &amp; 0xF) &lt;&lt; 12)    /* bit 12:15 - 0xF000 */\ntypedef uint16_t esp_gatt_perm_t;\n\n/* relate to BTA_GATT_CHAR_PROP_BIT_xxx in bta/bta_gatt_api.h */\n/* definition of characteristic properties */\n#define    ESP_GATT_CHAR_PROP_BIT_BROADCAST    (1 &lt;&lt; 0)       /* 0x01 */    /* relate to BTA_GATT_CHAR_PROP_BIT_BROADCAST in bta/bta_gatt_api.h */\n#define    ESP_GATT_CHAR_PROP_BIT_READ         (1 &lt;&lt; 1)       /* 0x02 */    /* relate to BTA_GATT_CHAR_PROP_BIT_READ in bta/bta_gatt_api.h */\n#define    ESP_GATT_CHAR_PROP_BIT_WRITE_NR     (1 &lt;&lt; 2)       /* 0x04 */    /* relate to BTA_GATT_CHAR_PROP_BIT_WRITE_NR in bta/bta_gatt_api.h */\n#define    ESP_GATT_CHAR_PROP_BIT_WRITE        (1 &lt;&lt; 3)       /* 0x08 */    /* relate to BTA_GATT_CHAR_PROP_BIT_WRITE in bta/bta_gatt_api.h */\n#define    ESP_GATT_CHAR_PROP_BIT_NOTIFY       (1 &lt;&lt; 4)       /* 0x10 */    /* relate to BTA_GATT_CHAR_PROP_BIT_NOTIFY in bta/bta_gatt_api.h */\n#define    ESP_GATT_CHAR_PROP_BIT_INDICATE     (1 &lt;&lt; 5)       /* 0x20 */    /* relate to BTA_GATT_CHAR_PROP_BIT_INDICATE in bta/bta_gatt_api.h */\n#define    ESP_GATT_CHAR_PROP_BIT_AUTH         (1 &lt;&lt; 6)       /* 0x40 */    /* relate to BTA_GATT_CHAR_PROP_BIT_AUTH in bta/bta_gatt_api.h */\n#define    ESP_GATT_CHAR_PROP_BIT_EXT_PROP     (1 &lt;&lt; 7)       /* 0x80 */    /* relate to BTA_GATT_CHAR_PROP_BIT_EXT_PROP in bta/bta_gatt_api.h */\ntypedef uint8_t esp_gatt_char_prop_t;\n</code></pre> <ul> <li>\u4e8e\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u65b0\u7684\u5c5e\u6027\u8868\uff0c\u7528\u4e8e\u7ed9\u4e0a\u8ff0\u7b2c\u4e8c\u70b9\u7684 handle_table \u7d22\u5f15\uff0c\u4ee5\u4fbf\u540e\u7eed\u5f00\u53d1\u4e2d\u8bfb\u5199\u67d0 Service \u7684\u67d0\u7279\u5f81\u503c\uff0c\u5982\uff1a</li> </ul> <pre><code>/* \u8bbe\u5907\u7ba1\u7406\u76f8\u5173service\u8868 */\nenum\n{\n    IDX_SVC2,\n    IDX_CHAR_A2,\n    IDX_CHAR_VAL_A2,\n\n    DM_IDX_NB,\n\n};\n</code></pre> <ul> <li>\u4fee\u6539 <code>gatts_profile_event_handler</code> \u4e2d\u5bf9\u4e8e\u65b0\u5efa database \u7684\u903b\u8f91\uff0c\u4e3b\u8981\u601d\u8def\u4e3a**\u521b\u5efa\u4e00\u4e2a\u542f\u52a8\u4e00\u4e2a**\uff0c\u5173\u952e\u4fee\u6539\u90e8\u5206\u5982\u4e0b:</li> </ul> <pre><code>/* ESP_GATTS_REG_EVT \u4e8b\u4ef6\u5206\u652f */\nesp_err_t create_attr_ret = esp_ble_gatts_create_attr_tab(gatt_db, gatts_if, LOCK_IDX_NB, SVC_INST_ID);\n        if (create_attr_ret)\n        {\n            ESP_LOGE(GATTS_TABLE_TAG, \"create attr table failed, error code = %x\", create_attr_ret);\n        }\n</code></pre> <p>\u9996\u5148\u5728 <code>ESP_GATTS_REG_EVT</code> \u4e8b\u4ef6\u65f6\u521b\u5efa\u7b2c\u4e00\u4e2a database\uff0c\u8be5\u4e8b\u4ef6\u521b\u5efa\u6210\u529f\u540e\uff0c\u5c06\u4f1a\u89e6\u53d1 <code>ESP_GATTS_CREAT_ATTR_TAB_EVT</code> \u4e8b\u4ef6\uff0c\u6b64\u65f6\u518d\u521b\u5efa\u7b2c\u4e8c\u4e2a database\uff0c\u5982\u4e0b\uff1a</p> <p><code>ESP_GATTS_REG_EVT</code> \u88ab\u6700\u5f00\u59cb\u7684 <code>esp_ble_gatts_app_register</code> \u51fd\u6570\u89e6\u53d1</p> <pre><code>/* ESP_GATTS_CREAT_ATTR_TAB_EVT \u4e8b\u4ef6\u5206\u652f*/\nif (create_tab1 == false)\n{\n    if (param-&gt;add_attr_tab.status != ESP_GATT_OK)\n    {\n        ESP_LOGE(GATTS_TABLE_TAG, \"create attribute table failed, error code=0x%x\", param-&gt;add_attr_tab.status);\n    }\n    else if (param-&gt;add_attr_tab.num_handle != LOCK_IDX_NB)\n    {\n        ESP_LOGE(GATTS_TABLE_TAG, \"create attribute table abnormally, num_handle (%d) \\\n                doesn't equal to LOCK_IDX_NB(%d)\",\n                    param-&gt;add_attr_tab.num_handle, LOCK_IDX_NB);\n    }\n    else\n    {\n        ESP_LOGI(GATTS_TABLE_TAG, \"create attribute table successfully, the number handle = %d\", param-&gt;add_attr_tab.num_handle);\n        memcpy(lock_handle_table, param-&gt;add_attr_tab.handles, sizeof(lock_handle_table));\n        esp_ble_gatts_start_service(lock_handle_table[IDX_SVC]);\n    }\n}\nelse\n{\n    if (param-&gt;add_attr_tab.status != ESP_GATT_OK)\n    {\n        ESP_LOGE(GATTS_TABLE_TAG, \"create attribute table failed, error code=0x%x\", param-&gt;add_attr_tab.status);\n    }\n    else if (param-&gt;add_attr_tab.num_handle != DM_IDX_NB)\n    {\n        ESP_LOGE(GATTS_TABLE_TAG, \"create attribute table abnormally, num_handle (%d) \\\n                    doesn't equal to HRS_IDX_NB(%d)\",\n                    param-&gt;add_attr_tab.num_handle, DM_IDX_NB);\n    }\n    else\n    {\n        ESP_LOGI(GATTS_TABLE_TAG, \"create attribute table successfully, the number handle = %d\\n\", param-&gt;add_attr_tab.num_handle);\n        memcpy(device_manage_handle_table, param-&gt;add_attr_tab.handles, sizeof(device_manage_handle_table));\n        esp_ble_gatts_start_service(device_manage_handle_table[IDX_SVC2]);\n    }\n}\nbreak;\n</code></pre> <p>\u76f8\u8f83\u4e8e\u539f\u59cb\u4f8b\u7a0b\uff0c\u6b64\u5904\u6dfb\u52a0\u4e86\u4e00\u4e2a <code>create_tab1</code> \u7684\u6807\u5fd7\u4f4d\uff0c\u7528\u4e8e\u5224\u65ad\u662f\u5426\u5df2\u7ecf\u521b\u5efa\u4e86\u7b2c\u4e00\u4e2a database\uff0c\u5982\u679c\u6ca1\u6709\u5219\u521b\u5efa\u7b2c\u4e00\u4e2a\uff0c\u5982\u679c\u5df2\u7ecf\u521b\u5efa\u4e86\uff0c\u5219\u521b\u5efa\u7b2c\u4e8c\u4e2a\uff0c\u4ee5\u540e\u6709\u591a\u4e2a\u670d\u52a1\u5219\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <p>\u5728\u68c0\u67e5\u5b8c\u521b\u5efa\u7684\u5c5e\u6027\u8868\u5927\u5c0f\u662f\u5426\u7b49\u4e8e <code>&lt;srvc&gt;_IDX_NB</code> \u4e4b\u540e\uff0c\u5c06\u4f1a\u5c06\u5c5e\u6027\u8868\u7684\u53e5\u67c4\u590d\u5236\u5230 <code>&lt;srvc&gt;_handle_table</code> \u4e2d\uff0c\u5e76\u8c03\u7528 <code>esp_ble_gatts_start_service</code> \u51fd\u6570\u5f00\u59cb\u670d\u52a1\uff0c\u89e6\u53d1 <code>ESP_GATTS_START_EVT</code> \u4e8b\u4ef6\uff1a</p> <pre><code>/* ESP_GATTS_START_EVT \u4e8b\u4ef6\u5206\u652f*/\nif (create_tab1 == false)\n{\n    ESP_LOGI(GATTS_TABLE_TAG, \"SERVICE_START_EVT1, status %d, service_handle %d\", param-&gt;start.status, param-&gt;start.service_handle);\n    esp_err_t creat_attr_ret1 = esp_ble_gatts_create_attr_tab(gatt_db2, gatts_if, DM_IDX_NB, SVC_INST_ID1);\n    if (creat_attr_ret1)\n    {\n        ESP_LOGE(GATTS_TABLE_TAG, \"create attr table2 failed, error code = %x\", creat_attr_ret1);\n    }\n    create_tab1 = true;\n}\nelse\n{\n    ESP_LOGI(GATTS_TABLE_TAG, \"SERVICE_START_EVT2, status %d, service_handle %d\", param-&gt;start.status, param-&gt;start.service_handle);\n}\nbreak;\n</code></pre> <p>\u5728\u8be5\u4e8b\u4ef6\u4e2d\u56e0\u4e3a\u5f00\u59cb\u670d\u52a1\u6210\u529f\u540e\u4e8b\u4ef6\u624d\u4f1a\u88ab\u89e6\u53d1\uff0c\u56e0\u6b64\u521b\u5efa\u597d\u7b2c\u4e00\u4e2a database \u540e\u5219\u53ef\u4ee5\u5f00\u59cb\u521b\u5efa\u7b2c\u4e8c\u4e2a database\uff0c\u5219\u8c03\u7528 <code>esp_ble_gatts_create_attr_tab</code> \u51fd\u6570\u7ee7\u7eed\u521b\u5efa\u7b2c\u4e8c\u4e2a database\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p>"},{"location":"_Embedded/240619-%E8%93%9D%E7%89%99%E5%BC%80%E5%8F%91/#3-walkthrough","title":"3 \u95e8\u7981\u63a7\u5236\u5668\u4e2d\u7684\u84dd\u7259\u4efb\u52a1 Walkthrough","text":"<p>\u9996\u5148\u8c03\u7528 <code>ble_server_task_init</code> \u51fd\u6570\u7528\u4e8e\u521d\u59cb\u5316\u84dd\u7259\u63a7\u5236\u5668\uff0c\u84dd\u7259\u534f\u8bae\u6808\uff0c\u6ce8\u518c GATT \u56de\u8c03\u51fd\u6570\u4ee5\u53ca GAP \u56de\u8c03\u51fd\u6570\uff0c\u8bbe\u7f6e MTU\uff0c\u5e76\u6ce8\u518c profile <code>esp_ble_gatts_app_register</code>\uff0c\u6ce8\u518c profile \u5c06\u4f1a\u89e6\u53d1\u4e8b\u4ef6 <code>ESP_GATTS_REG_EVT</code></p> <p>\u56de\u8c03\u51fd\u6570\uff1a\u5176\u4e2d GATT \u56de\u8c03\u51fd\u6570\u4ee5\u53ca GAP \u56de\u8c03\u51fd\u6570\u7528\u4e8e\u5904\u7406\u84dd\u7259\u6808\u6240\u6709\u53ef\u80fd\u53d1\u751f\u7684\u60c5\u51b5\uff0c\u6765\u8fbe\u5230 FSM \u7684\u6548\u679c</p> <p>MTU\uff08\u6700\u5927\u4f20\u8f93\u5355\u5143\uff09\uff1a\u901a\u8fc7\u8bbe\u7f6e MTU \u7684\u503c\u9650\u5236 PDU\uff08\u534f\u8bae\u6570\u636e\u5355\u5143\uff09\u6700\u5927\u80fd\u591f\u4ea4\u6362\u7684\u6570\u636e\u91cf</p> <p><code>gap_event_handler</code> \u7528\u4e8e\u5904\u7406 GAP \u4e2d\u7684\u4e8b\u4ef6\uff0c\u672c\u6b21\u4e0d\u592a\u9700\u8981\u5173\u5fc3</p> <p><code>gatts_event_handler</code> \u63a5\u6536\u6765\u81ea\u534f\u8bae\u6808\u4e2d\u7684 GATTS \u4e8b\u4ef6\uff0c\u5206\u53d1\u7ed9\u4e0d\u540c\u7684 Profile\uff0c\u7531\u4e8e\u672c\u6b21\u7cfb\u7edf\u8bbe\u8ba1\u53ea\u4f7f\u7528\u4e86\u4e00\u4e2a Profile \uff0c\u56e0\u6b64\u76f8\u5f53\u4e8e\u5c06\u4e8b\u4ef6\u76f4\u63a5\u4f20\u9012\u7ed9\u8fd9\u552f\u4e00\u7684 Profile</p> <p><code>gatts_profile_event_handler</code> \u662f\u5b9e\u9645\u5904\u7406\u5404\u4e2a GATT \u64cd\u4f5c\u7684\u72b6\u6001\u673a\uff0c\u6240\u6709\u6709\u5173\u4e8e\u5bf9 Service \u548c Characteristic \u7684\u64cd\u4f5c\u90fd\u5728\u6b64\u5904\u8fdb\u884c\uff0c\u4e0b\u9762\u9488\u5bf9\u8be5\u72b6\u6001\u673a\u505a\u4e00\u4e2a\u7b80\u8981\u6982\u8ff0\uff1a</p>"},{"location":"_Embedded/240619-%E8%93%9D%E7%89%99%E5%BC%80%E5%8F%91/#31-esp_gatts_reg_evt","title":"3.1 <code>ESP_GATTS_REG_EVT</code>","text":"<p>\u5728\u8be5\u4e8b\u4ef6\u4e2d\u8bbe\u7f6e\u8bbe\u5907\u540d\u79f0\u5e76\u914d\u7f6e gap \u5e7f\u64ad\u6570\u636e\u5305\u4e4b\u540e\uff0c\u5f00\u59cb\u521b\u5efa\u7b2c\u4e00\u4e2a\u670d\u52a1\u7684\u5c5e\u6027\u8868\uff0c\u901a\u8fc7\u8c03\u7528\u8be5\u51fd\u6570\u8fdb\u884c\u521b\u5efa\uff1a<code>esp_ble_gatts_create_attr_tab</code> </p> <p>\u8c03\u7528\u8be5\u51fd\u6570\u4e4b\u540e\u5c06\u4f1a\u89e6\u53d1 <code>ESP_GATTS_CREAT_ATTR_TAB_EVT</code> \u4e8b\u4ef6</p>"},{"location":"_Embedded/240619-%E8%93%9D%E7%89%99%E5%BC%80%E5%8F%91/#32-esp_gatts_creat_attr_tab_evt","title":"3.2 <code>ESP_GATTS_CREAT_ATTR_TAB_EVT</code>","text":"<p>\u5982\u679c\u5c5e\u6027\u8868\u521b\u5efa\u6210\u529f\u7684\u8bdd\uff0c\u4e8b\u4ef6\u6240\u643a\u5e26\u7684\u53c2\u6570\u5c06\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5c5e\u6027\u8868\u7684\u53e5\u67c4\uff0c\u4ee5\u4e0b\u662f\u8be5\u4e8b\u4ef6\u4e0b\u7684 param \u7ed3\u6784\u4f53\uff1a <pre><code>struct gatts_add_attr_tab_evt_param{\n    esp_gatt_status_t status;       /*!&lt; Operation status */\n    esp_bt_uuid_t svc_uuid;         /*!&lt; Service uuid type */\n    uint8_t svc_inst_id;            /*!&lt; Service id */\n    uint16_t num_handle;            /*!&lt; The number of the attribute handle to be added to the gatts database */\n    uint16_t *handles;              /*!&lt; The number to the handles */\n} add_attr_tab;                     /*!&lt; Gatt server callback param of ESP_GATTS_CREAT_ATTR_TAB_EVT */\n</code></pre></p> <p>\u5728\u8be5\u4e8b\u4ef6\u5185\u901a\u8fc7\u5148\u524d\u7ef4\u62a4\u7684\u4e00\u4e2a\u5168\u5c40\u5e03\u5c14\u7c7b\u578b\u53d8\u91cf\u5224\u65ad\u6b64\u65f6\u521b\u5efa\u7684\u662f\u7b2c\u51e0\u4e2a\u5c5e\u6027\u8868</p> <p>\u4e4b\u540e\u5c06\u6240\u6709\u8be5\u5c5e\u6027\u8868\u4e2d\u7684\u6240\u6709\u7279\u5f81\u503c\u53e5\u67c4\u8d4b\u503c\u7ed9\u5bf9\u5e94\u7684\u53e5\u67c4\u5217\u8868\uff0c\u65b9\u4fbf\u540e\u7eed\u7edf\u4e00\u7ba1\u7406\u67d0\u4e00\u4e2a\u7279\u5f81\u503c\u7684\u64cd\u4f5c\u51fd\u6570</p> <p>\u6700\u540e\u8c03\u7528 <code>esp_ble_gatts_start_service</code> \u542f\u52a8\u670d\u52a1\uff0c\u542f\u52a8\u5b8c\u6210\u540e\u5c06\u4f1a\u89e6\u53d1 <code>ESP_GATTS_START_EVT</code>  \u4e8b\u4ef6</p>"},{"location":"_Embedded/240619-%E8%93%9D%E7%89%99%E5%BC%80%E5%8F%91/#33-esp_gatts_start_evt","title":"3.3 <code>ESP_GATTS_START_EVT</code>","text":"<p>\u8be5\u4e8b\u4ef6\u4e0b\u7684 param \u7ed3\u6784\u4f53\uff1a <pre><code>struct gatts_start_evt_param {\n    esp_gatt_status_t status;       /*!&lt; Operation status */\n    uint16_t service_handle;        /*!&lt; Service attribute handle */\n} start;                            /*!&lt; Gatt server callback param of ESP_GATTS_START_EVT */\n</code></pre></p> <p>\u540c\u6837\uff0c\u6839\u636e\u5168\u5c40\u7ef4\u62a4\u7684\u5168\u5c40\u5e03\u5c14\u7c7b\u578b\u53d8\u91cf\u5224\u65ad\u662f\u5426\u8fdb\u884c\u4e0b\u4e00\u4e2a\u5c5e\u6027\u8868\u7684\u521b\u5efa\uff0c\u5982\u679c\u6709\u591a\u4e2a\u5c5e\u6027\u8868\u5c31\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5b8c\u6210\u4e00\u4e2a\u5c5e\u6027\u8868\u7684\u521b\u5efa\u5c31\u5c06\u5bf9\u5e94\u7684\u53d8\u91cf\u7f6e TRUE</p>"},{"location":"_Embedded/240619-%E8%93%9D%E7%89%99%E5%BC%80%E5%8F%91/#34-esp_gatts_write_evt","title":"3.4 <code>ESP_GATTS_WRITE_EVT</code>","text":"<p>\u8be5\u4e8b\u4ef6\u5728\u53d1\u751f GATT \u5199\u64cd\u4f5c\u7684\u65f6\u5019\u88ab\u89e6\u53d1\uff0cparam \u5982\u4e0b\uff1a <pre><code>struct gatts_write_evt_param {\n    uint16_t conn_id;               /*!&lt; Connection id */\n    uint32_t trans_id;              /*!&lt; Transfer id */\n    esp_bd_addr_t bda;              /*!&lt; The bluetooth device address which been written */\n    uint16_t handle;                /*!&lt; The attribute handle */\n    uint16_t offset;                /*!&lt; Offset of the value, if the value is too long */\n    bool need_rsp;                  /*!&lt; The write operation need to do response */\n    bool is_prep;                   /*!&lt; This write operation is prepare write */\n    uint16_t len;                   /*!&lt; The write attribute value length */\n    uint8_t *value;                 /*!&lt; The write attribute value */\n    } write;                            /*!&lt; Gatt server callback param of ESP_GATTS_WRITE_EVT */\n</code></pre></p> <p>\u672c\u6b21 gatts \u4e2d\u5b9e\u73b0\u4e86\u4e00\u4e2a\u51fd\u6570 <code>write_event_handler</code> \uff0c\u63a5\u6536\u4e09\u4e2a\u53c2\u6570\uff0c\u5206\u522b\u662f\uff1a</p> <ul> <li>\u64cd\u4f5c\u7684\u7279\u5f81\u503c\u53e5\u67c4</li> <li>\u6570\u636e\u957f\u5ea6</li> <li>\u5199\u5165\u6570\u636e\u7684\u6307\u9488</li> </ul> <p>\u8be5\u51fd\u6570\u5c06\u4f1a\u904d\u5386\u9884\u5148\u8bbe\u5b9a\u597d\u7684\u67e5\u627e\u8868\uff0c\u5339\u914d\u64cd\u4f5c\u7279\u5f81\u503c\u7684\u5bf9\u5e94\u4e1a\u52a1\u51fd\u6570</p>"},{"location":"_Embedded/240619-%E8%93%9D%E7%89%99%E5%BC%80%E5%8F%91/#35","title":"3.5 \u4e1a\u52a1\u51fd\u6570\u4e00\u822c\u63a5\u53e3","text":"<p>\u7531\u4e8e\u63d0\u524d\u89c4\u8303\u4e86\u53cc\u65b9\u7684\u52a0\u5bc6\u534f\u8bae\uff0c\u4e00\u822c\u5ba2\u6237\u7aef\u5199\u5165\u7684\u7279\u5f81\u503c\u90fd\u662f\u7edf\u4e00\u7684\u52a0\u5bc6\u5e27\u6570\u636e\u5305\uff0c\u5148\u8981\u5bf9\u6570\u636e\u5305\u8fdb\u884c\u89e3\u5bc6\uff0c\u901a\u8fc7\u5148\u524d\u63d0\u53ca\u7684 <code>data_frame_unpacking</code> \u548c <code>data_frame_packing</code> \u51fd\u6570\u53ef\u4ee5\u8fdb\u884c\u5904\u7406</p> <p>\u51fd\u6570\u4e00\u822c\u63a5\u53d7\u6765\u81ea\u524d\u7ea7\u4f20\u9012\u6765\u7684\u7279\u5f81\u503c\u53e5\u67c4\u3001\u6570\u636e\u957f\u5ea6\u3001\u6570\u636e\u7684\u6307\u9488</p>"},{"location":"_Embedded/240625-%E5%8D%A1%E5%85%B3%E7%B3%BB%E5%AD%98%E5%82%A8%E8%AE%BE%E8%AE%A1/","title":"240625-\u5361\u5173\u7cfb\u5b58\u50a8\u8bbe\u8ba1","text":"<p>\u95e8\u7981\u7cfb\u7edf\u4e2d\u7684\u5361\u53f7\u4ee5\u53ca\u4eba\u5458\u672c\u5730\u5b58\u50a8\u8bbe\u8ba1\u5982\u4e0b\uff1a</p> <p></p> <p>\u6700\u4e0a\u5c42\u5b9a\u4e49\u4e00\u4e2a <code>user_card_relation_t</code> \uff0c\u5305\u542b <code>user_t</code> \u548c <code>card_t</code> </p> <p>\u5176\u4e2d\uff0c<code>user_t</code> \u652f\u6301\u5b9a\u4e49\u5b66\u53f7\u4ee5\u53ca\u7b49\u7ea7\uff1b<code>card_t</code> \u652f\u6301\u5b9a\u4e49\u5361\u53f7\u4ee5\u53ca\u6709\u6548\u671f\u3002</p> <p>\u8be5\u5361\u5173\u7cfb\u91c7\u7528\u52a8\u6001\u5185\u5b58\u7ba1\u7406\u8bbe\u8ba1\uff0c\u4f7f\u7528\u4e0a\u4e0b\u6587\u4ee5\u4fdd\u8bc1\u64cd\u4f5c\u5361\u5173\u7cfb\u65f6\u7684\u5185\u5b58\u7533\u8bf7\u4e0e\u91ca\u653e\uff0c\u5728\u4f7f\u7528\u524d\u9700\u8981\u521d\u59cb\u5316 nvs \u6a21\u5757\uff0c\u5e76\u5728\u5bf9\u5361\u5173\u7cfb\u64cd\u4f5c\u5b8c\u6bd5\u540e\u8c03\u7528\u91ca\u653e\u4e0a\u4e0b\u6587\u51fd\u6570 <code>free_relations_context</code>\uff0c\u4ee5\u4e0b\u4e3a\u4e00\u4e2a\u8c03\u7528\u793a\u4f8b\uff1a <pre><code>static void relations_test_task(void *pvParameters)\n{\n    /* RUN ONCE */\n\n    /* \u968f\u673a\u521b\u5efa100\u6761relations\u5b58\u50a8\u5230nvs\u4e2d */\n    relations_contex_t ctx;\n    init_relations_context(&amp;ctx);\n\n    for (size_t i = 0; i &lt; 100; i++)\n    {\n        user_card_relation_t relation;\n        relation.user.user_id = 202134310000 + i;\n        relation.user.level = LEVEL_1;\n        relation.card.card_number = 0x0000000000000000 + i;\n        relation.card.expiry = time(NULL) + 3600 * 24 * 365 * 2;\n        add_relation_contex(&amp;ctx, relation);\n    }\n\n    /* \u4fdd\u5b58\u5230nvs */\n    save_relations_nvs(ctx.relations, ctx.relations_count);\n    free_relations_context(&amp;ctx);\n\n    /* \u8bfb\u53d6nvs */\n    relations_contex_t ctx2;\n    init_relations_context(&amp;ctx2);\n\n    get_relations_nvs(&amp;ctx2.relations, &amp;ctx2.relations_count);\n\n    for (size_t i = 0; i &lt; ctx2.relations_count; i++)\n    {\n        ESP_LOGI(TAG, \"-----------------[RELATIONS GET TEST 1]-----------------\");\n        ESP_LOGI(TAG, \"user_id: %lld, level: %d\", ctx2.relations[i].user.user_id, ctx2.relations[i].user.level);\n        ESP_LOGI(TAG, \"card_number: %lld, expiry: %lld\", ctx2.relations[i].card.card_number, ctx2.relations[i].card.expiry);\n        ESP_LOGI(TAG, \"--------------------------------------------------------\");\n    }\n\n    free_relations_context(&amp;ctx2);\n\n    vTaskDelete(NULL);\n}\n</code></pre></p> <p>\u53e6\u5916\uff0c\u5173\u4e8e\u5199\u5165\u5361\u5173\u7cfb\u5230 nvs \u4e2d\u6709\u5982\u4e0b\u9650\u5236\uff1a</p> <pre><code>/**\n * @brief \u6dfb\u52a0\u7528\u6237\u5361\u5173\u7cfb\n *\n * @param[in] add_relations \u8f93\u5165-\u8981\u6dfb\u52a0\u7684\u7528\u6237\u5361\u5173\u7cfb\uff0c\u6307\u5411\u4e00\u4e2a\u7ed3\u6784\u4f53\u6570\u7ec4\n * @param[in] add_relations_count \u8f93\u5165-\u8981\u6dfb\u52a0\u7684\u7528\u6237\u5361\u5173\u7cfb\u6570\u91cf\n *\n * @return 0: \u6210\u529f\n * @return 1: \u4e0d\u5141\u8bb8\u591a\u4eba\u4e00\u5361\n * @return 2: \u5206\u914d\u5185\u5b58\u5931\u8d25\n * @return 3: \u4fdd\u5b58\u7528\u6237\u5361\u5173\u7cfb\u5931\u8d25\n *\n * @attention \u8be5\u51fd\u6570\u53ea\u9700\u8981\u8f93\u5165\u9700\u8981\u6dfb\u52a0\u7684\u5173\u7cfb\uff0c\u51fd\u6570\u5185\u90e8\u4f1a\u8c03\u7528get_user_card_relations\u83b7\u53d6\u5f53\u524d\u7684\u5173\u7cfb\uff0c\u7136\u540e\u8fdb\u884c\u6bd4\u5bf9\n * @attention \u82e5\u6709\u76f8\u540c\u5361\u53f7\uff0c\u5219\u66f4\u65b0\u6709\u6548\u671f\uff1b\u82e5\u6709\u76f8\u540c\u7528\u6237\u4f46\u4e0d\u540c\u5361\u53f7\uff0c\u5219\u66f4\u65b0\u5361\u53f7\uff1b\u82e5\u6ca1\u6709\u76f8\u540c\u5361\u53f7\uff0c\u5219\u6dfb\u52a0\u65b0\u5173\u7cfb\uff0c\u6700\u540e\u4fdd\u5b58\u66f4\u65b0\u5230NVS\u4e2d\n */\n</code></pre>"},{"location":"_Embedded/240626-BM8563%20%E9%A9%B1%E5%8A%A8%E7%A7%BB%E6%A4%8D%EF%BC%8CIDF-I2C%20%E7%AC%94%E8%AE%B0/","title":"240626-BM8563 \u9a71\u52a8\u79fb\u690d\uff0cIDF-I2C \u7b14\u8bb0","text":"<p>\u5b98\u65b9 I2C \u6587\u6863\uff1a https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32s3/api-reference/peripherals/i2c.html</p> <p>\u5728 IDFv5.2 \u4e4b\u540e I2C \u8fdb\u884c\u4e86\u66f4\u65b0\uff0c\u4e3b\u8981\u6539\u52a8\u4e3a\u4ece\u673a\u4e0e\u4e3b\u673a\u8fdb\u884c\u4e86\u533a\u5206\uff1b\u5e76\u5728\u8001\u677f\u9a71\u52a8\u4e2d\uff0c\u9700\u8981\u4e00\u4e2a\u4e00\u4e2a\u6307\u4ee4\u901a\u8fc7\u8c03\u7528\u51fd\u6570\u7684\u65b9\u6cd5\u8fde\u63a5\u6210\u94fe\u8868\uff0c\u73b0\u5728\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u76f8\u5173\u7684\u51fd\u6570\u5373\u53ef</p> <p></p>"},{"location":"_Embedded/240626-BM8563%20%E9%A9%B1%E5%8A%A8%E7%A7%BB%E6%A4%8D%EF%BC%8CIDF-I2C%20%E7%AC%94%E8%AE%B0/#1-bm8563","title":"1 BM8563 \u79fb\u690d\u63a5\u53e3","text":"<p>\u4ee5\u4e0b\u4e3a\u63a5\u53e3\u8c03\u7528\u793a\u4f8b\uff1a <pre><code>static void bm8563_test_task(void *pvParameters)\n{\n    ESP_LOGI(TAG, \"-----------[BM8563 test start...]-----------\");\n\n    rtc_date_t test_date;\n    test_date.year = 2024;\n    test_date.month = 6;\n    test_date.day = 26;\n    test_date.hour = 12;\n    test_date.minute = 0;\n    test_date.second = 0;\n    bm8563_setTime(&amp;test_date);\n\n    rtc_date_t test_date2;\n    bm8563_getTime(&amp;test_date2);\n\n    ESP_LOGI(TAG, \"Get time: %d-%d-%d %d:%d:%d\", test_date2.year, test_date2.month, test_date2.day, test_date2.hour, test_date2.minute, test_date2.second);\n\n    // bm8563_setDateIRQ(1, 1, 1, 1);\n\n    // int16_t ret_BM1 = bm8563_setTimerIRQ(2500);\n    // ESP_LOGI(TAG, \"Set timer IRQ: %d\", ret_BM1);\n\n    // int16_t ret_BM2 = bm8563_getTimerTime();\n    // ESP_LOGI(TAG, \"Get timer time: %d\", ret_BM2);\n\n    // uint8_t ret_BM3 = bm8563_getIRQ();\n    // ESP_LOGI(TAG, \"Get IRQ: %d\", ret_BM3);\n\n    // bm8563_clearIRQ();\n\n    ESP_LOGI(TAG, \"-----------[BM8563 test DONE.]-----------\");\n    vTaskDelete(NULL);\n}\n</code></pre></p>"},{"location":"_Embedded/240719-LEDPWM%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%8C%87%E7%A4%BA%E5%87%BD%E6%95%B0%E5%B0%81%E8%A3%85/","title":"240719-LEDPWM\u53ca\u5e38\u7528\u6307\u793a\u51fd\u6570\u5c01\u88c5","text":""},{"location":"_Embedded/240719-LEDPWM%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%8C%87%E7%A4%BA%E5%87%BD%E6%95%B0%E5%B0%81%E8%A3%85/#1-ledpwm","title":"1 LEDPWM \u7b14\u8bb0","text":"<p>\u53c2\u8003\uff1a https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32s3/api-reference/peripherals/ledc.html</p> <p>\u2014\u2014\u5982\u4f55\u914d\u7f6e LEDC\uff08\u8f93\u51fa PWM\uff09</p> <p>\u5206\u4e09\u6b65\u5b8c\u6210\uff1a</p> <ul> <li>\u5b9a\u65f6\u5668\u914d\u7f6e</li> <li>\u901a\u9053\u914d\u7f6e</li> <li>\u6539\u53d8 PWM \u4fe1\u53f7</li> </ul>"},{"location":"_Embedded/240719-LEDPWM%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%8C%87%E7%A4%BA%E5%87%BD%E6%95%B0%E5%B0%81%E8%A3%85/#11","title":"1.1 \u5b9a\u65f6\u5668\u914d\u7f6e","text":"<p>\u82e5 PWM \u9891\u7387\u8d8a\u9ad8\u5219\u5360\u7a7a\u6bd4\u5206\u8fa8\u7387\u5219\u4f1a\u8d8a\u4f4e\uff1a</p> <p></p> <p>\u9664\u6b64\u4e4b\u5916\u65f6\u949f\u6e90\u4e5f\u53ef\u4ee5\u9650\u5236 PWM \u7684\u9891\u7387\uff0c\u65f6\u949f\u6e90\u9891\u7387\u8d8a\u9ad8\uff0c\u53ef\u914d\u7f6e\u7684 PWM \u9891\u7387\u4e0a\u9650\u5c31\u8d8a\u9ad8\u3002\u5e38\u7528\u7684 PWM \u7cbe\u5ea6\u53ef\u89c1\u6280\u672f\u53c2\u8003\u624b\u518c\uff1a</p> <p></p> <p>\u53e6\u5916 LEDC \u9a71\u52a8\u6709\u63d0\u4f9b\u4e00\u6761\u8f85\u52a9\u51fd\u6570\uff0c\u53ef\u4ee5\u7528\u4e8e\u627e\u5230\u6700\u5927\u7684\u53ef\u5206\u914d\u5360\u7a7a\u6bd4\u5206\u8fa8\u7387\u503c\uff1a</p> <p></p>"},{"location":"_Embedded/240719-LEDPWM%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%8C%87%E7%A4%BA%E5%87%BD%E6%95%B0%E5%B0%81%E8%A3%85/#12","title":"1.2 \u901a\u9053\u914d\u7f6e","text":""},{"location":"_Embedded/240719-LEDPWM%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%8C%87%E7%A4%BA%E5%87%BD%E6%95%B0%E5%B0%81%E8%A3%85/#13-pwm","title":"1.3 \u6539\u53d8 PWM \u4fe1\u53f7","text":"<p>\u5bf9\u4e8e ESP32-S3 \u6765\u8bf4\uff0cLEDPWM \u63a7\u5236\u5668\u4e2d\u6240\u6709\u7684\u5b9a\u65f6\u5668\u548c\u901a\u9053\u90fd\u53ea\u652f\u6301\u4f4e\u901f\u6a21\u5f0f\uff0c\u4e5f\u5c31\u662f\u5728\u901a\u9053\u8fd0\u884c\u4e4b\u540e\u82e5\u60f3\u8981\u6539\u53d8 PWM \u5360\u7a7a\u6bd4\uff0c\u53ea\u80fd\u4f7f\u7528\u8f6f\u4ef6\u663e\u5f0f\u5730\u89e6\u53d1\uff1a</p> <pre><code>esp_err_t ledc_set_duty(ledc_mode_t speed_mode, ledc_channel_t channel, uint32_t duty)\n</code></pre> <p>\u5728\u8c03\u7528\u4e0a\u8ff0\u51fd\u6570\u8bbe\u7f6e\u65b0\u7684\u5360\u7a7a\u6bd4\u4e4b\u540e\u9700\u8981\u8c03\u7528\u51fd\u6570 <code>ledc_update_duty()</code> \u4ee5\u4f7f\u65b0\u914d\u7f6e\u751f\u6548\uff0c\u82e5\u8981\u67e5\u770b\u5f53\u524d\u8bbe\u7f6e\u7684\u5360\u7a7a\u6bd4\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u8fdb\u884c\u67e5\u770b\uff1a</p> <pre><code>uint32_t ledc_get_duty(ledc_mode_t speed_mode, ledc_channel_t channel)\n</code></pre> <p>\u9664\u6b64\u4e4b\u5916\u53ef\u4ee5\u518d\u8c03\u7528\u4e00\u904d <code>ledc_channel_config()</code> \u6765\u8bbe\u7f6e\u5360\u7a7a\u6bd4\u548c\u5176\u4ed6\u901a\u9053\u53c2\u6570</p>"},{"location":"_Embedded/240719-LEDPWM%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%8C%87%E7%A4%BA%E5%87%BD%E6%95%B0%E5%B0%81%E8%A3%85/#14","title":"1.4 \u5b9e\u4f8b\u53c2\u8003","text":"<pre><code>#define LEDC_TIMER              LEDC_TIMER_0\n#define LEDC_MODE               LEDC_LOW_SPEED_MODE\n#define LEDC_OUTPUT_IO          (5) // Define the output GPIO\n#define LEDC_CHANNEL            LEDC_CHANNEL_0\n#define LEDC_DUTY_RES           LEDC_TIMER_13_BIT // Set duty resolution to 13 bits\n#define LEDC_DUTY               (4096) // Set duty to 50%. (2 ** 13) * 50% = 4096\n#define LEDC_FREQUENCY          (4000) // Frequency in Hertz. Set frequency at 4 kHz\n</code></pre> <pre><code>static void example_ledc_init(void)\n{\n    // \u521d\u59cb\u5316\u4e00\u4e2aledc\u5b9a\u65f6\u5668\n    ledc_timer_config_t ledc_timer = {\n        .speed_mode       = LEDC_MODE,\n        .duty_resolution  = LEDC_DUTY_RES,\n        .timer_num        = LEDC_TIMER,\n        .freq_hz          = LEDC_FREQUENCY,  // \u5c06\u8f93\u51fa\u9891\u7387\u8bbe\u7f6e\u4e3a4kHz\n        .clk_cfg          = LEDC_AUTO_CLK\n    };\n    ESP_ERROR_CHECK(ledc_timer_config(&amp;ledc_timer));\n\n    // Prepare and then apply the LEDC PWM channel configuration\n    ledc_channel_config_t ledc_channel = {\n        .speed_mode     = LEDC_MODE,\n        .channel        = LEDC_CHANNEL,\n        .timer_sel      = LEDC_TIMER,\n        .intr_type      = LEDC_INTR_DISABLE,\n        .gpio_num       = LEDC_OUTPUT_IO,\n        .duty           = 0, // Set duty to 0%\n        .hpoint         = 0\n    };\n    ESP_ERROR_CHECK(ledc_channel_config(&amp;ledc_channel));\n}\n</code></pre> <pre><code>void app_main(void)\n{\n    // Set the LEDC peripheral configuration\n    example_ledc_init();\n    // Set duty to 50%\n    ESP_ERROR_CHECK(ledc_set_duty(LEDC_MODE, LEDC_CHANNEL, LEDC_DUTY));\n    // Update duty to apply the new value\n    ESP_ERROR_CHECK(ledc_update_duty(LEDC_MODE, LEDC_CHANNEL));\n}\n</code></pre>"},{"location":"_Embedded/240719-LEDPWM%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%8C%87%E7%A4%BA%E5%87%BD%E6%95%B0%E5%B0%81%E8%A3%85/#2","title":"2 \u6307\u793a\u51fd\u6570\u8c03\u7528\u793a\u4f8b","text":"<pre><code>static void indicate_test_task(void *pvParameters)\n{\n    ESP_LOGI(TAG, \"-----------[INDICATE test start...]-----------\");\n\n    indicate_GLED_setting(LEDC_DUTY_100P);\n    indicate_YLED_setting(LEDC_DUTY_100P);\n    vTaskDelay(1000 / portTICK_PERIOD_MS);\n    indicate_YLED_setting(0);\n    indicate_GLED_setting(0);\n    vTaskDelay(1000 / portTICK_PERIOD_MS);\n    indicate_GLED_setting(LEDC_DUTY_50P);\n    indicate_YLED_setting(LEDC_DUTY_50P);\n\n    vTaskDelay(1000 / portTICK_PERIOD_MS);\n\n    note_t buz_notes[] = {NOTE_C, NOTE_F, NOTE_SILENCE, NOTE_SILENCE, NOTE_C, NOTE_SILENCE, NOTE_F, NOTE_SILENCE, NOTE_F};\n    indicate_BUZ_setting(buz_notes, 9, LEDC_DUTY_15P, 200);\n\n    ESP_LOGI(TAG, \"-----------[INDICATE test DONE.]-----------\");\n\n    vTaskDelete(NULL);\n}\n</code></pre>"},{"location":"_Embedded/240814-CubeMX%2BFreeRTOS%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/","title":"240814-CubeMX+FreeRTOS\u5f00\u53d1\u7b14\u8bb0","text":""},{"location":"_Embedded/240814-CubeMX%2BFreeRTOS%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/#_1","title":"\u786c\u4ef6\u53c2\u8003","text":""},{"location":"_Embedded/240814-CubeMX%2BFreeRTOS%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/#1","title":"1 \u5f15\u811a\u53c2\u8003","text":"<p>\u4f7f\u7528 cubemx \u914d\u7f6e\u5f15\u811a\uff0c\u5916\u8bbe\u4f7f\u7528\u60c5\u51b5\u5982\u4e0a</p>"},{"location":"_Embedded/240814-CubeMX%2BFreeRTOS%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/#2","title":"2 \u65f6\u949f\u6811\u53c2\u8003","text":"<ul> <li>APB1 \u603b\u7ebf\u901f\u5ea6\uff1a<code>42MHz</code></li> <li>APB1 \u5b9a\u65f6\u5668\u65f6\u949f\uff1a<code>84MHz</code></li> <li>APB2 \u603b\u7ebf\u901f\u5ea6\uff1a<code>84MHz</code></li> <li>APB2 \u5b9a\u65f6\u5668\u65f6\u949f\uff1a<code>168MHz</code></li> </ul> <p>APB1 \u603b\u7ebf\u901f\u5ea6\u5fc5\u987b\u5c0f\u4e8e <code>42MHz</code>\uff1bAPB2 \u603b\u7ebf\u901f\u5ea6\u5fc5\u987b\u5c0f\u4e8e <code>84MHz</code></p>"},{"location":"_Embedded/240814-CubeMX%2BFreeRTOS%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/#3","title":"3 \u5b9a\u65f6\u5668","text":"<p>\u7531\u4e8e\u5149\u6e90\u9a71\u52a8\u9700\u8981\uff0c\u672c\u6b21\u786c\u4ef6\u8bbe\u8ba1\u9700\u8981\u975e\u5e38\u591a\u7684 pwm \u8f93\u51fa\u901a\u9053\uff0c\u6545\u5728\u6b64\u5bf9\u4e8e F407VET6 \u7684\u5b9a\u65f6\u5668\u8d44\u6e90\u505a\u7b80\u8981\u7b14\u8bb0</p> <p>\u5b9a\u65f6\u5668\u5916\u8bbe\u90e8\u5206\u4e00\u822c\u9002\u7528\u4e8e\u6574\u4e2a F4 \u7cfb\u5217</p> <p>STM32F405xx/07xx \u548c STM32F415xx/17xx \u7684\u5b9a\u65f6\u5668\u65f6\u949f\u9891\u7387\u7531\u786c\u4ef6\u81ea\u52a8\u8bbe\u7f6e\u3002\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ol> <li>\u5982\u679c APB \u9884\u5206\u9891\u5668\u4e3a 1\uff0c\u5b9a\u65f6\u5668\u65f6\u949f\u9891\u7387\u7b49\u4e8e APB \u57df\u7684\u9891\u7387\u3002 </li> <li>\u5426\u5219\uff0c\u7b49\u4e8e APB \u57df\u7684\u9891\u7387\u7684\u4e24\u500d (\u00d72)\u3002</li> </ol> <p></p> <p>TIM1\u30018\u30019\u300110\u300111 \u5c5e\u4e8e APB2 \u603b\u7ebf\uff0c\u6700\u9ad8\u53ef\u8fbe 168MHz</p> <p>TIM2\u30013\u30014\u30015\u300112\u300113\u300114 \u5c5e\u4e8e APB1 \u603b\u7ebf\uff0c\u6700\u9ad8\u53ef\u8fbe 84MHz</p> <p>TIM6\u30017 \u4e5f\u5c5e\u4e8e APB1 \u603b\u7ebf\uff0c\u662f\u4e24\u4e2a\u57fa\u7840\u5b9a\u65f6\u5668</p>"},{"location":"_Embedded/240818-%E8%93%9D%E7%89%99%E9%85%8D%E7%BD%91%E4%BB%A5%E5%8F%8AsoftAP%E6%96%B9%E5%BC%8F%E9%85%8D%E7%BD%91%E6%8E%A2%E7%B4%A2/","title":"240818-\u84dd\u7259\u914d\u7f51\u4ee5\u53ca softAP \u65b9\u5f0f\u914d\u7f51\u63a2\u7d22","text":"<p>ESP32 \u7aef\u53c2\u8003\uff1a</p> <p>\u5b98\u65b9\u7edf\u4e00\u914d\u7f51\u6587\u6863\uff1a https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32s3/api-reference/provisioning/provisioning.html#id1</p> <p>blufi \u5b98\u65b9 API \u6307\u5357\uff1a https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32s3/api-guides/ble/blufi.html?highlight=blufi</p> <p>BluFi \u84dd\u7259\u914d\u7f51\u63a5\u53e3\u53c2\u8003\u535a\u5ba2\uff1a https://blog.csdn.net/qq_36347513/article/details/118968576</p> <p>BluFi \u84dd\u7259\u53c2\u8003\u4f8b\u7a0b\uff1a https://github.com/espressif/esp-idf/tree/d7ca8b94c852052e3bc33292287ef4dd62c9eeb1/examples/bluetooth/blufi</p> <p>\u5c0f\u7a0b\u5e8f\u7aef\u53c2\u8003</p> <p>BluFi \u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u914d\u7f51\u53c2\u8003\u5de5\u7a0b 1\uff1a https://github.com/xuhongv/BlufiEsp32WeChat</p> <p>\u5c0f\u7a0b\u5e8f\u53c2\u8003\u5de5\u7a0b 1 \u7684\u53c2\u8003\u535a\u5ba2\uff1a https://blog.csdn.net/Boantong_/article/details/115666854</p>"},{"location":"_Embedded/240818-%E8%93%9D%E7%89%99%E9%85%8D%E7%BD%91%E4%BB%A5%E5%8F%8AsoftAP%E6%96%B9%E5%BC%8F%E9%85%8D%E7%BD%91%E6%8E%A2%E7%B4%A2/#1","title":"1 \u7edf\u4e00\u914d\u7f51","text":""},{"location":"_Embedded/240818-%E8%93%9D%E7%89%99%E9%85%8D%E7%BD%91%E4%BB%A5%E5%8F%8AsoftAP%E6%96%B9%E5%BC%8F%E9%85%8D%E7%BD%91%E6%8E%A2%E7%B4%A2/#2-blufi","title":"2 BluFi \u914d\u7f51","text":"<p>\u914d\u7f51\u6d41\u7a0b\u5982\u5b98\u65b9\u6587\u6863\u4e0a\u56fe\u6240\u793a</p> <ul> <li>ESP32 \u7aef\u6253\u5f00 GATTS \u6a21\u5f0f\uff0c\u53d1\u9001\u5e7f\u64ad\u6570\u636e\u5305\uff0c\u624b\u673a\u4f5c\u4e3a GATTC \u63a5\u5165</li> <li>\u624b\u673a\u7aef\u53d1\u9001\u6570\u636e\u5e27\u5f00\u59cb\u8fdb\u884c\u5bc6\u94a5\u534f\u5546\uff0cESP32 \u7aef\u6536\u5230\u4e4b\u540e\u5f00\u59cb\u89e3\u6790</li> <li>\u534f\u5546\u7ed3\u675f\u540e\uff0c\u624b\u673a\u5411 ESP32 \u53d1\u9001\u63a7\u5236\u5e27\uff0c\u8bbe\u7f6e\u5b89\u5168\u6a21\u5f0f\uff1b</li> <li>\u8bbe\u7f6e\u5b8c\u6210\u540e\u5f00\u59cb\u53d1\u9001\u8054\u7f51\u6240\u9700\u7684\u6570\u636e\u5e27</li> <li>\u53d1\u9001\u5b8c\u6210\u540e\u624b\u673a\u53d1\u9001\u63a7\u5236\u5e27\uff0c\u6b64\u65f6 ESP32 \u7aef\u9ed8\u8ba4\u624b\u673a\u5df2\u5b8c\u6210\u5fc5\u8981\u4fe1\u606f\u7684\u4f20\u8f93\uff0c\u5f00\u59cb\u8fde\u63a5 WIFI</li> <li>\u8fde\u63a5 WIFI \u540e ESP32\u53d1\u9001 WIFI \u8fde\u63a5\u72b6\u6001\u62a5\u544a\u81f3\u624b\u673a\uff0c\u81f3\u6b64\u914d\u7f51\u7ed3\u675f</li> </ul>"},{"location":"_Embedded/240818-%E8%93%9D%E7%89%99%E9%85%8D%E7%BD%91%E4%BB%A5%E5%8F%8AsoftAP%E6%96%B9%E5%BC%8F%E9%85%8D%E7%BD%91%E6%8E%A2%E7%B4%A2/#21","title":"2.1 \u57fa\u4e8e\u5b98\u65b9\u4f8b\u7a0b\u5c1d\u8bd5\u79fb\u690d","text":""},{"location":"_Embedded/240818-%E8%93%9D%E7%89%99%E9%85%8D%E7%BD%91%E4%BB%A5%E5%8F%8AsoftAP%E6%96%B9%E5%BC%8F%E9%85%8D%E7%BD%91%E6%8E%A2%E7%B4%A2/#211","title":"2.1.1 \u5b98\u65b9\u4f8b\u7a0b\u7ed3\u6784","text":"<p>\u4e3b\u51fd\u6570\u4e2d\u9996\u5148\u521d\u59cb\u5316\u4e86\u56db\u4e2a\u5fc5\u8981\u7684\u7ec4\u4ef6\uff1a</p> <ul> <li>nvs \u5b58\u50a8</li> <li>wifi \u521d\u59cb\u5316</li> <li>\u5c01\u88c5\u51fd\u6570 blufi \u63a7\u5236\u5668\u521d\u59cb\u5316</li> <li>blufi_host_and_cb \u521d\u59cb\u5316</li> </ul> <p>NVS \u5b58\u50a8\u521d\u59cb\u5316\u7565\uff0c\u6ca1\u6709\u4e0a\u6e38\u4f9d\u8d56</p> <p>WIFI \u521d\u59cb\u5316\uff1a </p> <ul> <li>netif \u521d\u59cb\u5316\uff1a\u7f51\u7edc\u63a5\u53e3\u7684\u521d\u59cb\u5316\uff0c\u4fdd\u6301\u9ed8\u8ba4\u5373\u53ef</li> <li>\u521b\u5efa ble \u914d\u7f51\u4f7f\u7528\u7684 wifi \u4e8b\u4ef6\u7ec4\uff0c\u8be5\u4e8b\u4ef6\u7ec4\u4e2d\u53ea\u5b9a\u4e86\u4e00\u4e2a <code>CONNECTED_BIT</code> \u7528\u6765\u6307\u793a\u83b7\u53d6\u5230 IP \u6807\u5fd7\u8054\u7f51\u6210\u529f</li> <li>\u521b\u5efa\u9ed8\u8ba4\u7cfb\u7edf\u4e8b\u4ef6\u5faa\u73af</li> <li>\u5728 netif \u5c42\u4e0a\u521b\u5efa\u9ed8\u8ba4\u7684 sta \u6a21\u5f0f\u4ee5\u53ca ap \u6a21\u5f0f\u53e5\u67c4</li> <li>\u6ce8\u518c WIFI \u4e8b\u4ef6\u7684\u56de\u8c03\u51fd\u6570</li> <li>\u6ce8\u518c IP \u4e8b\u4ef6\u7684\u56de\u8c03\u51fd\u6570</li> <li>\u6309\u9ed8\u8ba4\u914d\u7f6e\u521d\u59cb\u5316 WIFI\uff0c\u6309 STA \u6a21\u5f0f\u4f7f\u80fd WIFI\uff0c\u5e76\u8bbe\u7f6e\u8bb0\u5f55 WIFI \u8fde\u63a5\u7684\u76f8\u5173\u4fe1\u606f\uff08\u7528\u4e8e\u7ec4\u6210\u53d1\u56de\u7ed9\u624b\u673a\u7684\u6570\u636e\u5305\uff09</li> </ul> <p>blufi \u63a7\u5236\u5668\u521d\u59cb\u5316\uff1a \u6309\u7167\u9ed8\u8ba4\u914d\u7f6e <code>BT_CONTROLLER_INIT_CONFIG_DEFAULT</code> \u521d\u59cb\u5316\u84dd\u7259\u63a7\u5236\u5668\u5e76\u4f7f\u80fd</p> <p>blufi_host_and_cb \u521d\u59cb\u5316\uff1a </p> <ul> <li><code>esp_blufi_host_init</code>\uff1a<code>blufi_init.c</code> \uff0c\u521d\u59cb\u5316 bluedroid \u84dd\u7259\u534f\u8bae\u6808\u5e76\u4f7f\u80fd</li> <li><code>esp_blufi_register_callbacks</code>\uff1ablufi \u7ec4\u4ef6\u6240\u5c5e\u51fd\u6570\uff0c\u6ce8\u518c blufi \u76f8\u5173\u4e8b\u4ef6\u7684\u56de\u8c03\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u63a5\u53d7\u672c\u6b21\u4f8b\u7a0b\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u51e0\u4e2a\u5fc5\u8981\u56de\u8c03\u51fd\u6570\uff0c\u5e76\u4f20\u9012\u7ed9 blufi \u7ec4\u4ef6\u4ee5\u4f9b blufi \u914d\u7f51\u8fc7\u7a0b\u4f7f\u7528\u2014\u2014\u5982 blufi \u4e8b\u4ef6\u56de\u8c03\u51fd\u6570\u3001\u6570\u636e\u534f\u5546\u5904\u7406\u51fd\u6570\uff08DH \u65b9\u5f0f\uff09\u3001\u52a0\u89e3\u5bc6\u5904\u7406\u51fd\u6570\uff08AES \u52a0\u5bc6\u65b9\u5f0f\uff09\u3001\u6821\u9a8c\u5904\u7406\u51fd\u6570\uff08CRC \u65b9\u5f0f\uff09</li> <li><code>esp_blufi_gap_register_callback</code>\uff1a<code>blufi_init.c</code> \uff0c\u8c03\u7528\u4e86\u4e00\u4e0b blufi \u7ec4\u4ef6\u4e2d\u7684\u76f8\u5173\u51fd\u6570\uff0c\u6ce8\u518c\u56de\u8c03\u51fd\u6570\u6765\u5e7f\u64ad blufi \u9ed8\u8ba4\u7684\u6570\u636e\u5305\uff0c\u521d\u59cb\u5316 blufi \u7684 profile</li> </ul> <p>\u7ed3\u5408\u4e0a\u8ff0\u4e09\u4e2a\u7ec4\u4ef6\u6765\u770b\uff0c\u7531\u4e8e\u539f\u6709\u7cfb\u7edf\u4e2d\u672c\u8eab\u5c31\u9700\u8981\u521d\u59cb\u5316 bluedroid \u534f\u8bae\u6808\u4ee5\u53ca GATTS \u670d\u52a1\uff0c\u56e0\u6b64\u7b2c\u4e8c\u70b9 blufi \u63a7\u5236\u5668\u521d\u59cb\u5316\u4ee5\u53ca\u7b2c\u4e09\u70b9\u4e2d\u7684\u521d\u59cb\u5316 bluedroid \u84dd\u7259\u534f\u8bae\u6808\u53ef\u4ee5\u5728\u521d\u59cb\u5316 blufi \u534f\u8bae\u4e4b\u524d\u5c31\u5b8c\u6210\u3002</p>"},{"location":"_Embedded/240818-%E8%93%9D%E7%89%99%E9%85%8D%E7%BD%91%E4%BB%A5%E5%8F%8AsoftAP%E6%96%B9%E5%BC%8F%E9%85%8D%E7%BD%91%E6%8E%A2%E7%B4%A2/#212-kconfig-smartconfig","title":"2.1.2 \u5229\u7528 Kconfig \u5c06\u539f\u914d\u7f51\u5b9e\u73b0\uff08smartconfig\uff09\u914d\u7f6e\u4e3a\u53ef\u9009\u9879","text":"<p>ESP-IDF \u4f7f\u7528\u57fa\u4e8e\u00a0kconfiglib\u00a0\u7684\u00a0esp-idf-kconfig\u00a0\u5305\uff0c\u800c\u00a0kconfiglib\u00a0\u662f\u00a0Kconfig\u00a0\u7cfb\u7edf\u7684 Python \u6269\u5c55\u3002Kconfig \u63d0\u4f9b\u4e86\u7f16\u8bd1\u65f6\u7684\u9879\u76ee\u914d\u7f6e\u673a\u5236\uff0c\u4ee5\u53ca\u591a\u79cd\u7c7b\u578b\u7684\u914d\u7f6e\u9009\u9879\uff08\u5982\u6574\u6570\u3001\u5b57\u7b26\u4e32\u548c\u5e03\u5c14\u503c\u7b49\uff09\u3002Kconfig \u6587\u4ef6\u6307\u5b9a\u4e86\u9009\u9879\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u3001\u9ed8\u8ba4\u503c\u3001\u7ec4\u5408\u65b9\u5f0f\u7b49\u3002</p> <p><code>Kconfig</code>\u00a0\u662f\u4e00\u79cd\u7528\u4e8e\u914d\u7f6e\u5185\u6838\u548c\u8f6f\u4ef6\u9879\u76ee\u7684\u914d\u7f6e\u8bed\u8a00\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e Linux \u5185\u6838\u3001U-Boot \u548c\u5176\u4ed6\u5d4c\u5165\u5f0f\u7cfb\u7edf\u9879\u76ee\u4e2d\u3002\u5b83\u5141\u8bb8\u5f00\u53d1\u8005\u5b9a\u4e49\u914d\u7f6e\u9009\u9879\uff0c\u5e76\u901a\u8fc7\u83dc\u5355\u754c\u9762\uff08\u5982\u00a0<code>menuconfig</code>\uff09\u8fdb\u884c\u914d\u7f6e\u3002</p> <p>\u901a\u8fc7\u7f16\u5199 IDF \u7ec4\u4ef6\u6587\u4ef6\u5939\u4e0b\u7684 <code>Kconfig.projbuild</code> \u6587\u4ef6\uff0c\u5728 IDF Full Clean \u4e4b\u540e\u4fbf\u53ef\u4ee5\u751f\u6210\u7531\u7ec4\u4ef6 Kconfig \u89c4\u5b9a\u7684\u82e5\u5e72\u5b8f\u3002</p> <p>\u6b64\u914d\u7f6e\u5c06\u4fdd\u5b58\u5728\u9879\u76ee\u6839\u76ee\u5f55\u7684\u00a0<code>sdkconfig</code>\u00a0\u6587\u4ef6\u4e2d\u3002\u501f\u52a9\u00a0<code>sdkconfig</code>\uff0c\u5e94\u7528\u7a0b\u5e8f\u6784\u5efa\u76ee\u6807\u5c06\u5728\u6784\u5efa\u76ee\u5f55\u4e2d\u751f\u6210\u00a0<code>sdkconfig.h</code>\u00a0\u6587\u4ef6 \uff0c\u5e76\u4f7f\u5f97\u00a0<code>sdkconfig</code>\u00a0\u9009\u9879\u53ef\u7528\u4e8e\u9879\u76ee\u6784\u5efa\u7cfb\u7edf\u548c\u6e90\u6587\u4ef6\u3002</p>"},{"location":"_Embedded/240818-%E8%93%9D%E7%89%99%E9%85%8D%E7%BD%91%E4%BB%A5%E5%8F%8AsoftAP%E6%96%B9%E5%BC%8F%E9%85%8D%E7%BD%91%E6%8E%A2%E7%B4%A2/#213","title":"2.1.3 \u79fb\u690d\u7ed3\u679c","text":"<p>\u5b9e\u73b0 blufi \u914d\u7f51\u65b9\u5f0f\uff1b</p> <p></p> <p></p> <p>\u5e76\u53ef\u901a\u8fc7 Kconfig \u9009\u62e9\u914d\u7f51\u65b9\u5f0f</p> <p></p>"},{"location":"_Embedded/240818-%E8%93%9D%E7%89%99%E9%85%8D%E7%BD%91%E4%BB%A5%E5%8F%8AsoftAP%E6%96%B9%E5%BC%8F%E9%85%8D%E7%BD%91%E6%8E%A2%E7%B4%A2/#214-todo","title":"2.1.4 ToDo","text":"<p>\u56e0\u4e3a\u662f\u9a8c\u8bc1\u6027\u8d28\u7684\u79fb\u690d\u6240\u4ee5\u8fd8\u6709\u5f88\u591a\u53ef\u4ee5\u5220\u51cf\u7684\u90e8\u5206\uff0c\u4e1a\u52a1\u903b\u8f91\u4e5f\u8fd8\u6709\u4e00\u70b9\u4e0d\u5b8c\u5584\uff0c\u56e0\u6b64\u540e\u9762\u8fd8\u9700\u8981\u7ee7\u7eed\u91cd\u6784\uff0c\u5e76\u68c0\u67e5\u6709\u6ca1\u6709\u56e0\u4e3a\u66f4\u6539\u914d\u7f51\u65b9\u5f0f\u5bfc\u81f4\u7684\u5176\u4ed6\u4f9d\u8d56 WIFI \u7684\u5e94\u7528\u7a0b\u5e8f\u9519\u8bef\u8fd0\u884c\u3002</p> <p>\u4ee5\u53ca\u8fd8\u9700\u8981\u4e0e\u5c0f\u7a0b\u5e8f\u7aef\u4e00\u8d77\uff0c\u6d4b\u8bd5\u4e00\u4e0b\u4e0d\u540c\u5e73\u53f0\u624b\u673a\u7684\u914d\u7f51\u6210\u529f\u7387\u4ee5\u53ca\u9a8c\u8bc1\u3002</p>"},{"location":"_Embedded/240820-SolidWorks%E5%BC%80%E8%9E%BA%E7%BA%B9%E5%AD%94/","title":"240820-SolidWorks\u5f00\u87ba\u7eb9\u5b54","text":"<p>\u53c2\u8003\u535a\u5ba2\uff1a https://blog.csdn.net/haigear/article/details/111504639</p> <p>\u5f00\u5b54\u5411\u5bfc\u9009\u62e9\u87ba\u7eb9\u5b54</p>"},{"location":"_Embedded/240822-ESP32%E5%88%86%E5%8C%BA%E8%A1%A8%E5%8F%8AOTA/","title":"240822-ESP32\u5206\u533a\u8868\u53ca OTA","text":""},{"location":"_Embedded/240822-ESP32%E5%88%86%E5%8C%BA%E8%A1%A8%E5%8F%8AOTA/#1","title":"1 \u5206\u533a\u8868","text":"<p>\u5206\u533a\u8868\u5b98\u65b9\u6587\u6863\uff1a https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32s3/api-guides/partition-tables.html</p> <p>\u5206\u533a\u8868\u4e2d\u7684\u6bcf\u4e2a\u6761\u76ee\u90fd\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\uff1aName\uff08\u6807\u7b7e\uff09\u3001Type\uff08app\u3001data \u7b49\uff09\u3001SubType \u4ee5\u53ca\u5728 flash \u4e2d\u7684\u504f\u79fb\u91cf\uff08\u5206\u533a\u7684\u52a0\u8f7d\u5730\u5740\uff09\u3002</p> <p></p> <p>\u5185\u7f6e\u5206\u533a\u8868\u4e3e\u4f8b</p> <p>\u521b\u5efa\u81ea\u5b9a\u4e49\u5206\u533a\u8868\uff1a</p> <p></p> <ul> <li>Name \u5b57\u6bb5\u4e0d\u80fd\u8d85\u8fc7 16 \u4e2a\u5b57\u8282</li> <li>Type \u5b57\u6bb5\u53ef\u4ee5\u6307\u5b9a\u4e3a <code>app</code> \u6216 <code>data</code> \uff1b\u8fd9\u662f\u5e38\u7528\u7684\u4e24\u4e2a\u679a\u4e3e\u7c7b\u578b\uff0c\u5177\u4f53\u5b8c\u6574\u7684\u5b58\u50a8\u6570\u636e\u683c\u5f0f\u53ef\u4ee5\u53c2\u8003 <code>esp_partition_type_t</code></li> <li>SubType \u5b57\u6bb5\u4ec5\u89c4\u5b9a <code>app</code> \u548c <code>data</code> \u5b57\u6bb5\u7684\u542b\u4e49\uff0c\u67e5\u9605 <code>esp_partition_subtype_t</code>\u4ee5\u4e86\u89e3\u5b8c\u6574\u7684\u5b50\u7c7b\u578b\u5217\u8868<ul> <li>Type: app<ul> <li><code>factory</code>\uff1a</li> <li><code>ota_x</code>\uff1a\u82e5\u4f7f\u7528 OTA \u7684\u65f6\u5019\u81f3\u5c11\u5e94\u5f53\u6709\u4e24\u4e2a OTA \u5e94\u7528\u7a0b\u5e8f\u5206\u533a\uff1b\u6700\u5927\u53ef\u4ee5\u6709 0-15</li> <li><code>test</code>\uff1a\u6d4b\u8bd5\u7528\uff0c\u9884\u7559\u7684\u5b50\u7c7b\u578b\uff1b\u7528\u4e8e\u5de5\u5382\u6d4b\u8bd5\u6d41\u7a0b\uff1b\u5982\u679c\u6ca1\u6709\u5176\u4ed6\u6709\u6548\u7684 app \u5206\u533a\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u5907\u9009\u542f\u52a8\u5206\u533a\u8fdb\u884c\u4f7f\u7528\u3002</li> </ul> </li> <li>Type: data<ul> <li><code>ota</code>\uff1a\u6307\u5b9a\u6253\u5f00\u7684 OTA \u5e94\u7528\u7a0b\u5e8f\uff1b\u5927\u5c0f\u9700\u8981\u8bbe\u5b9a\u4e3a <code>0x2000</code> \uff0c\u5bb9\u91cf\u4e3a\u4e24\u4e2a flash \u6247\u533a\u7684\u5927\u5c0f\uff0c\u8fd9\u662f\u4e3a\u4e86\u653e\u7f6e\u5199\u5165\u7684\u65f6\u5019\u7535\u6e90\u6545\u969c\u5f15\u53d1\u95ee\u9898\uff0c\u4e24\u4e2a\u6247\u533a\u5355\u72ec\u64e6\u9664\u3001\u5199\u5165\u5339\u914d\u6570\u636e\uff0c\u82e5\u5b58\u5728\u4e0d\u4e00\u81f4\uff0c\u5219\u7528\u8ba1\u6570\u5668\u5b57\u6bb5\u5224\u5b9a\u54ea\u4e2a\u6247\u533a\u4e3a\u6700\u65b0\u6570\u636e\u3002\uff1b\u53c2\u8003\u00a0OTA \u6587\u6863 </li> <li><code>phy</code>\uff1a\u7528\u4e8e\u5b58\u653e PHY \u521d\u59cb\u5316\u6570\u636e\uff1b\u4ece\u800c\u4fdd\u8bc1\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u8bbe\u5907\u914d\u7f6e PHY</li> <li><code>nvs</code>\uff1a\u975e\u6613\u5931\u6027\u5b58\u50a8\uff1b\u5b98\u65b9\u5efa\u8bae\u81f3\u5c11\u5206\u914d <code>0x3000</code> \u4e2a\u5b57\u8282\u7684\u7a7a\u95f4\uff0c\u5982\u679c\u4f7f\u7528\u5176 API \u5b58\u50a8\u5927\u91cf\u6570\u636e\uff0c\u9ed8\u8ba4\u662f <code>0x6000</code> \u4e2a\u5b57\u8282</li> <li><code>nvs_keys</code>\uff1anvs \u7684\u5bc6\u94a5\u5206\u533a</li> </ul> </li> </ul> </li> </ul> <p></p> <p>\u5b9e\u9645\u70e7\u5199\u7684\u5206\u533a\u8868\u4e0d\u662f csv \u6587\u4ef6\u672c\u8eab\uff0c\u9700\u8981\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u5982\u679c\u5728 menuconfig \u4e2d\u8bbe\u7f6e\u4e86\u5206\u533a\u8868 csv \u6587\u4ef6\u7684\u540d\u79f0\u7684\u8bdd\uff0c\u5229\u7528 idf. py \u6784\u5efa\u9879\u76ee\u5c06\u4f1a\u81ea\u52a8\u8f6c\u6362\u3002</p>"},{"location":"_Embedded/240822-ESP32%E5%88%86%E5%8C%BA%E8%A1%A8%E5%8F%8AOTA/#2-ota","title":"2 OTA \u53c2\u8003","text":"<p>\u53c2\u8003\u535a\u5ba2\uff1a https://blog.csdn.net/qq_36347513/article/details/117819717?spm=1001.2014.3001.5501</p> <p>\u5b98\u65b9 API \u53c2\u8003\uff1a https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32s3/api-reference/system/ota.html</p> <p>OTA \u8be6\u7ec6\u8fc7\u7a0b\uff1a</p> <p></p> <p>\u539f\u751f API \u7684 demo \u6d41\u7a0b\u89e3\u6790\uff1a</p> <p></p>"},{"location":"_Embedded/240822-ESP32%E5%88%86%E5%8C%BA%E8%A1%A8%E5%8F%8AOTA/#21-http","title":"2.1 \u521b\u5efa HTTP \u670d\u52a1\u5668","text":""},{"location":"_Embedded/240822-ESP32%E5%88%86%E5%8C%BA%E8%A1%A8%E5%8F%8AOTA/#211-python","title":"2.1.1 Python \u65b9\u5f0f","text":"<pre><code>python -m http.server --bind 192.168.61.67 8070\n</code></pre> <p>\u5728 build \u6587\u4ef6\u5939\u4e0b\u8fd0\u884c\u4e0a\u8ff0\u6307\u4ee4\uff0c\u5c06\u4f1a\u751f\u6210\u4e00\u4e2a\u672c\u5730\u670d\u52a1\u5668\uff0c\u8be5\u670d\u52a1\u5668\u4e0b\u5bf9\u5e94 build \u6587\u4ef6\u5939\u4e0b\u7684\u6240\u6709\u5185\u5bb9\uff1b</p>"},{"location":"_Embedded/240822-ESP32%E5%88%86%E5%8C%BA%E8%A1%A8%E5%8F%8AOTA/#212-hfs","title":"2.1.2 HFS \u65b9\u5f0f","text":"<p>\u4e00\u4e2a\u53ef\u89c6\u5316\u5de5\u5177\uff0c\u5927\u6982\u957f\u8fd9\u6837\uff1a</p> <p></p>"},{"location":"_Embedded/240822-ESP32%E5%88%86%E5%8C%BA%E8%A1%A8%E5%8F%8AOTA/#3-ota","title":"3 \u6d4b\u8bd5 OTA \u79fb\u690d\u4f8b\u7a0b","text":"<p>\u66f4\u65b0\uff1a2024 \u5e74 8 \u6708 24 \u65e5</p> <p>\u7531\u4e8e\u8be5\u535a\u5ba2\u7684\u516c\u5f00\u6027\u8d28\uff0c\u670d\u52a1\u5668\u516c\u7f51 IP \u53ca\u7aef\u53e3\u4f5c\u533f\u540d\u5904\u7406</p>"},{"location":"_Embedded/240822-ESP32%E5%88%86%E5%8C%BA%E8%A1%A8%E5%8F%8AOTA/#31","title":"3.1 \u670d\u52a1\u5668\u90e8\u7f72","text":"<p>\u670d\u52a1\u5668\u7aef\u4e0d\u592a\u719f\u6089\uff0c\u6d4b\u8bd5\u6d41\u7a0b\u4e3b\u8981\u662f\u9a8c\u8bc1 ESP32 \u7684 OTA \u63a5\u53e3\uff0c\u670d\u52a1\u5668\u4e0a\u7684\u6d4b\u8bd5\u73af\u5883\u600e\u4e48\u7b80\u5355\u600e\u4e48\u6765</p> <p>\u5b89\u88c5\u5b9d\u5854\u9762\u677f\uff0c\u4e00\u952e\u90e8\u7f72 nginx</p> <p>\u4f7f\u7528 nginx \u90e8\u7f72 http \u670d\u52a1\u5668\uff0c\u6253\u5f00 autoindex\uff0c\u8bbe\u7f6e root \u8def\u5f84\uff1a</p> <pre><code># nginx\u7684\u914d\u7f6e\u6587\u4ef6\nserver{\n    listen xxxx;\n    server_name phpmyadmin;\n    # index index.html index.htm index.php;\n    root  /home/www/esp32bin; # &lt;- \u8fd9\u91cc\u662fbin\u6587\u4ef6\u653e\u7f6e\u7684\u8def\u5f84\n        location ~ /tmp/ {\n            return 403;\n        }\n    autoindex on;\n    autoindex_localtime on; \n    autoindex_exact_size off;\n}    \n</code></pre> <p>\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"_Embedded/240822-ESP32%E5%88%86%E5%8C%BA%E8%A1%A8%E5%8F%8AOTA/#32-esp32","title":"3.2 ESP32 \u7aef\u6d4b\u8bd5\u7ed3\u679c","text":"<pre><code>--- Using \\\\.\\COM8 instead...\n--- esp-idf-monitor 1.4.0 on \\\\.\\COM8 115200 ---\n--- Quit: Ctrl+] | Menu: Ctrl+T | Help: Ctrl+T followed by Ctrl+H ---\nESP-ROM:esp32s3-20210327\nBuild:Mar 27 2021       \nrst:0x1 (POWERON),boot:0xb (SPI_FAST_FLASH_BOOT)\nSPIWP:0xee\nmode:DIO, clock div:1\nload:0x3fce3810,len:0x178c\nload:0x403c9700,len:0x4\nload:0x403c9704,len:0xcbc\nload:0x403cc700,len:0x2da0\nentry 0x403c9914\nI (27) boot: ESP-IDF v5.2.1 2nd stage bootloader\nI (27) boot: compile time Aug 23 2024 10:44:26\nI (27) boot: Multicore bootloader\nI (30) boot: chip revision: v0.2\nI (34) boot.esp32s3: Boot SPI Speed : 80MHz\nI (38) boot.esp32s3: SPI Mode       : DIO\nI (43) boot.esp32s3: SPI Flash Size : 8MB\nI (48) boot: Enabling RNG early entropy source...\nI (53) boot: Partition Table:\nI (57) boot: ## Label            Usage          Type ST Offset   Length\nI (64) boot:  0 nvs              WiFi data        01 02 00009000 00006000\nI (72) boot:  1 otadata          OTA data         01 00 0000f000 00002000\nI (79) boot:  2 phy_init         RF data          01 01 00011000 00001000\nI (87) boot:  3 factory          factory app      00 00 00020000 00200000\nI (94) boot:  4 ota_0            OTA app          00 10 00220000 00200000\nI (102) boot:  5 ota_1            OTA app          00 11 00420000 00200000\nI (109) boot: End of partition table\nI (113) boot: Defaulting to factory image\nI (118) esp_image: segment 0: paddr=00020020 vaddr=3c110020 size=56d8ch (355724) map\nI (190) esp_image: segment 1: paddr=00076db4 vaddr=3fc9bb00 size=05094h ( 20628) load\nI (195) esp_image: segment 2: paddr=0007be50 vaddr=40374000 size=041c8h ( 16840) load        \nI (200) esp_image: segment 3: paddr=00080020 vaddr=42000020 size=103d78h (1064312) map       \nI (396) esp_image: segment 4: paddr=00183da0 vaddr=403781c8 size=1382ch ( 79916) load\nI (423) boot: Loaded app from partition at offset 0x20000\nI (423) boot: Disabling RNG early entropy source...\nI (435) cpu_start: Multicore app\nI (444) cpu_start: Pro cpu start user code\nI (444) cpu_start: cpu freq: 160000000 Hz\nI (445) cpu_start: Application information:\nI (447) cpu_start: Project name:     entrance_idf_prj\nI (453) cpu_start: App version:      v1.0-38-gcc0dfe7-dirty\nI (459) cpu_start: Compile time:     Aug 24 2024 17:01:59\nI (466) cpu_start: ELF file SHA256:  a8a0453d5...\nI (471) cpu_start: ESP-IDF:          v5.2.1\nI (476) cpu_start: Min chip rev:     v0.0\nI (480) cpu_start: Max chip rev:     v0.99 \nI (485) cpu_start: Chip rev:         v0.2\nI (490) heap_init: Initializing. RAM available for dynamic allocation:\nI (497) heap_init: At 3FCA8AE0 len 00040C30 (259 KiB): RAM\nI (503) heap_init: At 3FCE9710 len 00005724 (21 KiB): RAM\nI (509) heap_init: At 3FCF0000 len 00008000 (32 KiB): DRAM\nI (516) heap_init: At 600FE010 len 00001FD8 (7 KiB): RTCRAM\nI (523) spi_flash: detected chip: gd\nI (526) spi_flash: flash io: dio\nI (530) sleep: Configure to isolate all GPIO pins in sleep state\nI (537) sleep: Enable automatic switching of GPIO sleep configuration\nI (544) coexist: coex firmware version: 77cd7f8\nI (549) coexist: coexist rom version e7ae62f\nI (555) main_task: Started on CPU0\nI (565) main_task: Calling app_main()\nI (565) indicate: indicate_init start\nI (565) indicate: indicate_YLED_setting\nI (575) indicate: indicate_GLED_on\nI (575) indicate: indicate_init end\nI (575) indicate: indicate_BUZ_setting\nI (1185) gpio: GPIO[7]| InputEn: 1| OutputEn: 1| OpenDrain: 1| Pullup: 1| Pulldown: 0| Intr:0\nI (1185) gpio: GPIO[6]| InputEn: 1| OutputEn: 1| OpenDrain: 1| Pullup: 1| Pulldown: 0| Intr:0\nI (1185) BM8563: I2C for BM8563 init success\nI (1195) BM8563: BM8563 has not lost power, getdata = 03\nI (1195) BM8563: BM8563 init success\nI (1225) STORAGE_TASK: [CONFIG] Lock delay: 1300000\nI (1225) STORAGE_TASK: [CONFIG] AES key: \ufffd\ufffdV\ufffd=\ufffd8\ufffd\ufffd\ufffd\ufffd1vVJ\nI (1235) main: Init value read success\nI (1235) BLE_INIT: BT controller compile version [30b57c4]\nI (1245) BLE_INIT: Bluetooth MAC: 48:27:e2:8f:2d:7a\nI (1245) phy_init: phy_version 640,cd64a1a,Jan 24 2024,17:28:12\nW (1315) BT_BTM: BTM_BleWriteAdvData, Partial data write into ADV\nI (1315) pp: pp rom version: e7ae62f\nW (1315) BT_BTM: BTM_BleWriteScanRsp, Partial data write into ADV\nI (1315) net80211: net80211 rom version: e7ae62f\nI (1325) GATTS_SERVER_TASK: create attribute table successfully, the number handle = 11\nI (1335) wifi:wifi driver task: 3fcc2218, prio:23, stack:6656, core=0\nI (1335) GATTS_SERVER_TASK: SERVICE_START_EVT1, status 0, service_handle 40\nI (1345) GATTS_SERVER_TASK: advertising start successfully\nI (1355) wifi:I (1355) GATTS_SERVER_TASK: create attribute table successfully, the number handle = 3\n\nwifi firmware version: a9f5b59\nI (1365) GATTS_SERVER_TASK: SERVICE_START_EVT2, status 0, service_handle 51\nI (1365) wifi:wifi certification version: v7.0\nI (1375) wifi:config NVS flash: enabled\nI (1385) wifi:config nano formating: disabled\nI (1385) wifi:Init data frame dynamic rx buffer num: 32\nI (1385) wifi:Init static rx mgmt buffer num: 5\nI (1395) wifi:Init management short buffer num: 32\nI (1395) wifi:Init dynamic tx buffer num: 32\nI (1405) wifi:Init static tx FG buffer num: 2\nI (1405) wifi:Init static rx buffer size: 1600\nI (1415) wifi:Init static rx buffer num: 10\nI (1415) wifi:Init dynamic rx buffer num: 32\nI (1415) wifi_init: rx ba win: 6\nI (1425) wifi_init: tcpip mbox: 32\nI (1425) wifi_init: udp mbox: 6\nI (1435) wifi_init: tcp mbox: 6\nI (1435) wifi_init: tcp tx win: 5760\nI (1435) wifi_init: tcp rx win: 5760\nI (1445) wifi_init: tcp mss: 1440\nI (1445) wifi_init: WiFi IRAM OP enabled\nI (1455) wifi_init: WiFi RX IRAM OP enabled\nI (1455) wifi:mode : sta (48:27:e2:8f:2d:78)\nI (1465) wifi:enable tsf\nI (1465) BLUFI_EXAMPLE: BLUFI VERSION 0103\n\nI (1465) BLUFI_EXAMPLE: BLUFI init finish\n\nI (1465) key_task: key_task_init\nI (1475) wifi:new:&lt;11,0&gt;, old:&lt;1,0&gt;, ap:&lt;255,255&gt;, sta:&lt;11,0&gt;, prof:1\nI (1485) wifi:state: init -&gt; auth (b0)\nI (1485) gpio: GPIO[1]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:2\nI (1505) LOCK_DRIVER: lock_driver_init\nI (1505) gpio: GPIO[8]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0\nE (1525) gpio: gpio_install_isr_service(506): GPIO isr service already installed\nI (1525) wiegand: Waiting for data...\nI (1525) sntp_task: Initializing SNTP\nI (1535) sntp_task: sntp_refresh_time_task running, beging to refresh time\nI (1535) sntp_task: SNTP task running, waiting net config done...\nI (1545) main_task: Returned from app_main()\nI (2245) wifi:state: auth -&gt; assoc (0)\nI (2255) wifi:state: assoc -&gt; run (10)\nI (2295) wifi:connected with HYSH, aid = 3, channel 11, BW20, bssid = 48:b2:5d:d2:16:04\nI (2295) wifi:security: WPA3-SAE, phy: bgn, rssi: -46\nI (2295) wifi:pm start, type: 1\n\nI (2295) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us    \nI (2305) wifi:set rx beacon pti, rx_bcn_pti: 14, bcn_timeout: 25000, mt_pti: 14, mt_time: 10000\nI (2395) wifi:AP's beacon interval = 102400 us, DTIM period = 1\nI (2695) wifi:&lt;ba-add&gt;idx:0 (ifx:0, 48:b2:5d:d2:16:04), tid:0, ssn:0, winSize:64\nI (4315) esp_netif_handlers: sta ip: 192.168.1.46, mask: 255.255.255.0, gw: 192.168.1.1\nI (4315) ota: Starting OTA example\nI (4315) sntp_task: WiFi Connected to ap\nI (4365) wifi:&lt;ba-add&gt;idx:1 (ifx:0, 48:b2:5d:d2:16:04), tid:6, ssn:1, winSize:64\nI (5315) ota: OTA example start, 1S...\nI (6315) ota: OTA example start, 2S...\nI (7315) ota: OTA example start, 3S...\nI (8315) ota: OTA example started.\nI (8315) ota: SHA-256 for bootloader:  bd27c0807747ae9c77adefe9a15aeae21b2d9a8a61a2ef1882cb6e2207388e93\nI (8445) ota: SHA-256 for current firmware:  904413ee3dafe2814ce298545c3d464521131a6822044f60cc814fc92e776468\nI (8445) ota: Starting OTA example task\nI (8445) BLUFI_EXAMPLE: BLUFI BLE is not connected yet\n\nI (8445) ota: Attempting to download update from http://xxx.xxx.xxx:yyyy/hello_world.bin\nI (8855) esp_https_ota: Starting OTA...\nI (8855) esp_https_ota: Writing to partition subtype 16 at offset 0x220000\nI (12275) esp_image: segment 0: paddr=00220020 vaddr=3c020020 size=0ce04h ( 52740) map\nI (12285) esp_image: segment 1: paddr=0022ce2c vaddr=3fc91e00 size=028c0h ( 10432) \nI (12285) esp_image: segment 2: paddr=0022f6f4 vaddr=40374000 size=00924h (  2340) \nI (12285) esp_image: segment 3: paddr=00230020 vaddr=42000020 size=18684h ( 99972) map       \nI (12305) esp_image: segment 4: paddr=002486ac vaddr=40374924 size=0d3e0h ( 54240) \nI (12325) esp_image: segment 0: paddr=00220020 vaddr=3c020020 size=0ce04h ( 52740) map\nI (12325) esp_image: segment 1: paddr=0022ce2c vaddr=3fc91e00 size=028c0h ( 10432) \nI (12335) esp_image: segment 2: paddr=0022f6f4 vaddr=40374000 size=00924h (  2340) \nI (12335) esp_image: segment 3: paddr=00230020 vaddr=42000020 size=18684h ( 99972) map       \nI (12355) esp_image: segment 4: paddr=002486ac vaddr=40374924 size=0d3e0h ( 54240) \nI (12405) ota: OTA Succeed, Rebooting...\n</code></pre> <p>\u5982\u4e0a log \u4fe1\u606f\u6240\u793a\uff0c\u5728 wifi \u4efb\u52a1\u8fde\u63a5\u5230 AP \u3001\u83b7\u53d6 IP \u540e\u6267\u884c <code>ota_task_start</code> \u6210\u529f\u8bbf\u95ee\u5230\u4e86\u76ee\u6807 <code>http://xxx.xxx.xxx:yyyy/hello_world.bin</code> \u5e76\u4e0b\u8f7d\uff0c\u5199\u5165 OTA \u5206\u533a\u540e\u91cd\u542f\u7cfb\u7edf\uff0c\u6210\u529f\u5b8c\u6210\u4e86\u4e00\u6b21 OTA \u5347\u7ea7\uff0clog \u5982\u4e0b\uff1a</p> <pre><code>I (12405) ota: OTA Succeed, Rebooting...\nI (12405) wifi:state: run -&gt; init (0)\nI (12405) wifi:pm stop, total sleep time: 5749810 us / 10104585 us\n\nI (12405) wifi:&lt;ba-del&gt;idx:0, tid:0\nI (12405) wifi:&lt;ba-del&gt;idx:1, tid:6\nI (12415) wifi:new:&lt;11,0&gt;, old:&lt;11,0&gt;, ap:&lt;255,255&gt;, sta:&lt;11,0&gt;, prof:1\nI (12485) wifi:flush txq\nI (12485) wifi:stop sw txq\nI (12485) wifi:lmac stop hw txq\nESP-ROM:esp32s3-20210327\nBuild:Mar 27 2021\nrst:0xc (RTC_SW_CPU_RST),boot:0xb (SPI_FAST_FLASH_BOOT)\nSaved PC:0x40375a20\n0x40375a20: esp_restart_noos at C:/Users/admin/esp/v5.2.1/esp-idf/components/esp_system/port/soc/esp32s3/system_internal.c:159\n\nSPIWP:0xee\nmode:DIO, clock div:1\nload:0x3fce3810,len:0x178c\nload:0x403c9700,len:0x4\nload:0x403c9704,len:0xcbc\nload:0x403cc700,len:0x2da0\nentry 0x403c9914\nI (31) boot: ESP-IDF v5.2.1 2nd stage bootloader\nI (31) boot: compile time Aug 23 2024 10:44:26\nI (31) boot: Multicore bootloader\nI (34) boot: chip revision: v0.2\nI (38) boot.esp32s3: Boot SPI Speed : 80MHz\nI (43) boot.esp32s3: SPI Mode       : DIO\nI (48) boot.esp32s3: SPI Flash Size : 8MB\nI (52) boot: Enabling RNG early entropy source...\nI (58) boot: Partition Table:\nI (61) boot: ## Label            Usage          Type ST Offset   Length\nI (69) boot:  0 nvs              WiFi data        01 02 00009000 00006000\nI (76) boot:  1 otadata          OTA data         01 00 0000f000 00002000\nI (84) boot:  2 phy_init         RF data          01 01 00011000 00001000\nI (91) boot:  3 factory          factory app      00 00 00020000 00200000\nI (98) boot:  4 ota_0            OTA app          00 10 00220000 00200000\nI (106) boot:  5 ota_1            OTA app          00 11 00420000 00200000\nI (114) boot: End of partition table\nI (118) esp_image: segment 0: paddr=00220020 vaddr=3c020020 size=0ce04h ( 52740) map\nI (136) esp_image: segment 1: paddr=0022ce2c vaddr=3fc91e00 size=028c0h ( 10432) load        \nI (138) esp_image: segment 2: paddr=0022f6f4 vaddr=40374000 size=00924h (  2340) load        \nI (144) esp_image: segment 3: paddr=00230020 vaddr=42000020 size=18684h ( 99972) map\nI (170) esp_image: segment 4: paddr=002486ac vaddr=40374924 size=0d3e0h ( 54240) load        \nI (187) boot: Loaded app from partition at offset 0x220000\nI (188) boot: Disabling RNG early entropy source...\nI (199) cpu_start: Multicore app\nI (209) cpu_start: Pro cpu start user code\nI (209) cpu_start: cpu freq: 160000000 Hz\nI (209) cpu_start: Application information:\nI (212) cpu_start: Project name:     hello_world\nI (217) cpu_start: App version:      1\nI (221) cpu_start: Compile time:     Aug 24 2024 17:10:18\nI (228) cpu_start: ELF file SHA256:  5d04de079...\nWarning: checksum mismatch between flashed and built applications. Checksum of built application is a8a0453d50ca5cab70ccc670adafcc7d7f87df7e3ae0f639b6257bc95f67d7d2\nI (233) cpu_start: ESP-IDF:          v5.2.1\nI (238) cpu_start: Min chip rev:     v0.0\nI (242) cpu_start: Max chip rev:     v0.99 \nI (247) cpu_start: Chip rev:         v0.2\nI (252) heap_init: Initializing. RAM available for dynamic allocation:\nI (259) heap_init: At 3FC94F90 len 00054780 (337 KiB): RAM\nI (265) heap_init: At 3FCE9710 len 00005724 (21 KiB): RAM\nI (271) heap_init: At 3FCF0000 len 00008000 (32 KiB): DRAM\nI (278) heap_init: At 600FE010 len 00001FD8 (7 KiB): RTCRAM\nI (285) spi_flash: detected chip: gd\nI (288) spi_flash: flash io: dio\nI (292) sleep: Configure to isolate all GPIO pins in sleep state\nI (299) sleep: Enable automatic switching of GPIO sleep configuration\nI (306) main_task: Started on CPU0\nI (316) main_task: Calling app_main()\nHello world!\nThis is esp32s3 chip with 2 CPU core(s), WiFi/BLE, silicon revision v0.2, 8MB external flash\nMinimum free heap size: 386880 bytes\nRestarting in 10 seconds...\nRestarting in 9 seconds...\nRestarting in 8 seconds...\nRestarting in 7 seconds...\nRestarting in 6 seconds...\nRestarting in 5 seconds...\nRestarting in 4 seconds...\nRestarting in 3 seconds...\nRestarting in 2 seconds...\nRestarting in 1 seconds...\nNone\nWaiting for the device to reconnect..............................................................\nESP-ROM:esp32s3-20210327\nBuild:Mar 27 2021\nrst:0x1 (POWERON),boot:0xb (SPI_FAST_FLASH_BOOT)\nSPIWP:0xee\nmode:DIO, clock div:1     \nload:0x3fce3810,len:0x178c\nload:0x403c9700,len:0x4   \nload:0x403c9704,len:0xcbc \nload:0x403cc700,len:0x2da0\nentry 0x403c9914\nI (27) boot: ESP-IDF v5.2.1 2nd stage bootloader\nI (27) boot: compile time Aug 23 2024 10:44:26  \nI (27) boot: Multicore bootloader\nI (30) boot: chip revision: v0.2\nI (34) boot.esp32s3: Boot SPI Speed : 80MHz\nI (38) boot.esp32s3: SPI Mode       : DIO\nI (43) boot.esp32s3: SPI Flash Size : 8MB\nI (48) boot: Enabling RNG early entropy source...\nI (53) boot: Partition Table:\nI (57) boot: ## Label            Usage          Type ST Offset   Length\nI (64) boot:  0 nvs              WiFi data        01 02 00009000 00006000\nI (72) boot:  1 otadata          OTA data         01 00 0000f000 00002000\nI (79) boot:  2 phy_init         RF data          01 01 00011000 00001000\nI (87) boot:  3 factory          factory app      00 00 00020000 00200000\nI (94) boot:  4 ota_0            OTA app          00 10 00220000 00200000\nI (102) boot:  5 ota_1            OTA app          00 11 00420000 00200000\nI (109) boot: End of partition table\nI (113) esp_image: segment 0: paddr=00220020 vaddr=3c020020 size=0ce04h ( 52740) map\nI (131) esp_image: segment 1: paddr=0022ce2c vaddr=3fc91e00 size=028c0h ( 10432) load\nI (134) esp_image: segment 2: paddr=0022f6f4 vaddr=40374000 size=00924h (  2340) load\nI (139) esp_image: segment 3: paddr=00230020 vaddr=42000020 size=18684h ( 99972) map\nI (165) esp_image: segment 4: paddr=002486ac vaddr=40374924 size=0d3e0h ( 54240) load\nI (183) boot: Loaded app from partition at offset 0x220000\nI (183) boot: Disabling RNG early entropy source...\nI (195) cpu_start: Multicore app\nI (204) cpu_start: Pro cpu start user code\nI (204) cpu_start: cpu freq: 160000000 Hz\nI (204) cpu_start: Application information:\nI (207) cpu_start: Project name:     hello_world\nI (213) cpu_start: App version:      1\nI (217) cpu_start: Compile time:     Aug 24 2024 17:10:18\nI (223) cpu_start: ELF file SHA256:  5d04de079...\nWarning: checksum mismatch between flashed and built applications. Checksum of built application is a8a0453d50ca5cab70ccc670adafcc7d7f87df7e3ae0f639b6257bc95f67d7d2\nI (228) cpu_start: ESP-IDF:          v5.2.1\nI (233) cpu_start: Min chip rev:     v0.0\nI (238) cpu_start: Max chip rev:     v0.99 \nI (243) cpu_start: Chip rev:         v0.2\nI (248) heap_init: Initializing. RAM available for dynamic allocation:\nI (255) heap_init: At 3FC94F90 len 00054780 (337 KiB): RAM\nI (261) heap_init: At 3FCE9710 len 00005724 (21 KiB): RAM\nI (267) heap_init: At 3FCF0000 len 00008000 (32 KiB): DRAM\nI (273) heap_init: At 600FE010 len 00001FD8 (7 KiB): RTCRAM\nI (280) spi_flash: detected chip: gd\nI (284) spi_flash: flash io: dio\nI (288) sleep: Configure to isolate all GPIO pins in sleep state\nI (295) sleep: Enable automatic switching of GPIO sleep configuration\nI (302) main_task: Started on CPU0\nI (312) main_task: Calling app_main()\nHello world!\nThis is esp32s3 chip with 2 CPU core(s), WiFi/BLE, silicon revision v0.2, 8MB external flash\nMinimum free heap size: 386880 bytes\nRestarting in 10 seconds...\nRestarting in 9 seconds...\nRestarting in 8 seconds...\nRestarting in 7 seconds...\nRestarting in 6 seconds...\nRestarting in 5 seconds...\nRestarting in 4 seconds...\nRestarting in 3 seconds...\nRestarting in 2 seconds...\nRestarting in 1 seconds...\nRestarting in 0 seconds...\nRestarting now.\n</code></pre> <p>\u5e76\u4e14\u5728\u7b2c\u4e00\u6b21\u7f16\u8bd1\u4f8b\u7a0b <code>hello_worldF</code> \u65f6\u6ca1\u6709\u6b63\u786e\u9009\u62e9\u82af\u7247 target\uff0c\u5728\u7b2c\u4e00\u6b21\u6d4b\u8bd5\u65f6 ESP32-S3 \u8bbf\u95ee\u5230\u4e86\u76ee\u6807\u5730\u5740\u540e\uff0c\u63d0\u793a\u62a5\u9519\u82af\u7247\u5bf9\u8c61\u5339\u914d\u9519\u8bef\uff0c\u81ea\u52a8\u5931\u8d25 OTA \u6d41\u7a0b\u3002</p>"},{"location":"_Embedded/240830-%E5%90%84%E7%A7%8D%E9%80%9A%E7%94%A8%E4%B8%B2%E5%8F%A3%E6%80%BB%E7%BA%BF%E6%A0%87%E5%87%86/","title":"240830-\u5404\u79cd\u901a\u7528\u4e32\u53e3\u603b\u7ebf\u6807\u51c6","text":""},{"location":"_Embedded/240830-%E5%90%84%E7%A7%8D%E9%80%9A%E7%94%A8%E4%B8%B2%E5%8F%A3%E6%80%BB%E7%BA%BF%E6%A0%87%E5%87%86/#1-rs-232","title":"1 RS-232","text":"<ul> <li>1970 \u5e74\u53d1\u5e03\uff1b\u6807\u51c6\u540d\u79f0 EIA-232-E</li> <li>\u4f20\u7edf\u603b\u7ebf\u6807\u51c6\u91c7\u7528\u6807\u51c6 DB25 \u63a5\u53e3\uff0c\u73b0\u4e00\u822c\u4f7f\u7528 DB9\uff1a\u4e24\u6761\u4fe1\u53f7\u901a\u9053\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5168\u53cc\u5de5\u901a\u4fe1</li> <li>\u9a71\u52a8\u8d1f\u8f7d\u7535\u5bb9&lt;2500pF\uff0c\u901a\u4fe1\u4e3e\u4f8b\u53d7\u6b64\u7535\u5bb9\u9650\u5236 <p>\u91c7\u7528150pF/m\u7684\u901a\u4fe1\u7535\u7f06\u65f6\uff0c\u6700\u5927\u901a\u4fe1\u8ddd\u79bb\u4e3a15m</p> </li> <li>\u5c5e\u4e8e\u5355\u7aef\u4fe1\u53f7\u4f20\u9001\uff0c\u53d1\u9001\u4e0e\u63a5\u6536\u7535\u5e73\u4e4b\u5dee\u4ec5 2~3V\uff0c\u5171\u6a21\u6291\u5236\u80fd\u529b\u5dee\uff0c\u4e00\u822c\u7528\u4e8e 20m \u4ee5\u5185\u7684\u901a\u4fe1</li> <li>\u53d1\u9001\u65f6\u53d1\u9001\u7aef\u6b63\u7535\u5e73\u5728+5\uff5e+15V\uff0c\u8d1f\u7535\u5e73\u5728-5\uff5e-15V\u7535\u5e73\u3002\u5f53\u65e0\u6570\u636e\u4f20\u8f93\u65f6\uff0c\u7ebf\u4e0a\u4e3aTTL\uff0c\u4ece\u5f00\u59cb\u4f20\u9001\u6570\u636e\u5230\u7ed3\u675f\uff0c\u7ebf\u4e0a\u7535\u5e73\u4eceTTL\u7535\u5e73\u5230RS-232\u7535\u5e73\u518d\u8fd4\u56deTTL\u7535\u5e73\u3002\u63a5\u6536\u5668\u5178\u578b\u7684\u5de5\u4f5c\u7535\u5e73\u5728+3\uff5e+12V\u4e0e-3\uff5e-12V\u3002</li> <li>\u6700\u9ad8\u901f\u7387\u4e3a 20kb/s</li> </ul> <p>\u5728 TXD \u548c RXD \u6570\u636e\u7ebf\u4e0a\uff1a</p> <ol> <li>\u903b\u8f91 1 \u7684\u7535\u5e73\u4e3a-3V~-15V</li> <li>\u903b\u8f91 0 \u7684\u7535\u5e73\u4e3a+3~+15V \u7684\u7535\u538b</li> </ol> <p>\u5728 RTS\u3001CTS\u3001DSR\u3001DTR \u548c DCD \u7b49\u63a7\u5236\u7ebf\u4e0a\uff1a</p> <ol> <li>\u4fe1\u53f7\u6709\u6548\uff08\u63a5\u901a\uff0cON \u72b6\u6001\uff09\u4e3a+3~+15V \u7684\u7535\u538b</li> <li>\u4fe1\u53f7\u65e0\u6548\uff08\u65ad\u5f00\uff0cOFF \u72b6\u6001\uff09\u4e3a-3~-15V \u7684\u7535\u538b</li> </ol> <p>RS-232\u662f\u7528\u6b63\u8d1f\u7535\u538b\u6765\u8868\u793a\u903b\u8f91\u72b6\u6001\u3002\u5bf9\u4e8e\u6570\u636e(\u4fe1\u606f\u7801)\uff0c\u903b\u8f911(\u4f20\u53f7)\u7684\u7535\u5e73\u4f4e\u4e8e-3V\uff0c\u903b\u8f910(\u7a7a\u53f7)\u7684\u7535\u5e73\u9ad8\u4e8e+3V\uff1b\u5bf9\u4e8e\u63a7\u5236\u4fe1\u53f7\uff0c\u63a5\u901a\u72b6\u6001(ON)\u5373\u4fe1\u53f7\u6709\u6548\u7684\u7535\u5e73\u9ad8\u4e8e3V\uff0c\u65ad\u5f00\u72b6\u6001(OFF)\u5373\u4fe1\u53f7\u65e0\u6548\u7684\u7535\u5e73\u4f4e\u4e8e-3V\u3002</p>"},{"location":"_Embedded/240830-%E5%90%84%E7%A7%8D%E9%80%9A%E7%94%A8%E4%B8%B2%E5%8F%A3%E6%80%BB%E7%BA%BF%E6%A0%87%E5%87%86/#2-rs-422","title":"2 RS-422","text":"<ul> <li>\u7531 RS232 \u53d1\u5c55\u800c\u6765\uff0c\u4e3a\u6539\u8fdb RS-232\u901a\u4fe1\u8ddd\u79bb\u77ed(\u6700\u5927\u4f20\u8f93\u8ddd\u79bb15m)\u3001\u901f\u7387\u4f4e(\u6700\u5927\u4f4d\u901f\u7387\u4e3a20Kb/s)\u7684\u7f3a\u70b9\u800c\u63d0\u51fa\u7684\u3002</li> <li>10Mbps</li> <li>100kbps \u4e0b\u624d\u80fd\u8fbe\u5230\u6700\u5927\u4f20\u8f93\u8ddd\u79bb 1219 \u7c73</li> <li>100 \u7c73=1Mbps</li> <li>\u5171\u6a21\u7535\u538b\u7684\u8f93\u51fa\u8303\u56f4\u58eb7V</li> <li>\u4e32\u884c\u63a5\u53e3\u63a5\u6536\u5668\u7684\u6700\u5c0f\u8f93\u5165\u7535\u963b\u662f4K\u03a9</li> </ul>"},{"location":"_Embedded/240830-%E5%90%84%E7%A7%8D%E9%80%9A%E7%94%A8%E4%B8%B2%E5%8F%A3%E6%80%BB%E7%BA%BF%E6%A0%87%E5%87%86/#3-rs-485","title":"3 RS-485","text":"<ul> <li>RS-485\u4e32\u884c\u63a5\u53e3\u7684\u9a71\u52a8\u5668\u53ef\u7528\u4e8e RS-422\u4e32\u884c\u63a5\u53e3\u7684\u5e94\u7528\u4e2d\uff0c\u56e0\u4e3a RS-485\u4e32\u884c\u63a5\u53e3\u6ee1\u8db3\u6240\u6709\u7684 RS-422\u4e32\u884c\u63a5\u53e3\u6027\u80fd\u53c2\u6570\uff0c\u53cd\u4e4b\u5219\u4e0d\u80fd\u6210\u7acb\u3002</li> <li>RS-485\u4e32\u884c\u63a5\u53e3\u63a5\u6536\u5668\u7684\u6700\u5c0f\u8f93\u5165\u7535\u963b12K\u03a9</li> <li>\u5171\u6a21\u7535\u538b\u7684\u8f93\u51fa\u8303\u56f4\u662f-7V \u548c+12V \u4e4b\u95f4</li> <li>RS485\u53ea\u80fd\u534a\u53cc\u5de5\u5de5\u4f5c\uff0c\u53d1\u6536\u4e0d\u80fd\u540c\u65f6\u8fdb\u884c\uff0c\u4f46\u5b83\u53ea\u9700\u8981\u4e00\u5bf9\u53cc\u7ede\u7ebf</li> <li>RS-485\u603b\u7ebf\u6807\u51c6\u89c4\u5b9a\u4e86\u603b\u7ebf\u63a5\u53e3\u7684\u7535\u6c14\u7279\u6027\u6807\u51c6\uff0c\u53d1\u9001\u7aef\uff1a\u6b63\u7535\u5e73\u5728+2V\uff5e+6V\u4e4b\u95f4\uff0c\u8868\u793a\u903b\u8f91\u72b6\u6001\u201c1\u201d\uff1b\u8d1f\u7535\u5e73\u5728-2V\uff5e-6V\u4e4b\u95f4\uff0c\u5219\u8868\u793a\u903b\u8f91\u72b6\u6001\u201c0\u201d\uff1b\u63a5\u6536\u5668\uff1a(V+) - (V-) \u22650.2V\uff0c\u8868\u793a\u4fe1\u53f7\u201c0\u201d\uff1b(V+) - (V-) \u22640.2V\uff0c\u8868\u793a\u4fe1\u53f7\u201c1\u201d)\u3002</li> </ul>"},{"location":"_Embedded/240830-%E7%BC%BA%E9%99%B7%E6%A3%80%E6%B5%8B%E5%85%89%E6%BA%90%E6%8E%A7%E5%88%B6%E5%99%A8%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/","title":"240830-\u7f3a\u9677\u68c0\u6d4b\u5149\u6e90\u63a7\u5236\u5668\u5f00\u53d1\u7b14\u8bb0","text":""},{"location":"_Embedded/240830-%E7%BC%BA%E9%99%B7%E6%A3%80%E6%B5%8B%E5%85%89%E6%BA%90%E6%8E%A7%E5%88%B6%E5%99%A8%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/#1-pwm","title":"1 pwm \u7b14\u8bb0","text":"<p>\u5728 STM32F407VET6 \u4e0a\uff0c\u5b9a\u65f6\u5668 7 \u7684\u9884\u5206\u9891\u5668\uff08PSC\uff09\u8bbe\u7f6e\u4e3a 83\uff0c\u81ea\u52a8\u91cd\u88c5\u8f7d\u5bc4\u5b58\u5668\uff08ARR\uff09\u8bbe\u7f6e\u4e3a 1000 \u65f6\uff0c\u53ef\u4ee5\u4ea7\u751f\u5982\u4e0b\u7279\u6027\u7684 PWM \u4fe1\u53f7\uff1a</p>"},{"location":"_Embedded/240830-%E7%BC%BA%E9%99%B7%E6%A3%80%E6%B5%8B%E5%85%89%E6%BA%90%E6%8E%A7%E5%88%B6%E5%99%A8%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/#11","title":"1.1 \u8ba1\u7b97\u6b65\u9aa4","text":"<ol> <li>\u5b9a\u65f6\u5668\u65f6\u949f\u9891\u7387\uff1a</li> <li> <p>\u5047\u8bbe\u5b9a\u65f6\u5668\u65f6\u949f\u9891\u7387\u4e3a 84 MHz\uff08\u901a\u5e38\u662f APB1 \u5b9a\u65f6\u5668\u65f6\u949f\u9891\u7387\uff09\u3002</p> </li> <li> <p>\u9884\u5206\u9891\u5668\uff08PSC\uff09\uff1a</p> </li> <li> <p>\u9884\u5206\u9891\u5668\u8bbe\u7f6e\u4e3a 83\uff0c\u8fd9\u610f\u5473\u7740\u5b9a\u65f6\u5668\u65f6\u949f\u9891\u7387\u88ab\u5206\u9891\u4e3a\uff1a $$ \\text{Timer Clock} = \\frac{84 \\text{ MHz}}{(PSC + 1)} = \\frac{84 \\text{ MHz}}{84} = 1 \\text{ MHz} $$</p> </li> <li> <p>\u81ea\u52a8\u91cd\u88c5\u8f7d\u5bc4\u5b58\u5668\uff08ARR\uff09\uff1a</p> </li> <li>ARR \u8bbe\u7f6e\u4e3a 1000\uff0c\u8fd9\u610f\u5473\u7740\u5b9a\u65f6\u5668\u8ba1\u6570\u4ece 0 \u8ba1\u6570\u5230 1000\uff0c\u7136\u540e\u91cd\u65b0\u5f00\u59cb\u3002</li> <li>PWM \u9891\u7387\uff1a</li> <li>PWM \u9891\u7387\u7531\u5b9a\u65f6\u5668\u65f6\u949f\u9891\u7387\u548c ARR \u51b3\u5b9a\uff1a</li> <li>$$  \\text{PWM Frequency} = \\frac{\\text{Timer Clock}}{\\text{ARR} + 1} = \\frac{1 \\text{ MHz}}{1000 + 1} \\approx 999 \\text{ Hz}</li> </ol> <p>$$</p>"},{"location":"_Embedded/240830-%E7%BC%BA%E9%99%B7%E6%A3%80%E6%B5%8B%E5%85%89%E6%BA%90%E6%8E%A7%E5%88%B6%E5%99%A8%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/#12-pwm","title":"1.2 PWM \u5360\u7a7a\u6bd4","text":"<p>PWM \u5360\u7a7a\u6bd4\u7531\u6355\u83b7\u6bd4\u8f83\u5bc4\u5b58\u5668\uff08CCR\uff09\u7684\u503c\u51b3\u5b9a\u3002\u5047\u8bbe <code>CCR</code> \u7684\u503c\u4e3a <code>dutyCycle</code>\uff0c\u5219\u5360\u7a7a\u6bd4\u8ba1\u7b97\u5982\u4e0b\uff1a</p> \\[\\text{Duty Cycle} = \\frac{\\text{CCR}}{\\text{ARR} + 1} \\times 100\\%\\] <p>\u4f8b\u5982\uff0c\u5982\u679c <code>dutyCycle</code> \u8bbe\u7f6e\u4e3a 500\uff0c\u5219\u5360\u7a7a\u6bd4\u4e3a\uff1a</p> <p>\\(\\(\\text{Duty Cycle} = \\frac{500}{1000 + 1} \\times 100\\% \\approx 49.95\\%\\)\\) - APB1 \u603b\u7ebf\u901f\u5ea6\uff1a<code>42MHz</code> - APB1 \u5b9a\u65f6\u5668\u65f6\u949f\uff1a<code>84MHz</code> - APB2 \u603b\u7ebf\u901f\u5ea6\uff1a<code>84MHz</code> - APB2 \u5b9a\u65f6\u5668\u65f6\u949f\uff1a<code>168MHz</code></p> <p>APB1 \u603b\u7ebf\u901f\u5ea6\u5fc5\u987b\u5c0f\u4e8e <code>42MHz</code>\uff1bAPB2 \u603b\u7ebf\u901f\u5ea6\u5fc5\u987b\u5c0f\u4e8e <code>84MHz</code></p> <p>TIM1\u30018\u30019\u300110\u300111 \u5c5e\u4e8e APB2 \u603b\u7ebf\uff0c\u6700\u9ad8\u53ef\u8fbe 168MHz</p> <p>TIM2\u30013\u30014\u30015\u300112\u300113\u300114 \u5c5e\u4e8e APB1 \u603b\u7ebf\uff0c\u6700\u9ad8\u53ef\u8fbe 84MHz</p> <p>TIM6\u30017 \u4e5f\u5c5e\u4e8e APB1 \u603b\u7ebf\uff0c\u662f\u4e24\u4e2a\u57fa\u7840\u5b9a\u65f6\u5668</p>"},{"location":"_Embedded/240905-%E6%9B%B4%E6%96%B0storage%E4%BB%A5%E5%8F%8Amqtt%E6%A8%A1%E5%9D%97%E9%83%A8%E5%88%86%EF%BC%8C%E9%80%90%E6%AD%A5%E5%AE%9E%E7%8E%B0%E7%A7%81%E6%9C%89json%E5%8D%8F%E8%AE%AE/","title":"240905-\u66f4\u65b0 Storage \u4ee5\u53ca MQTT \u6a21\u5757\u90e8\u5206\uff0c\u9010\u6b65\u5b9e\u73b0\u79c1\u6709 json \u534f\u8bae","text":""},{"location":"_Embedded/240905-%E6%9B%B4%E6%96%B0storage%E4%BB%A5%E5%8F%8Amqtt%E6%A8%A1%E5%9D%97%E9%83%A8%E5%88%86%EF%BC%8C%E9%80%90%E6%AD%A5%E5%AE%9E%E7%8E%B0%E7%A7%81%E6%9C%89json%E5%8D%8F%E8%AE%AE/#1","title":"1 \u63d0\u4ea4","text":"<p>\u672c\u6b21\u63d0\u4ea4\uff1a https://gitee.com/chenym_simpler/git_lock_electromagnet/commit/5bda321cc7d5459e0bb0fdf33590a92ee622d0a9</p> <p></p>"},{"location":"_Embedded/240905-%E6%9B%B4%E6%96%B0storage%E4%BB%A5%E5%8F%8Amqtt%E6%A8%A1%E5%9D%97%E9%83%A8%E5%88%86%EF%BC%8C%E9%80%90%E6%AD%A5%E5%AE%9E%E7%8E%B0%E7%A7%81%E6%9C%89json%E5%8D%8F%E8%AE%AE/#2-storage","title":"2 Storage \u90e8\u5206","text":"<p>\u5bf9\u4e8e\u9700\u8981\u6389\u7535\u4fdd\u5b58\u7684\u6570\u636e\u6765\u8bb2\u4e00\u822c\u53ef\u4ee5\u5206\u4f5c\u5b57\u7b26\u4e32\u4ee5\u53ca\u6570\u636e\u7c7b\uff0c\u4f8b\u5982\uff1a</p> <pre><code>typedef struct\n{\n    char name[32];\n    uint16_t id;\n    char type[32];\n    char firmware_version[8];\n    char hardware_version[8];\n    uint16_t max_user_count;\n    uint16_t max_card_count;\n    uint16_t user_count;\n    uint16_t card_count;\n    char wiegand_type[16];\n} device_info_t;\n</code></pre> <p>\u8be5\u7ed3\u6784\u4f53\u4e2d <code>name</code> \u5373\u5c5e\u4e8e\u5b57\u7b26\u4e32\u3001<code>id</code> \u7b49\u5c31\u5c5e\u4e8e\u6570\u5b57\u7c7b\u578b</p> <p>\u82e5\u6309\u7167\u539f\u672c nvs \u7684\u64cd\u4f5c\uff0c\u5b58\u50a8\u5355\u5355\u4e00\u4e2a\u53d8\u91cf\u7684\u64cd\u4f5ci\u5c31\u4f1a\u8fc7\u4e8e\u5197\u957f\uff1a</p> <pre><code>/* \u83b7\u53d6device_info */\nerr = nvs_get_blob(nvs_handle, NVS_KEY_NAME_DEVICE_NAME, device_info.device_name, 25);\nif (err != ESP_OK)\n{\n    ESP_LOGE(TAG, \"Failed to get device name, config default value\");\n\n    strcpy(device_info.name, DEVICE_DEFAULT_NAME);\n\n    /* \u7f3a\u7701\u503c\u914d\u7f6e */\n    err = nvs_set_blob(nvs_handle, NVS_KEY_NAME_DEVICE_NAME, device_info.device_name, 25);\n\n    return 4; // \u968f\u624b\u5199\u7684\u8fd4\u56de\u7801\uff0c\u4e0d\u7528\u5728\u610f\n}\n</code></pre> <p>\u56e0\u6b64\u8003\u8651\u5c01\u88c5\u4e00\u4e2a\u51fd\u6570\u7528\u4e8e\u7b80\u5316\u521d\u59cb\u5316\u53d8\u91cf\u7684\u8bfb\u53d6\u64cd\u4f5c\uff1a</p> <pre><code>esp_err_t nvs_get_or_set_default(nvs_handle_t nvs_handle, const char *key, void *value, size_t length, const void *default_value)\n</code></pre> <p>\u8be5\u51fd\u6570\u63a5\u6536\u9700\u8981\u64cd\u4f5c\u7684 nvs \u53e5\u67c4\u3001nvs \u952e\u540d\u3001\u8bfb\u51fa\u53d8\u91cf\u6307\u9488\u3001\u8bfb\u51fa\u957f\u5ea6\u3001\u9ed8\u8ba4\u53d8\u91cf\u6307\u9488</p> <p>\u4e4b\u6240\u4ee5\u8fd9\u91cc\u90fd\u4f7f\u7528\u53d8\u91cf\u6307\u9488\u7684\u65b9\u5f0f\u662f\u7531\u4e8e\u6bcf\u4e2a\u9700\u8981\u5b58\u50a8\u7684\u6570\u636e\u90fd\u662f\u4e0d\u5b9a\u957f\u7684\uff0c\u5e76\u4e14\u5728\u7f16\u8bd1\u540e\u6ca1\u6709\u5206\u914d\u9759\u6001\u5185\u5b58</p> <p>\u8be5\u51fd\u6570\u5b9e\u73b0\uff1a</p> <pre><code>if (value == NULL || default_value == NULL)\n{\n    ESP_LOGE(TAG, \"Value or default value is NULL\");\n    return ESP_ERR_INVALID_ARG;\n}\n\nesp_err_t err = nvs_get_blob(nvs_handle, key, value, &amp;length);\nif (err != ESP_OK)\n{\n    ESP_LOGE(TAG, \"Failed to get %s, config default value\", key);\n\n    memcpy(value, default_value, length);\n\n    /* \u7f3a\u7701\u503c\u914d\u7f6e */\n    err = nvs_set_blob(nvs_handle, key, value, length);\n    if (err != ESP_OK)\n    {\n        ESP_LOGE(TAG, \"Failed to set default value for %s, err: %x\", key, err);\n        return err;\n    }\n}\n\n// \u68c0\u67e5 value \u662f\u5426\u4e3a\u5b57\u7b26\u4e32\u5e76\u4ee5\u7a7a\u5b57\u7b26\u7ed3\u5c3e\nif (((char *)value)[length - 1] != '\\0')\n{\n    ESP_LOGW(TAG, \"Value for %s is not a null-terminated string\", key);\n    return ESP_ERR_INVALID_ARG;\n}\n\nESP_LOGI(TAG, \"[CONFIG] %s: %s\", key, (char *)value);\nreturn ESP_OK;\n</code></pre> <p>\u4e3b\u8981\u662f\u5728\u9ed8\u8ba4\u503c\u7684\u5b9a\u4e49\u4e0a\u9762\u7a0d\u5fae\u7ed5\u4e86\u4e00\u4e0b\u5f2f\u5b50\uff0c\u7531\u4e8e\u6240\u6709\u9ed8\u8ba4\u503c\u90fd\u662f\u4f7f\u7528 <code>#define</code> \u6765\u5b9a\u4e49\u7684\uff0c\u56e0\u6b64\u5728\u4f20\u5165\u7684\u65f6\u5019\u9700\u8981\u53d8\u91cf\u6307\u9488\u4e0d\u592a\u65b9\u4fbf</p> <p>\u8fd9\u91cc\u53c8\u4f7f\u7528\u4e86\u4e00\u4e0b c99 \u7684\u7279\u6027\u590d\u5408\u5b57\u9762\u91cf\uff0c\u7b14\u8bb0\u89c1\u8fd9\u4e2a\u94fe\u63a5\uff0c\u4e5f\u4f7f\u7528\u4e86\u4e00\u4e0b c11 \u5f15\u5165\u7684\u6cdb\u578b\u9009\u62e9\u5668 <code>_Generic()</code> \uff0c\u7b14\u8bb0\u89c1\u8fd9\u4e2a\u94fe\u63a5</p> <pre><code>#define PTR_TO_CONST(x) _Generic((x),    \\\n    int: (const void *)&amp;(const int){x},  \\\n    const char *: (const void *)(x),     \\\n    char *: (const void *)(x))           \\\n</code></pre> <p>\u901a\u8fc7\u4ee5\u4e0a\u64cd\u4f5c\u4fbf\u628a\u521d\u59cb\u5316\u51fd\u6570\u91cd\u6784\u4e3a\u4ee5\u4e0b\u6837\u5f0f\uff1a</p> <pre><code>STG_err_t storage_read_init_value(void)\n{\n    nvs_handle_t nvs_handle;\n\n    /* \u6253\u5f00nvs */\n    esp_err_t err = nvs_open(STORAGE_ENTRANCE, NVS_READWRITE, &amp;nvs_handle);\n    if (err != ESP_OK)\n    {\n        ESP_LOGE(TAG, \"Failed to open nvs\");\n        return STG_ERR;\n    }\n...\n    err = nvs_get_or_set_default(\n        nvs_handle,\n        NVS_KEY_NAME_DEVICE_FIRMWARE_VERSION,\n        device_info.firmware_version,\n        sizeof(device_info.firmware_version),\n        PTR_TO_CONST(DEVICE_DEFAULT_FIRMWARE_VERSION));\n\n    err = nvs_get_or_set_default(\n        nvs_handle,\n        NVS_KEY_NAME_DEVICE_HARDWARE_VERSION,\n        device_info.hardware_version,\n        sizeof(device_info.hardware_version),\n        PTR_TO_CONST(DEVICE_DEFAULT_HARDWARE_VERSION));\n...\n    /* ------------------------------ \u83b7\u53d6\u521d\u59cb\u5316\u4fe1\u606f\u7ed3\u675f ----------------------------- */\n\n    nvs_close(nvs_handle);\n\n    return STG_OK;\n}\n</code></pre>"},{"location":"_Embedded/240905-%E6%9B%B4%E6%96%B0storage%E4%BB%A5%E5%8F%8Amqtt%E6%A8%A1%E5%9D%97%E9%83%A8%E5%88%86%EF%BC%8C%E9%80%90%E6%AD%A5%E5%AE%9E%E7%8E%B0%E7%A7%81%E6%9C%89json%E5%8D%8F%E8%AE%AE/#3-mqtt","title":"3 MQTT \u90e8\u5206","text":"<p>IDF \u7684\u6587\u6863\u5bf9\u4e8e MQTT5 \u7684\u90e8\u5206\u8fd8\u6ca1\u6709\u5b8c\u5584\u7684\u5f88\u8be6\u7ec6\uff0c\u53cd\u6b63\u4eca\u5929\u627e\u5230\u7684\u5b98\u65b9\u6587\u6863\u4e0a\u9762\u53ea\u4e22\u4e86\u4e00\u4e2a\u4e00\u5e74\u524d\u7684\u4f8b\u7a0b\uff1a</p> <p>\u5b98\u65b9 MQTT5 \u4f8b\u7a0b</p> <p>\u7b80\u8981\u8bb0\u5f55\u4e00\u4e0b\u8e29\u7684\ud83d\udd73\uff1a</p> <p>\u9996\u5148 IDF \u4e0a\u9762\u5982\u679c\u8981\u4f7f\u7528 MQTT5 \u7684\u8bdd\u4e0d\u5149 menuconfig \u91cc\u9762\u8981\u52fe\u4e0a Enable\uff1a</p> <p></p> <p>\u800c\u4e14\u5728\u521d\u59cb\u5316 mqtt_client \u53e5\u67c4\u7684\u65f6\u5019\u4e5f\u8981\u6307\u5b9a\uff1a</p> <pre><code>const esp_mqtt_client_config_t mqtt_cfg = {\n    .broker.address.uri = CONFIG_BROKER_URI,\n    .session.protocol_ver = MQTT_PROTOCOL_V_5, // &lt;HERE&gt;\n};\n\nclient = esp_mqtt_client_init(&amp;mqtt_cfg);\n</code></pre> <p>\u4e3b\u8981\u662f\u5e0c\u671b\u4f7f\u7528\u4e00\u4e0b MQTT5 \u7684 No local \u529f\u80fd\uff0c\u56e0\u4e3a\u4e0d\u60f3\u6539\u534f\u8bae\u5185\u5bb9\uff08\uff09</p> <pre><code>static esp_mqtt5_subscribe_property_config_t subscribe_property_nolocal = {\n    .subscribe_id = 25555,\n    .no_local_flag = true,\n    .retain_as_published_flag = false,\n    .retain_handle = 0,\n};\n</code></pre> <pre><code>static esp_mqtt5_user_property_item_t user_property_arr[] = {{\"board\", \"esp32\"}, {\"u\", \"user\"}, {\"p\", \"password\"}};\n</code></pre> <pre><code>esp_mqtt5_client_set_user_property(&amp;subscribe_property_nolocal.user_property, user_property_arr, USE_PROPERTY_ARR_SIZE); // \u8bbe\u7f6e\u7528\u6237\u5c5e\u6027\nesp_mqtt5_client_set_subscribe_property(client, &amp;subscribe_property_nolocal);                                            // \u8bbe\u7f6e\u8ba2\u9605\u5c5e\u6027\nmsg_id = esp_mqtt_client_subscribe(client, device_mqtt_topic, 0);\nesp_mqtt5_client_delete_user_property(subscribe_property_nolocal.user_property); // \u5220\u9664\u7528\u6237\u5c5e\u6027\nsubscribe_property_nolocal.user_property = NULL;\nESP_LOGI(TAG, \"sent subscribe successful, msg_id=%d\", msg_id);\n</code></pre> <p>\u4ee5\u4e0a\u90fd\u662f\u6682\u65f6\u6a21\u4eff\u5b98\u65b9\u4f8b\u7a0b\u91cc\u9762\u7684\u5199\u6cd5\u8fdb\u884c\u914d\u7f6e</p> <p>\u914d\u7f6e\u7ed3\u679c\uff1a</p> <p></p> <p>\u6570\u636e\u90fd\u662f\u6d4b\u8bd5\u6570\u636e</p>"},{"location":"_Embedded/240923-STM32%20%E6%9D%82%E9%A1%B9%E7%9F%A5%E8%AF%86%E7%82%B9/","title":"240923-STM32 \u6742\u9879\u77e5\u8bc6\u70b9","text":"","tags":["\u516b\u80a1","\u79cb\u62db","stm32","flash"]},{"location":"_Embedded/240924-%E9%80%9A%E8%AE%AF%E5%8D%8F%E8%AE%AE%E6%80%BB%E7%BB%93/","title":"240924-\u901a\u8baf\u534f\u8bae\u603b\u7ed3","text":"<p>\u53cc\u5de5\u4e0e\u5426\uff1f</p> <ul> <li>\u5168\u53cc\u5de5\uff1a\u5728\u540c\u4e00\u65f6\u523b\uff0c\u4e24\u4e2a\u8bbe\u5907\u4e4b\u95f4\u53ef\u4ee5\u540c\u65f6\u6536\u53d1\u6570\u636e</li> <li>\u534a\u53cc\u5de5\uff1a\u4e24\u4e2a\u8bbe\u5907\u4e4b\u95f4\u53ef\u4ee5\u6536\u53d1\u6570\u636e\uff0c\u4f46\u4e0d\u80fd\u5728\u540c\u4e00\u65f6\u523b\u8fdb\u884c</li> <li>\u5355\u5de5\uff1a\u5728\u4efb\u4f55\u65f6\u523b\u90fd\u53ea\u80fd\u8fdb\u884c\u4e00\u4e2a\u65b9\u5411\u7684\u901a\u8baf</li> </ul> <p>\u540c\u6b65\u4e0e\u5426\uff1f</p> <ul> <li>\u6709\u65f6\u949f\uff1a\u540c\u6b65\u901a\u4fe1</li> <li>\u65e0\u65f6\u949f\uff1a\u5f02\u6b65\u901a\u4fe1</li> </ul>"},{"location":"_Embedded/240924-%E9%80%9A%E8%AE%AF%E5%8D%8F%E8%AE%AE%E6%80%BB%E7%BB%93/#1-rs232","title":"1 RS232","text":"<p>RS232 \u63d0\u9ad8\u7535\u538b\u540e\u589e\u52a0\u4e86\u4e32\u53e3\u901a\u4fe1\u7684\u4f20\u8f93\u80fd\u529b\u4ee5\u53ca\u6297\u5e72\u6270\u80fd\u529b</p>"},{"location":"_Embedded/240924-%E9%80%9A%E8%AE%AF%E5%8D%8F%E8%AE%AE%E6%80%BB%E7%BB%93/#2-rs485","title":"2 RS485","text":"<p>\u4f7f\u7528\u4e00\u5bf9\u5dee\u5206\u4fe1\u53f7\u7ebf\uff0c\u652f\u6301\u591a\u4e2a\u8282\u70b9\uff0c\u591a\u4e2a\u4e3b\u8bbe\u5907</p>"},{"location":"_Embedded/240924-%E9%80%9A%E8%AE%AF%E5%8D%8F%E8%AE%AE%E6%80%BB%E7%BB%93/#3","title":"3 \u4e32\u53e3\u901a\u8baf\u534f\u8bae","text":"<ul> <li>\u8d77\u59cb\u4f4d\u4e3a\u4f4e\u7535\u5e73\uff0c\u505c\u6b62\u4fe1\u53f7\u4e3a\u9ad8\u7535\u5e73</li> <li>\u6709\u6548\u6570\u636e\u4e3a 5~8 \u4f4d\u53ef\u914d\u7f6e</li> <li>\u6821\u9a8c\u4f4d\uff1a\u5947\u5076\u68c0\u9a8c</li> </ul> <p>\u6ce2\u7279\u7387\u4e3a <code>\u603b\u7ebf\u65f6\u949f / (16 * BRR)</code></p> <p></p>"},{"location":"_Embedded/240924-%E9%80%9A%E8%AE%AF%E5%8D%8F%E8%AE%AE%E6%80%BB%E7%BB%93/#4-i2c","title":"4 I2C","text":"<p>\u7269\u7406\u5c42\uff1a</p> <p></p> <p>\u7531\u4e8e I2C \u534f\u8bae\u662f\u591a\u4e2a\u4e3b\u4ece\u8bbe\u5907\u8fde\u63a5\u5230\u540c\u4e00\u6839\u603b\u7ebf\u4e0a\u7684\uff0c\u56e0\u6b64\u4e0d\u80fd\u4f7f\u7528\u63a8\u633d\u8f93\u51fa\uff0c\u56e0\u4e3a\u5982\u679c\u4f7f\u7528\u4e86\u7684\u8bdd\u4f1a\u51fa\u73b0\u67d0\u4e2a IO \u53e3\u7684 Vee \u548c GND \u8fde\u63a5\u5230\u4e00\u8d77\uff0c\u51fa\u73b0\u77ed\u8def\u7684\u60c5\u51b5\u3002</p> <p>\u4f7f\u7528\u5f00\u6f0f\u8f93\u51fa\u7684\u8bdd\u5c31\u7531\u4e8e\u4e0a\u62c9\u7535\u963b\u7684\u5b58\u5728\u53ef\u4ee5\u907f\u514d\u8fd9\u4e00\u95ee\u9898\u7684\u51fa\u73b0\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\u5f00\u6f0f\u8f93\u51fa\u7684\u9ad8\u7535\u5e73\u6ca1\u6709\u9a71\u52a8\u80fd\u529b\uff0c\u9700\u8981\u501f\u52a9\u5916\u90e8\u4e0a\u62c9\u8f93\u51fa\u9ad8\u7535\u5e73\u3002</p> <p>I2C \u8bbe\u5907\u7a7a\u95f2\u65f6\uff0c\u8f93\u51fa\u9ad8\u963b\u6001\uff0c\u6240\u6709\u8bbe\u5907\u90fd\u7a7a\u95f2\u5219\u90fd\u8f93\u51fa\u9ad8\u963b\u6001\uff0c\u7531\u4e0a\u62c9\u7535\u963b\u628a\u603b\u7ebf\u62c9\u4e3a\u9ad8\u7535\u5e73\u3002</p> <p>\u534f\u8bae\u5c42\uff1a</p> <p></p> <p></p> <p></p> <p></p> <ul> <li>\u4e3b\u673a\u5728\u53d1\u9001\u8d77\u59cb\u4fe1\u53f7\u540e\u6240\u6709\u4ece\u673a\u90fd\u4f1a\u63a5\u6536\u5230\uff0c\u6839\u636e\u534f\u8bae\uff0c\u63a5\u4e0b\u6765\u53d1\u9001\u5e7f\u64ad\u7684\u4ece\u673a\u5730\u5740\u4fe1\u53f7</li> <li>\u5730\u5740\u4f4d\u540e\u7684\u8bfb\u5199\u4f4d\u9ad8\u7535\u5e73\u8bfb\u3001\u4f4e\u7535\u5e73\u5199</li> <li>\u4ece\u673a\u63a5\u6536\u5230\u5339\u914d\u7684\u5730\u5740\u4e4b\u540e\uff0c\u53ea\u6709\u63a5\u6536\u5230\u5e94\u7b54\u4fe1\u53f7\u540e\u4e3b\u673a\u624d\u80fd\u7ee7\u7eed\u53d1\u9001\u6216\u63a5\u6536\u6570\u636e</li> </ul> <p>\u5f53\u4e3b\u673a\u5199\u7684\u65f6\u5019</p> <ul> <li>\u4ece\u673a\u56de\u590d\u5e94\u7b54\u4fe1\u53f7\uff0c\u4e3b\u673a\u518d\u53d1\u9001\u4e00\u4e2a\u5b57\u8282\uff0c\u6570\u636e\u4f20\u8f93\u7ed3\u675f\u540e\u4e3b\u673a\u7ed9\u4ece\u673a\u53d1\u9001\u901a\u77e5\u4fe1\u53f7</li> </ul> <p>\u5f53\u4e3b\u673a\u8bfb\u7684\u65f6\u5019</p> <ul> <li>\u4e3b\u673a\u82e5\u4e0d\u60f3\u63a5\u6536\u6570\u636e\u4e86\u7684\u8bdd\uff0c\u4e3b\u673a\u7ed9\u4ece\u673a\u8fd4\u56de\u4e00\u4e2a\u975e\u5e94\u7b54\u4fe1\u53f7</li> </ul> <p>\u7b2c\u4e09\u5e45\u56fe\u4e3a\u590d\u5408\u683c\u5f0f\uff0c\u4e24\u6bb5\u8d77\u59cb\u4fe1\u53f7\uff1a</p> <ul> <li>\u4e3b\u673a\u901a\u8fc7\u7b2c\u4e00\u6b21\u4f20\u8f93\u7684\u8d77\u59cb\u4fe1\u53f7\u627e\u5230\u4ece\u53ca\u8bbe\u5907\u540e\uff0c\u518d\u53d1\u9001\u4e00\u6bb5\u6570\u636e\uff0c\u8fd9\u6bb5\u6570\u636e\u4e00\u822c\u7528\u4e8e\u8868\u793a\u4ece\u8bbe\u5907\u5185\u90e8\u7684\u5bc4\u5b58\u5668\u6216\u5b58\u50a8\u5668\u5730\u5740</li> <li>\u5728\u7b2c\u4e8c\u6b21\u4f20\u8f93\u7684\u65f6\u5019\u5219\u4e3a\u5b9e\u9645\u8bfb\u5199\u5185\u5bb9</li> </ul> <p>\u5728 SCL \u4e3a\u4f4e\u7535\u5e73\u65f6\uff0cSDA \u65e0\u6548</p> <p></p>"},{"location":"_Embedded/240924-%E9%80%9A%E8%AE%AF%E5%8D%8F%E8%AE%AE%E6%80%BB%E7%BB%93/#5-spi","title":"5 SPI","text":"<p>\u76f8\u6bd4\u4e8e I2C \u7684\u5e7f\u64ad\u5730\u5740\u9009\u62e9\u8bbe\u5907\uff0cSPI \u591a\u6dfb\u52a0\u4e86\u7247\u9009\u7ebf\uff08NSS\uff09\u4f4e\u7535\u5e73\u6709\u6548\uff0c\u9ad8\u7535\u5e73\u4e3a\u7ed3\u675f\u4fe1\u53f7</p> <p>\u5728\u65f6\u949f\u7684\u4e0b\u964d\u6cbf\u8fdb\u884c\u6570\u636e\u91c7\u6837\u3002</p> <p>\u542b\u6709\u56db\u79cd\u901a\u8baf\u6a21\u5f0f\uff1a</p> <p></p>"},{"location":"_Embedded/241010-%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/","title":"241010-\u786c\u4ef6\u8bbe\u8ba1\u76f8\u5173\u77e5\u8bc6","text":"<p>\u53c2\u8003\uff1a https://blog.csdn.net/karaxiaoyu/article/details/113409410</p> <p>EMC\uff1a https://www.eet-china.com/mp/a330718.html</p>"},{"location":"_Embedded/241010-%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#1-emc","title":"1 EMC","text":"<p>Electromagnetic Compatibility</p> <p>EMC = EMI\uff08\u7535\u78c1\u5e72\u6270\uff09 + EMS\uff08\u7535\u78c1\u6297\u6270\uff09</p> <p>Electromagnetic Interference \u7535\u78c1\u5e72\u6270\u5f15\u8d77\u7684\u8bbe\u5907\u3001\u4f20\u8f93\u901a\u9053\u6216\u7cfb\u7edf\u6027\u80fd\u7684\u4e0b\u964d\u3002</p> <p>Electromagnetic Susceptibility \u5b58\u5728\u7535\u78c1\u5e72\u6270\u7684\u60c5\u51b5\u4e0b\uff0c\u88c5\u7f6e\u3001\u8bbe\u5907\u6216\u7cfb\u7edf\u7684\u6297\u5e72\u6270\u80fd\u529b\u3002</p> <p>\u7535\u78c1\u5e72\u6270\u7684\u4e09\u8981\u7d20\u662f\u5e72\u6270\u6e90\u3001\u5e72\u6270\u4f20\u8f93\u9014\u5f84\u3001\u5e72\u6270\u63a5\u6536\u5668\u3002</p> <p>\u6700\u57fa\u672c\u7684\u5e72\u6270\u6291\u5236\u6280\u672f\u662f\u5c4f\u853d\u3001\u6ee4\u6ce2\u3001\u63a5\u5730\u3002\u5b83\u4eec\u4e3b\u8981\u7528\u6765\u5207\u65ad\u5e72\u6270\u7684\u4f20\u8f93\u9014\u5f84\u3002</p>"},{"location":"_Embedded/241010-%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#11-esd","title":"1.1 ESD","text":"<p>\u8bf7\u5217\u4e3e\u4e09\u79cd\u5178\u578b\u7684 ESD \u6a21\u578b\u3002</p> <p>\u4eba\u4f53\u6a21\u578b(HBM)\u3001\u673a\u5668\u6a21\u578b(MM)\u3001\u5e26\u7535\u5668\u4ef6\u6a21\u578b(CDM)\u3002</p> <p>\u8bf7\u95ee\u4e3a\u4f55\u624b\u6301\u4fbf\u643a\u7535\u5b50\u4ea7\u54c1\uff0c\u9700\u8981\u5728\u4f17\u591a\u8f93\u5165\u8f93\u51fa\u63a5\u53e3\u52a0 ESD \u5668\u4ef6\uff1f\u60a8\u8ba4\u4e3a\u9009\u62e9 ESD \u5143\u4ef6\u7684\u65f6\u5019\u9700\u8981\u6ce8\u610f\u54ea\u4e9b\u53c2\u6570\uff1f\u5982\u679c\u4e00\u4e2a\u65f6\u949f\u7ebf\u52a0\u4e86 ESD \u5668\u4ef6\u4e4b\u540e\u63a5\u53e3\u5de5\u4f5c\u4e0d\u6b63\u5e38\uff0c\u628a ESD \u5668\u4ef6\u53bb\u6389\u4e4b\u540e\u5374\u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u60a8\u8ba4\u4e3a\u662f\u4ec0\u4e48\u539f\u56e0\uff0c\u5e94\u8be5\u5982\u4f55\u91cd\u65b0\u9009\u62e9 ESD \u5668\u4ef6\uff1f</p> <p>\u624b\u6301\u8bbe\u5907\uff0c\u4f17\u591a\u8f93\u5165\u8f93\u51fa\u63a5\u53e3\u5747\u53ef\u80fd\u53d7\u5230\u9759\u7535\u653e\u7535\u7684\u635f\u5bb3\uff0c\u6240\u4ee5\u8981\u52a0ESD\u4fdd\u62a4\u5668\u4ef6\u3002</p> <p>ESD \u5143\u4ef6\u7684\u9009\u62e9\u9700\u8981\u6ce8\u610f\u4e09\u4e2a\u53c2\u6570\uff1a\u6b63\u5e38\u5de5\u4f5c\u7535\u538b\u3001\u52a8\u4f5c\u5d4c\u4f4d\u7535\u538b\u548c\u7b49\u6548\u7535\u5bb9\u3002\u5982\u679c\u7b49\u6548\u7535\u5bb9\u8fc7\u5927\uff0c\u4f1a\u5f71\u54cd\u4fe1\u53f7\u7684\u5de5\u4f5c\u9891\u7387\uff0c\u6240\u4ee5\u9700\u8981\u6839\u636e\u4fe1\u53f7\u6700\u5927\u5de5\u4f5c\u9891\u7387\u6765\u9009\u62e9 ESD \u5668\u4ef6\u7684\u7b49\u6548\u7535\u5bb9\u3002</p>"},{"location":"_Embedded/241010-%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#12-tvs","title":"1.2 TVS","text":"<p>\u8bf7\u7b80\u8ff0 TVS\uff08Transient Voltage Suppressors\uff09 \u77ac\u6001\u7535\u538b\u6291\u5236\u4e8c\u6781\u7ba1\u7684\u5de5\u4f5c\u539f\u7406\u3002</p> <p>\u5229\u7528\u4e86\u53cd\u5411\u51fb\u7a7f\u6548\u5e94\uff1a\u5f53 TVS \u4e0a\u7684\u7535\u538b\u8d85\u8fc7\u4e00\u5b9a\u5e45\u5ea6\u65f6\uff0c\u5668\u4ef6\u8fc5\u901f\u5bfc\u901a\uff0c\u4ece\u800c\u5c06\u6d6a\u6d8c\u80fd\u91cf\u6cc4\u653e\u6389\uff0c\u5e76\u5c06\u6d6a\u6d8c\u7535\u538b\u9650\u5236\u5728\u4e00\u5b9a\u7684\u5e45\u5ea6\u3002</p> <p>\u9009\u578b\uff1f</p> <p></p> <p>\u9009\u62e9 TVS \u7684\u6700\u9ad8\u5de5\u4f5c\u7535\u538b Vrwm\uff1a</p> <p>\u7531\u4e8e\u7535\u8def\u6b63\u5e38\u65f6 TVS \u4e0d\u5e94\u5de5\u4f5c\uff0c\u5e94\u5904\u4e8e\u622a\u6b62\u72b6\u6001\uff0c\u6240\u4ee5 TVS \u7684\u622a\u6b62\u7535\u538b\u5e94\u5927\u4e8e\u7535\u8def\u7684\u5de5\u4f5c\u7535\u538b\u3002</p> <p>\u4e00\u822c\u4e3a\u6700\u9ad8\u5de5\u4f5c\u7535\u538b\u7684 1.1 \u500d\u5230 1.2 \u500d</p> <p>\u9009\u62e9 TVS \u7684\u94b3\u4f4d\u7535\u538b VC</p> <p>\u5e94\u5c0f\u4e8e\u540e\u7aef\u7535\u8def\u7684\u6700\u5927\u53ef\u627f\u53d7\u77ac\u6001\u5b89\u5168\u7535\u538b</p> <p>\u9009\u62e9 TVS \u7684\u529f\u7387</p> <p>\u53cd\u5e94\u4e86 TVS \u7684\u6297\u6d6a\u6d8c\u80fd\u529b\uff0c\u53d6\u51b3\u4e8e Ipp \u548c VC</p> <p>\u8bc4\u4f30\u6f0f\u7535\u6d41 IR \u7684\u5f71\u54cd</p> <p>\u5728\u6700\u5927\u7684\u53cd\u5411\u5de5\u4f5c\u7535\u538b\u6761\u4ef6\u4e0b\uff0c\u6d41\u8fc7 TVS \u7684\u6700\u5927\u7535\u6d41\uff0cTVS \u8f83\u5c0f\u529f\u8017\uff0c\u82e5\u5e94\u7528\u5728\u9ad8\u963b\u6297\u7535\u8def\u5982 ADC \u7535\u8def\u4e2d\u6709\u53ef\u80fd\u4f1a\u5f71\u54cd ADC \u7684\u91c7\u6837\u503c\u3002</p> <p>\u8bc4\u4f30\u7ed3\u7535\u5bb9\u7684\u5f71\u54cd</p> <p>\u9ad8\u901f\u901a\u8baf\u7684\u60c5\u51b5\u4e0b\uff0cTVS \u7684\u7ed3\u7535\u5bb9\u8fc7\u5927\u5219\u4f1a\u5f71\u54cd\u4fe1\u53f7\u7684\u6b63\u5e38\u901a\u8baf</p>"},{"location":"_Embedded/241010-%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#13","title":"1.3 \u53c2\u8003\u8bbe\u8ba1","text":"<p>SRV05-4 \u53c2\u8003</p> <p></p>"},{"location":"_Embedded/241010-%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#14","title":"1.4 \u538b\u654f\u7535\u963b","text":"<p>\u7535\u538b\u654f\u611f\u5143\u4ef6\uff0c\u5728\u7535\u8def\u627f\u53d7\u8fc7\u538b\u65f6\u8fdb\u884c\u7535\u538b\u94b3\u4f4d\uff0c\u5438\u6536\u591a\u4f59\u7684\u7535\u6d41\u4ee5\u4fdd\u62a4\u540e\u7ea7\u7535\u8def</p>"},{"location":"_Embedded/241010-%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#2","title":"2 \u7535\u6e90","text":"<p>\u53c2\u8003\uff1a https://blog.csdn.net/qq_21794157/article/details/122703076</p> <p>\u4f7f\u7528\u8fc7 LM2576 \u7684\u7535\u6e90\u82af\u7247\uff0c\u8bbe\u8ba1\u65f6\u6709\u51e0\u4e2a\u5f53\u65f6\u8bb0\u5f97\u7684\u8981\u70b9\uff1a</p> <ul> <li>\u5bf9\u4e8e\u7535\u611f\u7684\u9009\u578b\u867d\u7136\u7ed5\u7ebf\u578b\u7684\u6bd4\u8f83\u4fbf\u5b9c\uff0c\u4f46\u662f\u5bb9\u6613\u4ea7\u751f\u7535\u78c1\u5e72\u6270\uff0c\u4e00\u4f53\u5f0f\u7684\u8f83\u597d\uff0c\u7535\u611f\u5de5\u4f5c\u7535\u6d41\u4e5f\u9700\u8981\u5927\u4e8e\u989d\u5b9a\u7535\u6d41</li> <li>\u8f93\u51fa\u7535\u5bb9\u8d77\u5230\u8f93\u51fa\u6ee4\u6ce2\u548c\u4fdd\u8bc1\u73af\u8def\u7a33\u5b9a\u7684\u4f5c\u7528\uff0c\u8010\u538b\u503c\u4e5f\u9700\u8981\u6ce8\u610f\u9009\u578b\uff0c\u81f3\u5c11\u4e3a\u8f93\u51fa\u7535\u538b\u7684 1.5 \u500d\u3002</li> <li>\u7eed\u6d41\u4e8c\u6781\u7ba1\u5e94\u4f7f\u7528\u4f4e\u538b\u964d\u7684\u8096\u7279\u57fa\u4e8c\u6781\u7ba1</li> </ul>"},{"location":"_Embedded/241010-%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#21","title":"2.1 \u8c03\u5236\u65b9\u5f0f","text":"<p>PFM \u9891\u7387\u8c03\u5236\u65b9\u5f0f</p> <p>\u5f00\u5173\u7684\u8109\u51b2\u5bbd\u5ea6\u4e00\u5b9a\uff0c\u6539\u53d8\u8109\u51b2\u8f93\u51fa\u7684\u9891\u7387\u4f7f\u5f97\u7535\u538b\u7a33\u5b9a</p> <p>\u9002\u5408\u957f\u65f6\u95f4\u5c0f\u8d1f\u8f7d\u7684\u5de5\u51b5\uff0c\u8017\u7535\u8f83\u5c0f</p> <p>PWM \u5bbd\u5ea6\u8c03\u5236\u65b9\u5f0f</p> <p>\u5f00\u5173\u7684\u8109\u51b2\u9891\u7387\u4e00\u5b9a\uff0c\u6539\u53d8\u8109\u51b2\u8f93\u51fa\u7684\u5bbd\u5ea6\u4f7f\u5f97\u7535\u538b\u7a33\u5b9a</p> <p>\u6548\u7387\u8f83\u9ad8\uff0c\u7eb9\u6ce2\u4ee5\u53ca\u566a\u58f0\u8f83\u5c0f</p> <p>\u4e0d\u540c\u70b9</p> <p>\u4e00\u822c\u5c0f\u8d1f\u8f7d\u5e38\u7528 PFM\uff0c\u91cd\u8d1f\u8f7d\u5e38\u7528 PWM</p>"},{"location":"_Embedded/241010-%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#22","title":"2.2 \u5de5\u4f5c\u6a21\u5f0f","text":"<ul> <li>CCM\uff1a\u7535\u611f\u7535\u6d41\u8fde\u7eed\u5de5\u4f5c\u6a21\u5f0f</li> <li>DCM\uff1a\u7535\u611f\u7535\u6d41\u4e0d\u8fde\u7eed\u5de5\u4f5c\u6a21\u5f0f</li> <li>BCM\uff1a\u7535\u611f\u7535\u6d41\u8fde\u7eed\u5de5\u4f5c\u6a21\u5f0f\uff08\u5468\u671f\u7ed3\u675f\u65f6\u7535\u611f\u7535\u6d41\u521a\u597d\u964d\u4e3a 0\uff09</li> </ul>"},{"location":"_Embedded/241010-%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#23","title":"2.3 \u67b6\u6784\u65b9\u5f0f","text":"<p>\u4f0f\u79d2\u5e73\u8861\u539f\u7406\uff1a\u5728\u7a33\u6001\u5de5\u4f5c\u7684\u5f00\u5173\u7535\u6e90\u4e2d\u7535\u611f\u4e24\u7aef\u7684\u6b63\u4f0f\u79d2\u503c\u7b49\u4e8e\u8d1f\u4f0f\u79d2\u503c</p> <p>BUCK</p> <p></p> <p></p> <p>\u5f00\u5173\u5bfc\u901a\u7684\u65f6\u5019\u8f93\u5165\u7535\u538b\u52a0\u5230 LC \u6ee4\u6ce2\u5668\u7684\u8f93\u5165\u6bb5\uff0c\u7535\u611f\u7535\u6d41\u4ee5\u56fa\u5b9a\u659c\u7387\u7ebf\u6027\u4e0a\u5347</p> <p>BOOST</p> <p></p> <p>\u5f00\u5173\u7ba1\u5bfc\u901a\u65f6\uff1a\u7535\u611f\u4e2d\u7684\u7535\u6d41\u5448\u7ebf\u6027\u589e\u52a0\uff0c\u7535\u611f\u81ea\u611f\u963b\u788d\u7535\u6d41\u4e0a\u5347\uff0c\u5c06\u7535\u80fd\u8f6c\u5316\u4e3a\u78c1\u80fd\u5b58\u50a8\u8d77\u6765\uff0c\u4e8c\u6781\u7ba1\u7528\u4e8e\u9632\u6b62\u7535\u5bb9\u5bf9\u5730\u653e\u7535</p> <p>\u5f00\u5173\u7ba1\u5173\u95ed\u65f6\uff1a\u7535\u611f\u7684\u7535\u6d41\u7f13\u6162\u51cf\u5c11\uff0c\u81ea\u611f\u4f5c\u7528\u963b\u788d\u7535\u6d41\u51cf\u5c11\uff0c\u7535\u611f\u4e24\u7aef\u5de6\u8d1f\u53f3\u6b63\uff0c\u56e0\u6b64\u8f93\u51fa\u7aef\u7684\u7535\u538b\u4e3a\u8f93\u5165\u7535\u538b\u52a0\u7535\u611f\u4ea7\u751f\u7684\u7535\u538b\uff0c\u8f93\u51fa\u7535\u538b\u5927\u4e8e\u8f93\u5165\u7535\u538b</p> <p>BUCK-BOOST</p> <p></p> <p>\u6ce8\u610f\u8f93\u51fa\u7535\u5bb9\u6781\u6027\u5411\u4e0b</p>"},{"location":"_Embedded/241010-%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#3-pcb","title":"3 PCB \u7ed8\u5236\u7ecf\u9a8c","text":"<p>PCB \u9996\u5148\u5148\u8981\u6309\u7167\u5916\u58f3\u8981\u6c42\u8bbe\u8ba1 PCB \u677f\u7684\u5f62\u72b6\u4e0e\u786e\u5b9a\u5b9a\u4f4d\u5b54\u7684\u4f4d\u7f6e\uff0c\u8981\u4fdd\u8bc1\u677f\u4ee5\u53ca\u677f\u4e0a\u7684\u5668\u4ef6\u4e0d\u4f1a\u4e0e\u5916\u58f3\u4ea7\u751f\u5e72\u6d89\u3002\u8bbe\u8ba1\u597d\u5f62\u72b6\u540e\u4fbf\u5f00\u59cb\u5e03\u5c40\uff0cPCB \u7684\u5e03\u5c40\u9075\u5faa\u201c\u7279\u6b8a\u4f18\u5148\uff0c\u5148\u96be\u540e\u6613\uff0c\u5148\u5927\u540e\u5c0f\u201d\u7684\u89c4\u5219\u3002\u5728\u672c\u9879\u76ee\u4e2d\u9700\u8981\u9884\u7559\u7535\u78c1\u9600\u4e0e\u6d41\u91cf\u8ba1\u7684\u63a5\u53e3\uff0c\u7531\u4e8e\u524d\u8005\u5206\u8109\u51b2\u578b\u7535\u78c1\u9600\u4e0e\u76f4\u6d41\u7535\u78c1\u9600\uff0c\u540e\u8005\u9700\u8981 24V \u4f9b\u7535\u4ee5\u53ca\u8109\u51b2\u8f93\u51fa\uff0c\u56e0\u6b64\u90fd\u9009\u7528\u95f4\u8ddd 5.81mm \u7684 3Pin \u87ba\u9489\u5f0f\u7aef\u5b50\uff1b\u8fd8\u8981\u9884\u7559 PCB \u603b 24V \u8f93\u5165\u63a5\u53e3\u4e0e 24V \u8f93\u51fa\u63a5\u53e3\uff0c\u4e14\u4e24\u4e2a\u63a5\u53e3\u65e2\u9700\u8981\u642d\u8f7d\u7535\u6e90\u8f93\u5165/\u8f93\u51fa\uff0c\u540c\u65f6\u4e5f\u4f5c\u4e3a 485 \u901a\u4fe1\u7684\u63a5\u53e3\uff0c\u6545\u9009\u7528\u95f4\u8ddd\u4e3a 5.81mm \u7684 4Pin \u87ba\u9489\u5f0f\u7aef\u5b50\u3002\u8003\u8651\u5230\u63a5\u7ebf\u7684\u65b9\u4fbf\uff0c\u6545\u5c06\u63a5\u53e3\u653e\u7f6e\u5728\u5916\u58f3\u7684\u9632\u6c34\u63a5\u53e3\u5904\u3002\u5176\u6b21\uff0c\u672c PCB \u677f\u8fd8\u9884\u7559\u4e86\u5355\u7247\u673a\u7a0b\u5e8f\u70e7\u5f55\u63a5\u53e3\u3001\u4e32\u53e3\u8c03\u8bd5\u63a5\u53e3\u3001I2C \u63a5\u53e3\u7b49\uff0c\u4ee5\u65b9\u4fbf\u540e\u7eed\u7684\u8c03\u8bd5\u4ee5\u53ca\u63d0\u9ad8\u9002\u914d\u6027\u3002\u7686\u9009\u7528 KF2510 \u7cfb\u5217\u7684\u63a5\u53e3\uff0c\u9632\u6b62\u53cd\u63a5\u5bfc\u81f4\u5143\u5668\u4ef6\u53d7\u635f\u3002\u786e\u5b9a\u63a5\u53e3\u4f4d\u7f6e\u540e\uff0c\u4fbf\u6839\u636e\u63a5\u53e3\u7684\u4f4d\u7f6e\u653e\u7f6e\u5bf9\u5e94\u7684\u5143\u5668\u4ef6\uff0c\u4ee5\u8fbe\u5230\u8d70\u7ebf\u8ddd\u79bb\u6700\u77ed\u6700\u65b9\u4fbf\uff0c\u963b\u6297\u6700\u4f4e\u7684\u76ee\u7684\uff0c\u63d0\u9ad8\u4fe1\u53f7\u7684\u7a33\u5b9a\u6027\u4ee5\u53ca\u5b8c\u6574\u6027\u3002</p> <p>\u4f18\u5148\u5e03\u7f6e\u7535\u6e90\u6a21\u5757\uff0c\u7535\u8def\u7a33\u5b9a\u5de5\u4f5c\u7684\u524d\u63d0\u662f\u4f9b\u7535\u7a33\u5b9a\u4e14\u6b63\u5e38\uff0c\u6545\u7535\u6e90\u7535\u8def\u7684\u5e03\u5c40\u4e0e\u8d70\u7ebf\u5c24\u4e3a\u91cd\u8981\u3002\u672c\u9879\u76ee\u7684\u7535\u6e90\u4ece\u63a5\u53e3\u8f93\u5165\uff0c\u5148\u7ecf\u8fc7 TVS \u4e0e\u81ea\u6062\u590d\u4fdd\u9669\u4e1d\uff0c\u518d\u7ecf\u8fc7 330uF \u7684\u5927\u7535\u5bb9\u6ee4\u9664\u4f4e\u9891\u566a\u58f0\u5206\u91cf\uff0c\u540e\u7ecf\u8fc7 1uF \u5c0f\u7535\u5bb9\u6ee4\u9664\u9ad8\u9891\u566a\u58f0\u5206\u91cf\uff0c\u5148\u540e\u987a\u5e8f\u4e0d\u5f97\u8c03\u6362\u3002\u6ee4\u6ce2\u540e\u7684\u7535\u6e90\u8fdb\u5165\u5f00\u5173\u7535\u6e90\u82af\u7247\uff0c\u82af\u7247\u5c06 24V \u964d\u81f3 5V \u8f93\u51fa\uff0c\u518d\u7ecf\u8fc7\u540e\u7eed\u7684 LC \u7535\u8def\u8fdb\u884c\u6ee4\u6ce2\uff0c\u6700\u540e\u7ecf\u8fc7 LDO \u7535\u8def\u8f93\u51fa 3.3V\uff0c\u7ed9\u5355\u7247\u673a\u4f9b\u7535\u3002\u5176\u4e2d\uff0c\u5f00\u5173\u7535\u6e90\u7684\u7eed\u6d41\u4e8c\u6781\u7ba1\u8981\u5c3d\u91cf\u9760\u8fd1\u5f15\u811a\u6446\u653e\uff0c\u4e14\u8981\u4fdd\u8bc1\u6574\u4e2a\u5f00\u5173\u7535\u6e90\u7684\u5730\u7ebf\u8fde\u63a5\u53ef\u9760\u3002\u53cc\u5c42\u677f\u94fa\u94dc\u7684\u8bdd\u5219\u8981\u4fdd\u8bc1 PCB \u9876\u5c42\u548c\u5e95\u5c42\u90fd\u8981\u8981\u6709\u4e00\u5757\u8f83\u5927\u5b8c\u6574\u7684\u94dc\u76ae\uff0c\u4e14\u591a\u6253\u5b54\u5c06\u4e24\u5c42\u7684\u94dc\u76ae\u90fd\u8fde\u63a5\u8d77\u6765\u3002\u7535\u611f\u4f5c\u4e3a\u5f00\u5173\u7535\u6e90\u4e2d\u7684\u529f\u7387\u5143\u4ef6\uff0c\u5de5\u4f5c\u65f6\u4f1a\u4ea7\u751f\u5927\u91cf\u7684\u70ed\uff0c\u9700\u8981\u8003\u8651\u5176\u6563\u70ed\u95ee\u9898\uff0c\u53ef\u901a\u8fc7\u6dfb\u52a0\u5927\u9762\u79ef\u7684\u586b\u5145\u6765\u589e\u52a0\u5176\u6563\u70ed\u9762\u79ef\uff0c\u4ea6\u53ef\u5c06\u7535\u611f\u5468\u56f4\u7684\u94fa\u94dc\u533a\u57df\u6316\u7a7a\uff0c\u9632\u6b62\u5bf9\u7535\u8def\u8fdb\u884c\u5e72\u6270\u3002</p> <p>\u63a5\u7740\u5e03\u7f6e\u4e3b\u63a7\u5355\u7247\u673a\u7535\u8def\uff0c\u7531\u4e8e\u4e3b\u63a7\u5355\u7247\u673a\u7684\u7684\u8d70\u7ebf\u6700\u4e3a\u590d\u6742\uff0c\u7ecf\u5e38\u9700\u8981\u4ea4\u53c9\u8d70\u7ebf\u6216\u6362\u5c42\uff0c\u56e0\u6b64\u9700\u8981\u628a\u5b83\u653e\u5728\u677f\u5b50\u4e2d\u5fc3\u4f4d\u7f6e\u3002\u4e3b\u63a7\u5355\u7247\u673a\u7684\u6676\u632f\u7535\u8def\u9700\u8981\u9760\u8fd1\u5355\u7247\u673a\u7684\u6676\u632f\u5f15\u811a\uff0c\u4e14\u9700\u8981\u505a\u5305\u5730\u5904\u7406\uff0c\u9632\u6b62\u5e72\u6270\u3002\u5176\u6ee4\u6ce2\u7535\u5bb9\u9700\u8981\u9760\u8fd1 IC \u5f15\u811a\u6446\u653e\u624d\u80fd\u4f7f\u6ee4\u6ce2\u6548\u679c\u8fbe\u5230\u6700\u597d\u3002\u5bf9\u4e8e 485 \u7535\u8def\uff0c\u5219\u6700\u597d\u5c06 TXD \u4e0e RXD \u4e24\u6761\u7ebf\u5c3d\u91cf\u9760\u8fd1\uff0c\u7b49\u957f\u6446\u653e\uff0c\u6700\u597d\u8d70\u5dee\u5206\u7ebf\u3002\u7531\u4e8e\u7ec8\u7aef\u4ee5\u53ca\u7f51\u5173\u90fd\u662f\u653e\u5728\u5ba4\u5916\u7684\uff0c\u56e0\u6b64\u4f1a\u7528\u9632\u6d6a\u6d8c\u5668\u4ef6\u4fdd\u62a4\u7535\u8def\uff0c\u9632\u6b62\u7535\u8def\u88ab\u9759\u7535\u7834\u574f\uff0c\u9632\u6d6a\u6d8c\u5668\u4ef6\u8981\u9760\u8fd1\u88ab\u4fdd\u62a4\u5bf9\u8c61\uff0c\u4e14\u4f4d\u4e8e\u5e72\u8def\u4e0a\u3002\u5e76\u4e14\u8981\u4fdd\u8bc1\u5b83\u7684\u7535\u7ebf\u53c8\u7c97\u53c8\u77ed\uff0c\u63a5\u5730\u8981\u53ef\u9760\u3002</p> <p>\u5728\u672c\u9879\u76ee\u4e2d\uff0c\u4e3a\u4e86\u80fd\u591f\u66f4\u597d\u7684\u63a7\u5236\u7535\u78c1\u9600\uff0c\u91c7\u7528\u4e86\u7ee7\u7535\u5668\u8fdb\u884c\u63a7\u5236\u3002\u7ee7\u7535\u5668\u9a71\u52a8\u7535\u8def\u6700\u597d\u4e0e\u5176\u5b83\u7535\u8def\u5206\u9694\u5f00\uff0c\u56e0\u4e3a\u62c5\u5fc3\u5b83\u4f1a\u5bf9\u5176\u5b83\u7535\u8def\u4ea7\u751f\u5e72\u6270\uff0c\u6240\u4ee5\u6700\u597d\u4e0e\u5176\u5b83\u7535\u8def\u4fdd\u6301\u8ddd\u79bb\uff0c\u4ee5\u53ca\u5c3d\u91cf\u4e0d\u8981\u5728\u5176\u5468\u56f4\u94fa\u94dc\uff0c\u4e0d\u7136\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5e72\u6270\u901a\u8fc7\u94dc\u76ae\u8026\u5408\u5230\u5176\u5b83\u7535\u8def\u5f53\u4e2d\u3002</p>"},{"location":"_Embedded/241010-%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#4","title":"4 \u5dee\u6a21\u5e72\u6270\u7684\u6d88\u9664\uff1f","text":"<p>\u2705\u53c2\u8003\u7b54\u6848\uff1a</p> <p>\u5dee\u6a21\u5e72\u6270\uff08common mode interference\uff09\u662f\u6307\u540c\u65f6\u4f5c\u7528\u4e8e\u4e24\u4e2a\u4fe1\u53f7\u7ebf\u4e0a\u7684\u566a\u58f0\uff0c\u5b83\u4eec\u7684\u5927\u5c0f\u76f8\u7b49\uff0c\u65b9\u5411\u76f8\u53cd\uff0c\u5f62\u6210\u4e00\u4e2a\u5171\u540c\u7684\u4fe1\u53f7\u566a\u58f0\u3002\u5dee\u6a21\u5e72\u6270\u4e0d\u4ec5\u4f1a\u5f71\u54cd\u4fe1\u53f7\u7684\u8d28\u91cf\uff0c\u8fd8\u4f1a\u5bfc\u81f4\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u548c\u53ef\u9760\u6027\u964d\u4f4e\u3002</p> <p>\u6a21\u5e72\u6270\u7684\u6d88\u9664\u53ef\u4ee5\u91c7\u53d6\u4ee5\u4e0b\u51e0\u79cd\u63aa\u65bd\uff1a</p> <p>\u91c7\u7528\u5dee\u5206\u4fe1\u53f7\u4f20\u8f93\u65b9\u5f0f\uff1a\u5728\u5dee\u5206\u4f20\u8f93\u65b9\u5f0f\u4e0b\uff0c\u4e24\u6761\u4fe1\u53f7\u7ebf\u4e4b\u95f4\u7684\u5dee\u5206\u6a21\u5f0f\u4fe1\u53f7\u53ef\u4ee5\u6709\u6548\u5730\u62b5\u6d88\u5dee\u6a21\u5e72\u6270\u4fe1\u53f7\uff0c\u4ece\u800c\u4f7f\u4fe1\u53f7\u4f20\u8f93\u66f4\u52a0\u7a33\u5b9a\u548c\u53ef\u9760\u3002</p> <p>\u6dfb\u52a0\u5171\u6a21\u6291\u5236\u7535\u8def\uff1a\u5171\u6a21\u6291\u5236\u7535\u8def\u662f\u4e00\u79cd\u4e13\u95e8\u7528\u6765\u6d88\u9664\u5dee\u6a21\u5e72\u6270\u7684\u7535\u8def\uff0c\u5b83\u53ef\u4ee5\u5728\u8f93\u5165\u4fe1\u53f7\u4e0a\u6dfb\u52a0\u4e00\u4e9b\u7279\u5b9a\u7684\u7535\u8def\uff0c\u4ee5\u8fbe\u5230\u6291\u5236\u5dee\u6a21\u5e72\u6270\u7684\u76ee\u7684\u3002</p> <p>\u52a0\u5f3a\u5730\u7ebf\u7684\u8fde\u63a5\uff1a\u5730\u7ebf\u7684\u8fde\u63a5\u8d28\u91cf\u76f4\u63a5\u5f71\u54cd\u7cfb\u7edf\u4e2d\u5dee\u6a21\u4fe1\u53f7\u7684\u6291\u5236\u6548\u679c\u3002\u52a0\u5f3a\u5730\u7ebf\u7684\u8fde\u63a5\u53ef\u4ee5\u6709\u6548\u5730\u964d\u4f4e\u7cfb\u7edf\u4e2d\u7684\u5dee\u6a21\u5e72\u6270\u3002</p> <p>\u4f18\u5316 PCB \u8bbe\u8ba1\uff1a\u5dee\u6a21\u5e72\u6270\u5f80\u5f80\u4e0e\u4fe1\u53f7\u4f20\u8f93\u7ebf\u7684\u957f\u5ea6\u3001\u5e03\u7ebf\u65b9\u5f0f\u3001PCB \u5c42\u6b21\u7b49\u56e0\u7d20\u6709\u5173\u3002\u56e0\u6b64\uff0c\u5728 PCB \u8bbe\u8ba1\u4e2d\uff0c\u53ef\u4ee5\u91c7\u7528\u66f4\u52a0\u5408\u7406\u7684\u5e03\u7ebf\u65b9\u5f0f\u3001\u51cf\u5c11\u7ebf\u957f\u3001\u4f18\u5316 PCB \u5c42\u6b21\u7b49\u63aa\u65bd\u6765\u6d88\u9664\u5dee\u6a21\u5e72\u6270\u3002</p> <p>\u4e8c\u3001MOSFET \u4e3b\u8981\u53c2\u6570\u548c\u9009\u578b MOSFET \u7684\u4e3b\u8981\u53c2\u6570\u6709 Id\uff08\u6700\u5927\u6f0f\u6e90\u7535\u6d41\uff09, Idm\uff08\u6700\u5927\u8109\u51b2\u6f0f\u6e90\u7535\u6d41\uff09\uff0cVgs\uff08\u6700\u5927\u6805\u6e90\u7535\u538b\uff09, V\uff08BR\uff09DSS\uff08\u6f0f\u6e90\u51fb\u7a7f\u7535\u538b\uff09, Rds (on)\uff08\u5bfc\u901a\u7535\u963b\uff09 ,Vth\uff08\u9608\u503c\u7535\u538b\uff09\u7b49\u3002\u5728\u505a\u5668\u4ef6\u9009\u578b\u65f6\uff0c\u4e3b\u8981\u4ece\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\u8003\u8651\uff1a</p> <p>1\u3001\u662f N-MOS \u8fd8\u662f P-MOS\uff1aN-MOS \u6027\u4ef7\u6bd4\u9ad8 \uff081\uff09\u4ece\u7535\u8def\u7ed3\u6784\u4e0a\u770b\uff0c\u4f4e\u538b\u4fa7\u5f00\u5173\u9009 N-MOS\uff0c\u9ad8\u538b\u4fa7\u5f00\u5173\u9009 P-MOS\uff1b</p> <p>\uff082\uff09\u4ece\u6210\u672c\u548c\u4fbf\u5229\u6027\u4e0a\u770b\uff0cN \u6c9f\u9053 MOSFET \u9009\u62e9\u7684\u578b\u53f7\u591a\uff0c\u7269\u6599\u6210\u672c\u4f4e\uff1bP \u6c9f\u9053 MOSFET \u9009\u62e9\u7684\u578b\u53f7\u8f83\u5c11\uff0c\u7269\u6599\u6210\u672c\u9ad8\uff1b</p> <p>\uff083\uff09\u4ece\u6027\u80fd\u4e0a\u770b\uff0cNMOS \u5bfc\u901a\u7535\u963b\u5c0f\uff0c\u53d1\u70ed\u91cf\u66f4\u4f4e\uff0c\u5141\u8bb8\u901a\u8fc7\u7684\u7535\u6d41\u5927\uff0c\u5e94\u7528\u573a\u666f\u4e5f\u66f4\u5e7f\u6cdb\uff0c\u6b63\u6fc0\uff0c\u53cd\u6fc0\u3001\u63a8\u633d\u3001\u534a\u6865\u3001\u5168\u6865\u7b49\u62d3\u6251\u7535\u8def\u90fd\u80fd\u5e94\u7528\uff1b</p> <p>2\u3001\u9009\u53d6\u5c01\u88c5\u7c7b\u578b\uff1aSMT \u5668\u4ef6\u751f\u4ea7\u6548\u7387\u9ad8 \uff081\uff09\u6e29\u5347\u548c\u70ed\u8bbe\u8ba1\u662f\u9009\u53d6\u5c01\u88c5\u6700\u57fa\u672c\u7684\u8981\u6c42\uff0c\u57fa\u672c\u539f\u5219\u5c31\u662f\u5728\u4fdd\u8bc1 MOSFET \u7684\u6e29\u5347\u548c\u7cfb\u7edf\u6548\u7387\u7684\u524d\u63d0\u4e0b\uff0c\u9009\u53d6\u53c2\u6570\u548c\u5c01\u88c5\u66f4\u901a\u7528\u7684\u578b\u53f7\uff1b</p> <p>\uff082\uff09\u7cfb\u7edf\u7684\u7ed3\u6784\u5c3a\u5bf8\u9650\u5236\uff1b</p> <p>\uff083\uff09\u529f\u8017\u6216\u6563\u70ed\u65b9\u9762\u7684\u9700\u6c42\uff1b</p> <p>\uff084\uff09\u751f\u4ea7\u3001\u88c5\u914d\u3001\u7ef4\u4fee\u7684\u6548\u7387\u548c\u4fbf\u5229\u6027\uff1b</p> <p>\u56fe 3\uff1aMOSFET \u7684\u5e38\u89c1\u5c01\u88c5</p> <p>3\u3001\u9009\u53d6\u8010\u538b BVdss\uff1a\u9884\u7559\u8db3\u591f\u7684\u4f59\u91cf \uff081\uff09\u4ea7\u54c1\u7684\u989d\u5b9a\u7535\u538b\u662f\u56fa\u5b9a\u7684\uff0cMOSFET \u7684\u8010\u538b\u9009\u53d6\u4e5f\u5c31\u6bd4\u8f83\u5bb9\u6613\uff0c\u7531\u4e8e BVdss \u5177\u6709\u6b63\u6e29\u5ea6\u7cfb\u6570\uff0c\u5728\u5b9e\u9645\u7684\u5e94\u7528\u4e2d\u8981\u7ed3\u5408\u8fd9\u4e9b\u56e0\u7d20\u7efc\u5408\u8003\u8651\u3002</p> <p>\uff082\uff09VDS \u4e2d\u7684\u6700\u9ad8\u5c16\u5cf0\u7535\u538b\u5982\u679c\u5927\u4e8e BVdss\uff0c\u5373\u4fbf\u8fd9\u4e2a\u5c16\u5cf0\u8109\u51b2\u7535\u538b\u7684\u6301\u7eed\u53ea\u6709\u51e0\u4e2a\u6216\u51e0\u5341\u4e2a ns\uff0cMOSFET \u7ba1\u4e5f\u4f1a\u8fdb\u5165\u96ea\u5d29\u51fb\u7a7f\u72b6\u6001\u800c\u53d1\u751f\u635f\u574f\u3002</p> <p>\uff083\uff09\u56e0\u6b64 MOSFET \u7ba1\u7684\u96ea\u5d29\u7535\u538b\u901a\u5e38\u53d1\u751f\u5728 1.2\uff5e1.3 \u500d\u7684 BVDSS\uff0c\u800c\u4e14\u6301\u7eed\u7684\u65f6\u95f4\u901a\u5e38\u90fd\u662f\u03bcs\u3001\u751a\u81f3 ms \u7ea7\uff0c\u56e0\u6b64\u5728\u9009\u62e9 BVdss \u65f6\u9700\u8981\u7559\u6709\u8db3\u591f\u7684\u4f59\u91cf\u3002</p> <p>4\u3001\u9009\u53d6 Id \u7535\u6d41\uff1a\u9884\u7559\u8db3\u591f\u7684\u4f59\u91cf \uff081\uff09Id \u7535\u6d41\u4ee3\u8868 MOSFET \u80fd\u6d41\u8fc7\u7684\u6700\u5927\u7535\u6d41\uff0c\u53cd\u6620\u5e26\u8d1f\u8f7d\u80fd\u529b\uff0c\u8d85\u8fc7\u8fd9\u4e2a\u503c\u53ef\u80fd\u4f1a\u56e0\u4e3a\u8d85\u8d1f\u8377\u5bfc\u81f4 MOSFET \u635f\u574f\u3002</p> <p>\uff082\uff09Id \u7535\u6d41\u53c2\u6570\u9009\u62e9\u65f6\uff0c\u9700\u8981\u8003\u8651\u8fde\u7eed\u5de5\u4f5c\u7535\u6d41\u548c\u7535\u6d8c\u5e26\u6765\u7684\u5c16\u5cf0\u7535\u6d41\uff0c\u786e\u4fdd MOSFET \u80fd\u591f\u627f\u53d7\u6700\u5927\u7684\u7535\u6d41\u503c\u3002</p> <p>\uff083\uff09Id \u7535\u6d41\u5177\u6709\u8d1f\u6e29\u5ea6\u7cfb\u6570\uff0c\u7535\u6d41\u503c\u4f1a\u968f\u7740\u7ed3\u6e29\u5ea6\u5347\u9ad8\u800c\u964d\u4f4e\uff0c\u56e0\u6b64\u5e94\u7528\u65f6\u9700\u8981\u8003\u8651\u7684\u5176\u5728\u9ad8\u6e29\u65f6\u7684 Id \u503c\u80fd\u5426\u7b26\u5408\u8981\u6c42\u3002</p> <p>5\u3001\u9009\u53d6\u6805\u6781\u9608\u503c\u7535\u538b Vth\uff1a\u9700\u7ed3\u5408\u7535\u8def\u9700\u6c42\u9009\u62e9 \uff081\uff09Vth \u662f\u6307\u5f53\u6e90\u6781\u4e0e\u6f0f\u6781\u4e4b\u95f4\u6709\u6307\u5b9a\u7535\u6d41\u65f6\uff0c\u6805\u6781\u4f7f\u7528\u7684\u7535\u538b\uff1b</p> <p>\uff082\uff09Vth \u5177\u6709\u8d1f\u6e29\u5ea6\u7cfb\u6570\uff0c\u9009\u62e9\u53c2\u6570\u65f6\u9700\u8981\u8003\u8651\u3002</p> <p>\uff083\uff09\u4e0d\u540c\u7535\u5b50\u7cfb\u7edf\u9009\u53d6 MOSFET \u7ba1\u7684\u9608\u503c\u7535\u538b Vth \u5e76\u4e0d\u76f8\u540c\uff0c\u9700\u8981\u6839\u636e\u7cfb\u7edf\u7684\u9a71\u52a8\u7535\u538b\uff0c\u9009\u53d6\u5408\u9002\u9608\u503c\u7535\u538b\u7684 MOSFET \u7ba1\u3002</p> <p>\uff084\uff09\u9608\u503c\u7535\u538b\u8d8a\u9ad8\u6297\u5e72\u6270\u6027\u80fd\u8d8a\u5f3a\uff0c\u53ef\u4ee5\u51cf\u5c11\u5c16\u5cf0\u8109\u51b2\u9020\u6210\u7684\u7535\u8def\u8bef\u89e6\u53d1\u3002</p> <p>6\u3001\u9009\u53d6\u5bfc\u901a\u7535\u963b Rds\uff08on\uff09\uff1a\u8d8a\u4f4e\u8d8a\u597d \uff081\uff09Rds\uff08on\uff09\u548c\u5bfc\u901a\u635f\u8017\u76f4\u63a5\u76f8\u5173\uff0cRDSON \u8d8a\u5c0f\uff0c\u529f\u7387 MOSFET \u7684\u5bfc\u901a\u635f\u8017\u8d8a\u5c0f\u3001\u6548\u7387\u8d8a\u9ad8\u3001\u5de5\u4f5c\u6e29\u5347\u8d8a\u4f4e\u3002</p> <p>\uff082\uff09Rds\uff08on\uff09\u65f6\u6b63\u6e29\u5ea6\u7cfb\u6570\uff0c\u4f1a\u968f\u7740 MOSFET \u6e29\u5ea6\u5347\u9ad8\u800c\u53d8\u5927\uff0c\u4e5f\u5c31\u662f Rds\uff08on\uff09\u7535\u963b\u503c\u4f1a\u968f\u7740\u7535\u6d41\u589e\u5927\u8f7b\u5fae\u4e0a\u5347\uff0c\u56e0\u6b64\u9009\u62e9\u65f6\u9700\u8981\u7559\u6709\u4f59\u91cf\u3002</p> <p>\uff083\uff09Rds\uff08on\uff09\u4f4e\u7684 MOSFET \u901a\u5e38\u6210\u672c\u6bd4\u8f83\u9ad8\uff0c\u53ef\u4ee5\u901a\u8fc7\u4f18\u5316\u9a71\u52a8\u7535\u8def\uff0c\u6539\u8fdb\u6563\u70ed\u7b49\u65b9\u5f0f\uff0c\u9009\u7528 Rds\uff08on\uff09\u8f83\u5927\u4e00\u4e9b\u7684\u7684\u4f4e\u6210\u672c\u5668\u4ef6\u3002</p> <p>7\u3001\u9009\u53d6\u5bc4\u751f\u7535\u5bb9/\u6805\u7535\u8377\uff1aCiss\u3001Coss\u3001Crss\uff1bQg\u3001Qgd\u3001Qoss\uff1a\u8d8a\u5c0f\u8d8a\u597d \uff081\uff09\u5f71\u54cd\u5f00\u5173\u6027\u80fd\u53c2\u6570\uff0c\u6700\u91cd\u8981\u7684\u662f Ciss\u3001Coss \u548c Crss \u7684\u7535\u5bb9\uff0c\u8fd9\u4e9b\u7535\u5bb9\u5728\u5de5\u4f5c\u65f6\u91cd\u590d\u5145\u653e\u7535\u4ea7\u751f\u5f00\u5173\u635f\u8017\uff0c\u5bfc\u81f4 MOSFET \u5f00\u5173\u901f\u5ea6\u4e0b\u964d\uff0c\u6548\u7387\u964d\u4f4e\u3002</p> <p>\uff082\uff09\u6805\u7535\u8377\u53cd\u6620\u5b58\u50a8\u5728\u7aef\u5b50\u95f4\u7684\u7535\u8377\uff0c\u5728\u5f00\u5173\u7535\u8def\u5de5\u4f5c\u65f6\uff0c\u7535\u5bb9\u4e0a\u7684\u7535\u8377\u4f1a\u968f\u7740\u7535\u538b\u53d8\u5316\uff0c\u56e0\u6b64\u8bbe\u8ba1\u6805\u6781\u9a71\u52a8\u7535\u8def\u65f6\u9700\u8981\u8003\u8651\u6805\u6781\u7535\u8377\u7684\u5f71\u54cd\u3002</p> <p>8\u3001\u70ed\u8bbe\u8ba1\uff1a\u6309\u7167\u6700\u574f\u60c5\u51b5\u6765\u8bbe\u8ba1 \uff081\uff09\u786e\u4fdd MOSFET \u5de5\u4f5c\u5728\u5f00\u5173\u72b6\u6001\uff0c\u5173\u6ce8\u5c01\u88c5\u7684\u534a\u5bfc\u4f53\u7ed3\u4e0e\u73af\u5883\u4e4b\u95f4\u7684\u70ed\u963b\uff0c\u4ee5\u53ca\u6700\u9ad8\u7684\u7ed3\u6e29\u3002</p> <p>\uff082\uff09\u8bbe\u8ba1\u4eba\u5458\u9700\u5145\u5206\u8003\u8651\u6700\u574f\u60c5\u51b5\u548c\u771f\u5b9e\u60c5\u51b5\uff0c\u5efa\u8bae\u91c7\u7528\u9488\u5bf9\u6700\u574f\u60c5\u51b5\u7684\u8ba1\u7b97\u7ed3\u679c\uff0c\u786e\u4fdd\u7cfb\u7edf\u4e0d\u4f1a\u5931\u6548\u3002</p> <p>\uff083\uff09\u5982\u679c\u7cfb\u7edf\u5141\u8bb8\uff0c\u5c3d\u91cf\u52a0\u5927\u6563\u70ed\u5668\u5c3a\u5bf8\u548c\u9009\u7528\u66f4\u597d\u7684\u6563\u70ed\u65b9\u5f0f\uff0c\u63d0\u5347\u7cfb\u7edf\u5de5\u4f5c\u7a33\u5b9a\u6027\u3002</p> <p>9\u3001\u5176\u4ed6\uff1a MOSFET \u9009\u578b\u65f6\u8fd8\u9700\u8981\u5173\u6ce8\u5f00\u5173\u65f6\u95f4\uff08ton\u3001toff\uff09\u3001\u5185\u90e8\u5bc4\u751f\u4e8c\u6781\u7ba1\u3001\u4f4e\u9891\u8de8\u5bfc gm \u7b49\u53c2\u6570\u3002</p>"},{"location":"_Embedded/241124-ESP32Light%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/","title":"241124-ESP32Light \u5f00\u53d1\u6587\u6863","text":""},{"location":"_Embedded/241124-ESP32Light%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/#1","title":"1 \u6a21\u5757","text":"<p>5V PWM \u9a71\u52a8\uff0c\u5927\u7535\u6d41\u9a71\u52a8\u5c04\u706f</p> <p>SPI \u53e3\u505a WS2812 \u9a71\u52a8\u706f\u5e26\uff0c\u6c1b\u56f4\u706f</p> <p>\u7ee7\u7535\u5668\u914d 3 \u4e2a</p> <p>oled \u5355\u8272\u5c0f\u5c4f\u5e55\uff0c\u8fd8\u53ef\u4ee5\u5b66\u4e00\u4e0b\u4e1d\u6ed1 UI\uff08\uff09</p> <p>\u786c\u4ef6\u914d\u4e00\u4e2a\u65cb\u94ae\u8fdb\u884c\u672c\u5730\u8c03\u4eae\u5ea6</p> <p>\u8ba1\u5212\u4f7f\u7528\u84dd\u7259\u4e0e wifi \u53cc\u6a21\u63a7\u5236</p>"},{"location":"_Embedded/241128-JLINK%E8%B0%83%E8%AF%95%E7%9B%B8%E5%85%B3%E6%8A%80%E5%B7%A7/","title":"241128-JLINK \u8c03\u8bd5\u76f8\u5173\u6280\u5de7","text":""},{"location":"_Embedded/241128-JLINK%E8%B0%83%E8%AF%95%E7%9B%B8%E5%85%B3%E6%8A%80%E5%B7%A7/#1-jlink-log","title":"1 JLINK LOG \u6253\u5370","text":"<p>\u53c2\u8003\uff1a https://blog.csdn.net/best_xiaolong/article/details/119495369</p> <p>jlink \u7684 RTT \u529f\u80fd\uff08\u5b9e\u65f6\u4f20\u8f93 Real Time Transfer\uff09\u53ef\u4ee5\u901a\u8fc7 USB \u5c06 Log \u4fe1\u606f\u6253\u5370\u51fa\u6765\u3002</p>"},{"location":"_Embedded/241128-JLINK%E8%B0%83%E8%AF%95%E7%9B%B8%E5%85%B3%E6%8A%80%E5%B7%A7/#11-rtt","title":"1.1 \u79fb\u690dRTT","text":"<pre><code>.\\SEGGER\\JLink_xxxxb\\Samples\\RTT\n</code></pre> <p>zip \u89e3\u538b\u51fa\u6765\u4e4b\u540e\u76f4\u63a5\u5c06 <code>RTT</code> \u6587\u4ef6\u5939\u590d\u5236\u5230\u9879\u76ee\u6e90\u7801\u8def\u5f84\u4e2d\uff0c\u5e76\u5728\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e24\u4e2a <code>.c</code> \u6587\u4ef6\u3002</p> <p>\u5934\u6587\u4ef6\u7684\u8def\u5f84\u4e5f\u6dfb\u52a0\u4e00\u4e0b\u3002</p>"},{"location":"_Embedded/241128-JLINK%E8%B0%83%E8%AF%95%E7%9B%B8%E5%85%B3%E6%8A%80%E5%B7%A7/#12","title":"1.2 \u4f7f\u7528","text":"<p>\u5de5\u7a0b\u4ee3\u7801\u4e2d\uff1a</p> <pre><code>#include \"SEGGER_RTT.h\"\n\nSEGGER_RTT_printf(0, \"xxxx\\r\\n\");\n</code></pre> <p>\u6253\u5f00 <code>JLinkRTTViewer.exe</code></p>"},{"location":"_Embedded/241205-ESP32%26FreeRTOS%E7%AC%94%E8%AE%B0%E4%B8%8E%E8%8B%A5%E5%B9%B2%E9%85%8D%E7%BD%AE/","title":"241205-ESP32&amp;FreeRTOS \u7b14\u8bb0\u4e0e\u82e5\u5e72\u914d\u7f6e","text":""},{"location":"_Embedded/241205-ESP32%26FreeRTOS%E7%AC%94%E8%AE%B0%E4%B8%8E%E8%8B%A5%E5%B9%B2%E9%85%8D%E7%BD%AE/#1-freertos","title":"1 FreeRTOS \u961f\u5217","text":"<p>\u521b\u5efa</p> <pre><code>#define xQueueCreate( uxQueueLength, uxItemSize )    xQueueGenericCreate( ( uxQueueLength ), ( uxItemSize ), ( queueQUEUE_TYPE_BASE ) )\n\nQueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength,\n                                       const UBaseType_t uxItemSize,\n                                       const uint8_t ucQueueType )\n</code></pre> <p>\u521b\u5efa\u961f\u5217\uff0c\u64cd\u4f5c\u5bf9\u8c61\u4e3a\u961f\u5217\u53e5\u67c4 <code>QueueHandle_t</code>\uff0c\u6307\u5b9a\u961f\u5217\u957f\u5ea6\u4ee5\u53ca\u6210\u5458\u5927\u5c0f\uff0c\u82e5\u5931\u8d25\u5219\u8fd4\u56de <code>NULL</code>\u3002</p> <p>\u53d1\u9001\u8bf7\u6c42</p> <pre><code>#define xQueueSend( xQueue, pvItemToQueue, xTicksToWait ) \\\n    xQueueGenericSend( ( xQueue ), ( pvItemToQueue ), ( xTicksToWait ), queueSEND_TO_BACK )\n\nBaseType_t xQueueGenericSend( QueueHandle_t xQueue,\n                              const void * const pvItemToQueue,\n                              TickType_t xTicksToWait,\n                              const BaseType_t xCopyPosition )\n</code></pre> <p>\u53d1\u9001\u7ed9\u961f\u5217\u6570\u636e\uff0c\u6307\u5b9a\u961f\u5217\u3001\u6570\u636e\u4ee5\u53ca\u7b49\u5f85\u65f6\u95f4\u3002</p> <p>\u63a5\u6536\u8bf7\u6c42</p> <pre><code>BaseType_t xQueueReceive( QueueHandle_t xQueue,\n                          void * const pvBuffer,\n                          TickType_t xTicksToWait )\n</code></pre> <p>\u961f\u5217\u96c6\u5408</p> <p>\u67d0\u4e9b\u4e1a\u52a1\u903b\u8f91\u9700\u8981\u63a5\u6536\u591a\u4e2a\u961f\u5217\u96c6\u5408\u53d1\u9001\u6765\u7684\u8bf7\u6c42\u65f6\u53ef\u4ee5\u4f7f\u7528\u961f\u5217\u96c6\u5408\uff1a</p> <pre><code>QueueSetHandle_t xQueueCreateSet( const UBaseType_t uxEventQueueLength )\n\nBaseType_t xQueueAddToSet( QueueSetMemberHandle_t xQueueOrSemaphore,\n                               QueueSetHandle_t xQueueSet )\n\nQueueSetMemberHandle_t xQueueSelectFromSet( QueueSetHandle_t xQueueSet,\n                                                TickType_t const xTicksToWait )\n</code></pre> <p>\u521b\u5efa\u961f\u5217\u96c6\u5408\u65f6\u9700\u8981\u6307\u5b9a\u6700\u5927\u53ef\u5305\u542b\u7684\u961f\u5217\u6570\uff0c\u5728\u6dfb\u52a0\u4e4b\u540e\u63a5\u6536\u6d88\u606f\u65f6\u4f7f\u7528 <code>xQueueSelectFromSet</code> \u5224\u65ad\u6765\u81ea\u4e8e\u54ea\u4e2a\u961f\u5217\u3002</p> <p><code>QueueSetMemberHandle_t</code> \u4e0e <code>QueueHandle_t</code> \u76f8\u540c\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\u6bd4\u8f83\u3002</p>"},{"location":"_Embedded/241205-ESP32%26FreeRTOS%E7%AC%94%E8%AE%B0%E4%B8%8E%E8%8B%A5%E5%B9%B2%E9%85%8D%E7%BD%AE/#2-esp32log","title":"2 \u914d\u7f6e ESP32log \u8f93\u51fa","text":"<p>\u53c2\u8003\uff1a https://blog.csdn.net/ztvzbj/article/details/130472344 // LOG \u6253\u5370\u8f93\u51fa\u5f00\u542f\u6216\u5173\u95ed\u7684\u76f8\u5173\u9009\u9879</p> <ol> <li>\u5728 menuconfig -&gt; Bootloader config -&gt; Bootloader log verbosity -&gt; No output \u53ef\u5c06\u542f\u52a8 log \u5173\u95ed</li> <li>\u4e3b\u754c\u9762 -&gt; Component config -&gt; Log output -&gt; Default log verbosity -&gt; No output \u53ef\u5c06\u7ec4\u4ef6 log \u5173\u95ed</li> <li>Boot ROM Behavior -&gt; Permanently change Boot ROM output -&gt; Permanently disable logging \u53ef\u6c38\u4e45\u5173\u95ed log</li> <li><code>esp_log_level_set(TAG, ESP_LOG_INFO)</code> \u53ef\u5728\u7a0b\u5e8f\u4e2d\u5f00\u542f\u6216\u53d8\u5316</li> </ol>"},{"location":"_Embedded/ESP32%E9%A1%B9%E7%9B%AE%E6%B1%87%E6%80%BB/","title":"ESP32\u9879\u76ee\u6c47\u603b","text":""},{"location":"_Embedded/ESP32%E9%A1%B9%E7%9B%AE%E6%B1%87%E6%80%BB/#1-wifi","title":"1 \u84dd\u7259WIFI\u53cc\u6a21\u95e8\u7981\u63a7\u5236\u5668","text":"<p>\u4f7f\u7528 ESP32-S3\u4f5c\u4e3a\u4e3b\u63a7\uff0c\u65e8\u5728\u5b9e\u73b0\u65ad\u7f51\u60c5\u51b5\u4e0b\u4e5f\u53ef\u4ee5\u5229\u7528\u84dd\u7259\u529f\u80fd\u8fdb\u884c\u95e8\u7981\u63a7\u5236\u3002</p> <p>\u9879\u76ee\u94fe\u63a5\uff1a https://gitee.com/chenym_simpler/git_lock_electromagnet</p> <p>\u786c\u4ef6\u8d44\u6e90\u5982\u4e0b\uff1a</p> <ul> <li>\u4f7f\u7528\u6a21\u7ec4 <code>ESP32-S3-WROOM-1U-N8R2</code><ul> <li><code>ESP32-S3</code> \u4e3b\u63a7\uff0c\u4e3b\u9891\u9ad8\u8fbe 240MHz\uff0c\u53cc\u6838 Xtensa\u00ae dual-core 32-bit LX7 CPU</li> <li>8MB Flash</li> <li>2MB PSRAM</li> </ul> </li> </ul> <p>ESP32-S3-WROOM-1 \u91c7\u7528 PCB \u677f\u8f7d\u5929\u7ebf;</p> <p>ESP32-S3-WROOM-1U \u91c7\u7528 U.FL \u5ea7\u5b50\u8fde\u63a5\u5916\u90e8 IPEX \u5929\u7ebf</p> <p>\u53ef\u9009 4/8/16 MB flash\uff1b0/2/8 PSRAM</p> <ul> <li>240615-smartconfig\u914d\u7f51</li> <li>240617-IDF \u7684\u4e8b\u4ef6\u5faa\u73af\uff0c\u53ca wifi \u8fd0\u884c\u6d41\u7a0b</li> <li>240618-SNTP \u83b7\u53d6\u65f6\u95f4\u3001AES \u52a0\u5bc6</li> <li>240619-\u84dd\u7259\u5f00\u53d1</li> <li>240625-\u5361\u5173\u7cfb\u5b58\u50a8\u8bbe\u8ba1</li> <li>240626-BM8563 \u9a71\u52a8\u79fb\u690d\uff0cIDF-I2C \u7b14\u8bb0</li> <li>240719-LEDPWM\u53ca\u5e38\u7528\u6307\u793a\u51fd\u6570\u5c01\u88c5</li> <li>240818-\u84dd\u7259\u914d\u7f51\u4ee5\u53casoftAP\u65b9\u5f0f\u914d\u7f51\u63a2\u7d22</li> <li>240822-ESP32\u5206\u533a\u8868\u53caOTA</li> <li>240905-\u66f4\u65b0storage\u4ee5\u53camqtt\u6a21\u5757\u90e8\u5206\uff0c\u9010\u6b65\u5b9e\u73b0\u79c1\u6709json\u534f\u8bae</li> </ul>"},{"location":"_Embedded/ESP32%E9%A1%B9%E7%9B%AE%E6%B1%87%E6%80%BB/#2","title":"2 \u53c2\u8003\u6587\u6863\u4ee5\u53ca\u94fe\u63a5\uff1a","text":"<ul> <li>IDF \u5b98\u65b9\u6587\u6863</li> <li>IDF \u5b98\u65b9\u6ce8\u518c\u8868\u4ed3\u5e93</li> <li>ESP32-S3 \u6280\u672f\u53c2\u8003\u624b\u518c <p>\u8f83\u4e3a\u8be6\u7ec6\uff0c\u5305\u62ec\u6982\u8ff0\u3001\u529f\u80fd\u5217\u8868\u3001\u786c\u4ef6\u67b6\u6784\u3001\u7f16\u7a0b\u6307\u5357\u3001\u5bc4\u5b58\u5668\u5217\u8868\u7b49\u4fe1\u606f</p> </li> <li>ESP32-S3 \u6280\u672f\u89c4\u683c\u4e66 <p>\u6982\u8ff0\u7c7b\u578b\uff0c\u5305\u62ec\u5404\u5916\u8bbe\u91cd\u8981\u53c2\u6570</p> </li> <li>ESP32 \u9009\u578b\u5728\u7ebf\u5de5\u5177</li> </ul>"},{"location":"_Ref/","title":"Index","text":""},{"location":"_Ref/#timeline","title":"Timeline","text":"2024-12-05\u00b6 <p>  [ Ref ] &gt; FreeRTOS_API_Reference_CN_\u5168\u672c</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/","title":"FreeRTOS_Reference","text":"<p>2021\u5e7411\u670812\u65e5</p> <p>FreeRTOS\u53c2\u8003\u624b\u518c\u4e2d\u6587\u7248\u672c\uff0c\u6839\u636e\u5b98\u7f51v9.0.0\u82f1\u6587\u539f\u7248\u8bd1\u5236\uff0c\u4ec5\u4f9b\u53c2\u8003</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#1","title":"\u7ae0\u82821   \u5173\u4e8e\u672c\u624b\u518c","text":"<p>\u672c\u6587\u6863\u63d0\u4f9b\u4e86\u4e3b\u8981\u7684FreeRTOS API1\u548cFreeRTOS\u5185\u6838\u914d\u7f6e\u9009\u9879\u7684\u6280\u672f\u53c2\u8003\u3002\u672c\u6587\u5047\u8bbe\u8bfb\u8005\u5df2\u7ecf\u719f\u6089\u7f16\u5199\u591a\u4efb\u52a1\u5e94\u7528\u7a0b\u5e8f\u7684\u6982\u5ff5\uff0c\u4ee5\u53ca\u5b9e\u65f6\u5185\u6838\u63d0\u4f9b\u7684\u539f\u8bed\u3002\u5bf9\u4e8e\u4e0d\u719f\u6089\u8fd9\u4e9b\u57fa\u672c\u6982\u5ff5\u7684\u8bfb\u8005\uff0c\u5efa\u8bae\u9605\u8bfb\u300a\u4f7f\u7528FreeRTOS\u5b9e\u65f6\u5185\u6838\u2014\u5b9e\u7528\u6307\u5357\u300b\u8fd9\u672c\u4e66\uff0c\u5b83\u6709\u66f4\u591a\u63cf\u8ff0\u6027\u3001\u5b9e\u8df5\u6027\u548c\u6559\u7a0b\u98ce\u683c\u7684\u6587\u672c\u3002\u8fd9\u672c\u4e66\u53ef\u4ee5\u4ece http://www.FreeRTOS.org/Documentation\u83b7\u53d6\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_1","title":"\u51fd\u6570\u5728\u672c\u624b\u518c\u4e2d\u51fa\u73b0\u7684\u987a\u5e8f","text":"<p>\u5728\u672c\u6587\u6863\u4e2d\uff0cAPI\u51fd\u6570\u88ab\u5206\u4e3a5\u7ec4\u2014\u2014\u4e0e\u4efb\u52a1\u548c\u8c03\u5ea6\u7a0b\u5e8f\u76f8\u5173\u7684\u51fd\u6570\u3001\u4e0e\u961f\u5217\u76f8\u5173\u7684\u51fd\u6570\u3001\u4e0e\u4fe1\u53f7\u91cf\u76f8\u5173\u7684\u51fd\u6570\u3001\u4e0e\u8f6f\u4ef6\u8ba1\u65f6\u5668\u76f8\u5173\u7684\u51fd\u6570\u548c\u4e0e\u4e8b\u4ef6\u7ec4\u76f8\u5173\u7684\u51fd\u6570\u3002\u6bcf\u4e00\u7ec4\u90fd\u5728\u5176\u5404\u81ea\u7684\u7ae0\u8282\u4e2d\u8fdb\u884c\u4e86\u8bb0\u5f55\uff0c\u5e76\u4e14\u5728\u6bcf\u4e2a\u7ae0\u8282\u4e2d\uff0cAPI\u51fd\u6570\u90fd\u6309\u5b57\u6bcd\u987a\u5e8f\u5217\u51fa\u3002\u4f46\u662f\u8bf7\u6ce8\u610f\uff0c\u6bcf\u4e2aAPI\u51fd\u6570\u7684\u540d\u79f0\u524d\u9762\u90fd\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u5b57\u6bcd\uff0c\u8fd9\u4e9b\u5b57\u6bcd\u6307\u5b9a\u4e86\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\uff0c\u5e76\u4e14\u6bcf\u4e2a\u7ae0\u8282\u4e2dAPI\u51fd\u6570\u7684\u5b57\u6bcd\u987a\u5e8f\u5ffd\u7565\u4e86\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u524d\u7f00\u3002\u9644\u5f551:\u66f4\u8be6\u7ec6\u5730\u63cf\u8ff0\u4e86\u524d\u7f00\u3002</p> <p>\u4f8b\u5982\uff0c\u8003\u8651\u7528\u4e8e\u521b\u5efaFreeRTOS\u4efb\u52a1\u7684API\u51fd\u6570\u3002\u5b83\u7684\u540d\u79f0\u662fxTaskCreate()\u3002' x '\u524d\u7f00\u6307\u5b9axTaskCreate()\u8fd4\u56de\u4e00\u4e2a\u975e\u6807\u51c6\u7c7b\u578b\u3002\u6b21\u8981\u7684\u201c\u4efb\u52a1\u201d\u524d\u7f00\u6307\u5b9a\u8be5\u51fd\u6570\u662f\u4e00\u4e2a\u4e0e\u4efb\u52a1\u76f8\u5173\u7684\u51fd\u6570\uff0c\u56e0\u6b64\uff0c\u5c06\u5728\u5305\u542b\u4efb\u52a1\u548c\u8c03\u5ea6\u7a0b\u5e8f\u76f8\u5173\u51fd\u6570\u7684\u7ae0\u8282\u4e2d\u8fdb\u884c\u8bb0\u5f55\u3002' x '\u4e0d\u662f\u6309\u5b57\u6bcd\u987a\u5e8f\u8003\u8651\u7684\uff0c\u6240\u4ee5xTaskCreate()\u5c06\u51fa\u73b0\u5728\u4efb\u52a1\u548c\u8c03\u5ea6\u5668\u7ae0\u8282\u4e2d\uff0c\u5c31\u50cf\u5b83\u7684\u540d\u5b57\u53ea\u662fTaskCreate()\u4e00\u6837\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#api","title":"API\u4f7f\u7528\u9650\u5236","text":"<p>\u4ee5\u4e0b\u89c4\u5219\u9002\u7528\u4e8e\u4f7f\u7528FreeRTOS API:</p> <ol> <li>\u4e0d\u4ee5\u201cFromISR\u201d\u7ed3\u5c3e\u7684API\u51fd\u6570\u4e0d\u80fd\u7528\u4e8e\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b(ISR)\u3002\u4e00\u4e9bFreeRTOS\u6e2f\u53e3\u8fdb\u4e00\u6b65\u9650\u5236,\u5373\u4f7fAPI\u51fd\u6570,\u6700\u7ec8\u201cFromISR\u201d\u4e0d\u80fd\u7528\u4e8e\u4e00\u4e2a\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b(\u786c\u4ef6)\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u8bbe\u5b9a\u7684\u4f18\u5148\u7ea7configMAX_SYSCALL_INTERRUPT_PRIORITY(\u6216configMAX_API_CALL_INTERRUPT_PRIORITY,\u6839\u636e\u7aef\u53e3)\u5185\u6838\u914d\u7f6e\u4e0d\u53d8,\u5728\u672c\u6587\u6863\u76847.1\u8282\u4e2d\u6709\u63cf\u8ff0\u3002\u7b2c\u4e8c\u4e2a\u9650\u5236\u662f\u786e\u4fdd\u4f18\u5148\u7ea7\u9ad8\u4e8econfigMAX_SYSCALL_INTERRUPT_PRIORITY\u8bbe\u7f6e\u7684\u4e2d\u65ad\u7684\u65f6\u95f4\u3001\u786e\u5b9a\u6027\u548c\u5ef6\u8fdf\u4e0d\u53d7FreeRTOS\u7684\u5f71\u54cd\u3002</li> <li>\u5728\u6302\u8d77\u8c03\u5ea6\u5668\u65f6\uff0c\u7edd\u4e0d\u80fd\u8c03\u7528\u53ef\u80fd\u5bfc\u81f4\u4e0a\u4e0b\u6587\u5207\u6362\u7684API\u51fd\u6570\u3002</li> <li>\u53ef\u80fd\u5bfc\u81f4\u4e0a\u4e0b\u6587\u5207\u6362\u7684API\u51fd\u6570\u4e0d\u80fd\u5728\u4e34\u754c\u533a\u57df\u5185\u8c03\u7528\u3002</li> </ol>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#2","title":"\u7ae0\u82822   \u4efb\u52a1\u548c\u8c03\u5ea6\u5668","text":""},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#21-portswitch_to_user_mode","title":"2.1 portSWITCH_TO_USER_MODE()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d\n#include \u201ctask.h\u201d\n\nvoid portSWITCH_TO_USER_MODE( void );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_2","title":"\u6982\u8981","text":"<p>\u672c\u529f\u80fd\u4ec5\u4f9b\u9ad8\u7ea7\u7528\u6237\u4f7f\u7528\uff0c\u4ec5\u4e0eFreeRTOS MPU\u7aef\u53e3(\u4f7f\u7528\u5185\u5b58\u4fdd\u62a4\u5355\u5143\u7684FreeRTOS\u7aef\u53e3)\u76f8\u5173\u3002</p> <p>\u63d0\u4f9b\u7ed9xTaskCreateRestricted()\u7684\u53c2\u6570\u6307\u5b9a\u8981\u521b\u5efa\u7684\u4efb\u52a1\u5e94\u8be5\u662fUser(\u975e\u7279\u6743)\u6a21\u5f0f\u4efb\u52a1\u8fd8\u662fSupervisor(\u7279\u6743)\u6a21\u5f0f\u4efb\u52a1\u3002Supervisor\u6a21\u5f0f\u4efb\u52a1\u53ef\u4ee5\u8c03\u7528portSWITCH_TO_USER_MODE()\u5c06\u81ea\u5df1\u4eceSupervisor\u6a21\u5f0f\u4efb\u52a1\u8f6c\u6362\u4e3aUser\u6a21\u5f0f\u4efb\u52a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_3","title":"\u53c2\u6570","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_4","title":"\u8fd4\u56de\u503c","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_5","title":"\u63d0\u793a","text":"<p>\u4e0d\u5b58\u5728\u4e0eportSWITCH_TO_USER_MODE()\u7b49\u4ef7\u7684\u5bf9\u7b49\u9879\uff0c\u5141\u8bb8\u4efb\u52a1\u5c06\u81ea\u5df1\u4ece\u7528\u6237\u6a21\u5f0f\u8f6c\u6362\u4e3aSupervisor\u6a21\u5f0f\u4efb\u52a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#22-vtaskallocatempuregions","title":"2.2  vTaskAllocateMPURegions()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d\n#include \u201ctask.h\u201d\n\nvoid vTaskAllocateMPURegions( TaskHandle_t xTaskToModify,\n                               const MemoryRegion_t * const xRegions );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_6","title":"\u6982\u8981","text":"<p>\u5b9a\u4e49\u4e00\u7ec4\u5185\u5b58\u4fdd\u62a4\u5355\u5143(MPU)\u533a\u57df\uff0c\u4f9bMPU\u53d7\u9650\u4efb\u52a1\u4f7f\u7528\u3002</p> <p>\u672c\u529f\u80fd\u4ec5\u4f9b\u9ad8\u7ea7\u7528\u6237\u4f7f\u7528\uff0c\u4ec5\u4e0eFreeRTOS MPU\u7aef\u53e3(\u4f7f\u7528\u5185\u5b58\u4fdd\u62a4\u5355\u5143\u7684FreeRTOS\u7aef\u53e3)\u76f8\u5173\u3002</p> <p>\u5f53\u4f7f\u7528xTaskCreateRestricted()\u51fd\u6570\u521b\u5efa\u4efb\u52a1\u65f6\uff0c\u53ef\u4ee5\u5c06MPU\u63a7\u5236\u7684\u5185\u5b58\u533a\u57df\u5206\u914d\u7ed9MPU\u53d7\u9650\u4efb\u52a1\u3002\u7136\u540e\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u4f7f\u7528vTaskAllocateMPURegions()\u51fd\u6570\u91cd\u65b0\u5b9a\u4e49(\u6216\u91cd\u65b0\u5206\u914d)\u5b83\u4eec\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_7","title":"\u53c2\u6570","text":"<p>xTaskToModify </p> <ul> <li>\u88ab\u4fee\u6539\u7684\u53d7\u9650\u4efb\u52a1\u7684\u53e5\u67c4(\u88ab\u8d4b\u4e88\u8bbf\u95ee\u7531xRegions\u53c2\u6570\u5b9a\u4e49\u7684\u5185\u5b58\u533a\u57df\u7684\u4efb\u52a1)\u3002</li> <li>\u4efb\u52a1\u7684\u53e5\u67c4\u662f\u901a\u8fc7xTaskCreateRestricted() API\u51fd\u6570\u7684pxCreatedTask\u53c2\u6570\u83b7\u5f97\u7684\u3002</li> <li>\u4efb\u52a1\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012NULL\u6765\u4ee3\u66ff\u6709\u6548\u7684\u4efb\u52a1\u53e5\u67c4\u6765\u4fee\u6539\u81ea\u5df1\u7684\u5185\u5b58\u533a\u57df\u8bbf\u95ee\u5b9a\u4e49\u3002</li> </ul> <p>xRegions</p> <ul> <li>MemoryRegion_t\u7ed3\u6784\u7684\u6570\u7ec4\u3002\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u6570\u7531\u7aef\u53e3\u7279\u5b9a\u7684portNUM_CONFIGURABLE_REGIONS\u5e38\u91cf\u5b9a\u4e49\u3002\u5728Cortex-M3\u4e0a\uff0cportNUM_CONFIGURABLE_REGIONS\u88ab\u5b9a\u4e49\u4e3a3\u3002</li> <li>\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2aMemoryRegion_t\u7ed3\u6784\u90fd\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5355\u72ec\u7684MPU\u5185\u5b58\u533a\u57df\uff0c\u4f9bxTaskToModify\u53c2\u6570\u5f15\u7528\u7684\u4efb\u52a1\u4f7f\u7528\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_8","title":"\u8fd4\u56de\u503c","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_9","title":"\u63d0\u793a","text":"<p>MPU\u5185\u5b58\u533a\u57df\u662f\u4f7f\u7528\u6240\u793a\u7684MemoryRegion_t\u7ed3\u6784\u5b9a\u4e49\u7684\u3002</p> <pre><code>typedef struct xMEMORY_REGION\n{\n    void *pvBaseAddress;\n    unsigned long ulLengthInBytes;\n    unsigned long ulParameters;\n} MemoryRegion_t;\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#23-xtaskabortdelay","title":"2.3 xTaskAbortDelay()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d\n#include \u201ctask.h\u201d\n\nBaseType_t xTaskAbortDelay( TaskHandle_t xTask );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_10","title":"\u6982\u8981","text":"<p>\u8c03\u7528\u5305\u542b\u8d85\u65f6\u53c2\u6570\u7684API\u51fd\u6570\u53ef\u80fd\u5bfc\u81f4\u8c03\u7528\u4efb\u52a1\u8fdb\u5165Blocked\u72b6\u6001\u3002\u5904\u4e8eBlocked\u72b6\u6001\u7684\u4efb\u52a1\u8981\u4e48\u7b49\u5f85\u8d85\u65f6\u65f6\u95f4\uff0c\u8981\u4e48\u7b49\u5f85\u8d85\u65f6\u4e8b\u4ef6\u53d1\u751f\uff0c\u4e8b\u4ef6\u53d1\u751f\u540e\u4efb\u52a1\u5c06\u81ea\u52a8\u79bb\u5f00Blocked\u72b6\u6001\uff0c\u8fdb\u5165Ready\u72b6\u6001\u3002\u8fd9\u79cd\u884c\u4e3a\u6709\u5f88\u591a\u4f8b\u5b50\uff0c\u5176\u4e2d\u4e24\u4e2a\u662f:</p> <ul> <li>\u5982\u679c\u4efb\u52a1\u8c03\u7528vTaskDelay()\uff0c\u5b83\u5c06\u8fdb\u5165Blocked\u72b6\u6001\uff0c\u76f4\u5230\u51fd\u6570\u53c2\u6570\u6307\u5b9a\u7684\u8d85\u65f6\u65f6\u95f4\u8fc7\u53bb\uff0c\u6b64\u65f6\u4efb\u52a1\u5c06\u81ea\u52a8\u79bb\u5f00Blocked\u72b6\u6001\u5e76\u8fdb\u5165Ready\u72b6\u6001\u3002</li> <li>\u5982\u679c\u4e00\u4e2a\u4efb\u52a1\u8c03\u7528ulTaskNotifyTake()\u65f6\u901a\u77e5\u503c\u4e3a\u96f6\u5c06\u8fdb\u5165\u963b\u585e\u72b6\u6001,\u76f4\u5230\u5b83\u6536\u5230\u4e00\u4e2a\u901a\u77e5\u6216\u4e00\u4e2a\u51fd\u6570\u7684\u53c2\u6570\u6240\u6307\u5b9a\u7684\u8d85\u65f6\u8fd0\u884c,\u5728\u8fd9\u6bb5\u65f6\u95f4\u7684\u4efb\u52a1\u5c06\u81ea\u52a8\u79bb\u5f00\u963b\u585e\u72b6\u6001,\u8fdb\u5165\u5c31\u7eea\u72b6\u6001\u3002</li> </ul> <p>xTaskAbortDelay()\u5c06\u4efb\u52a1\u4eceBlocked\u72b6\u6001\u79fb\u52a8\u5230Ready\u72b6\u6001\uff0c\u5373\u4f7f\u4efb\u52a1\u6b63\u5728\u7b49\u5f85\u7684\u4e8b\u4ef6\u6ca1\u6709\u53d1\u751f\uff0c\u5e76\u4e14\u4efb\u52a1\u8fdb\u5165Blocked\u72b6\u6001\u65f6\u6307\u5b9a\u7684\u8d85\u65f6\u65f6\u95f4\u8fd8\u6ca1\u6709\u8fc7\u53bb\u3002</p> <p>\u5f53\u4efb\u52a1\u5904\u4e8eBlocked\u72b6\u6001\u65f6\uff0c\u5b83\u5bf9\u8c03\u5ea6\u7a0b\u5e8f\u4e0d\u53ef\u7528\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5360\u7528\u4efb\u4f55\u5904\u7406\u65f6\u95f4\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_11","title":"\u53c2\u6570","text":"<p>xTask</p> <ul> <li>\u5c06\u4eceBlocked\u72b6\u6001\u79fb\u51fa\u7684\u4efb\u52a1\u7684\u53e5\u67c4\u3002</li> <li>\u8981\u83b7\u5f97\u4efb\u52a1\u7684\u53e5\u67c4\uff0c\u4f7f\u7528xTaskCreate()\u521b\u5efa\u4efb\u52a1\u5e76\u4f7f\u7528pxCreatedTask\u53c2\u6570\uff0c\u6216\u8005\u4f7f\u7528xTaskCreateStatic()\u521b\u5efa\u4efb\u52a1\u5e76\u5b58\u50a8\u8fd4\u56de\u503c\uff0c\u6216\u8005\u5728\u8c03\u7528xTaskGetHandle()\u65f6\u4f7f\u7528\u4efb\u52a1\u7684\u540d\u79f0\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_12","title":"\u8fd4\u56de\u503c","text":"<p>\u5982\u679cxTask\u5f15\u7528\u7684\u4efb\u52a1\u4eceBlocked\u72b6\u6001\u4e2d\u79fb\u9664\uff0c\u5219\u8fd4\u56depdPASS\u3002\u5982\u679cxTask\u5f15\u7528\u7684\u4efb\u52a1\u6ca1\u6709\u4eceBlocked\u72b6\u6001\u4e2d\u5220\u9664\uff0c\u56e0\u4e3a\u5b83\u4e0d\u662f\u5904\u4e8eBlocked\u72b6\u6001\uff0c\u5219\u8fd4\u56depdFAIL\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_13","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86xTaskAbortDelay()\u53ef\u7528\uff0c\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u5c06INCLUDE_xTaskAbortDelay\u8bbe\u7f6e\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_14","title":"\u793a\u4f8b","text":"<pre><code>void vAFunction( TaskHandle_t xTask )\n{\n/* The task referenced by xTask is blocked to wait for something that the task calling\nthis function has determined will never happen. Force the task referenced by xTask\nout of the Blocked state. */\n    if( xTaskAbortDelay( xTask ) == pdFAIL )\n    {\n        /* The task referenced by xTask was not in the Blocked state anyway. */\n    }\n    else\n    {\n        /* The task referenced by xTask was in the Blocked state, but is not now. */\n    }\n}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#24-xtaskcallapplicationtaskhook","title":"2.4 xTaskCallApplicationTaskHook()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d\n#include \u201ctask.h\u201d\n\nBaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameters );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_15","title":"\u6982\u8981","text":"<p>\u672c\u529f\u80fd\u4ec5\u4f9b\u9ad8\u7ea7\u7528\u6237\u4f7f\u7528\u3002</p> <p>\u6807\u8bb0\u503c\u7684\u542b\u4e49\u548c\u4f7f\u7528\u7531\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u4eba\u5458\u5b9a\u4e49\u3002\u5185\u6838\u672c\u8eab\u901a\u5e38\u4e0d\u4f1a\u8bbf\u95ee\u6807\u8bb0\u503c\u3002</p> <p>\u4f5c\u4e3a\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u6807\u7b7e\u503c\u53ef\u4ee5\u7528\u6765\u5173\u8054\u4e00\u4e2a\u4efb\u52a1\u6302\u94a9(\u6216\u56de\u8c03)\u51fd\u6570\u5230\u4e00\u4e2a\u4efb\u52a1\u3002\u5f53\u6b64\u64cd\u4f5c\u5b8c\u6210\u65f6\uff0c\u94a9\u5b50\u51fd\u6570\u5c06\u4f7f\u7528xTaskCallApplicationTaskHook()\u8c03\u7528\u3002</p> <p>\u4efb\u52a1\u94a9\u5b50\u51fd\u6570\u53ef\u4ee5\u7528\u4e8e\u4efb\u4f55\u76ee\u7684\u3002\u672c\u8282\u4e2d\u5c55\u793a\u7684\u793a\u4f8b\u6f14\u793a\u4e86\u4e00\u4e2a\u7528\u4e8e\u8f93\u51fa\u8c03\u8bd5\u8ddf\u8e2a\u4fe1\u606f\u7684\u4efb\u52a1\u94a9\u5b50\u3002</p> <p>\u4efb\u52a1\u94a9\u5b50\u51fd\u6570\u5fc5\u987b\u6709\u539f\u578b\u5982\u4e0b\uff1a</p> <pre><code>BaseType_t xAnExampleTaskHookFunction( void *pvParameters );\n</code></pre> <p>xTaskCallApplicationTaskHook()\u4ec5\u5f53configUSE_APPLICATION_TASK_TAG\u5728FreeRTOSConfig.h\u4e2d\u8bbe\u7f6e\u4e3a1\u65f6\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_16","title":"\u53c2\u6570","text":"<p>xTask</p> <ul> <li>The handle of the task whose associated hook function is being called.</li> <li>\u8981\u83b7\u5f97\u4efb\u52a1\u7684\u53e5\u67c4\uff0c\u4f7f\u7528xTaskCreate()\u521b\u5efa\u4efb\u52a1\u5e76\u4f7f\u7528pxCreatedTask\u53c2\u6570\uff0c\u6216\u8005\u4f7f\u7528xTaskCreateStatic()\u521b\u5efa\u4efb\u52a1\u5e76\u5b58\u50a8\u8fd4\u56de\u503c\uff0c\u6216\u8005\u5728\u8c03\u7528\u4e2d\u4f7f\u7528\u4efb\u52a1\u7684\u540d\u79f0xTaskGetHandle().</li> <li>\u4efb\u52a1\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012NULL\u6765\u4ee3\u66ff\u6709\u6548\u7684\u4efb\u52a1\u53e5\u67c4\u6765\u8c03\u7528\u81ea\u5df1\u7684\u94a9\u5b50\u51fd\u6570\u3002</li> </ul> <p>pvParameters</p> <ul> <li>\u4f5c\u4e3a\u4efb\u52a1\u94a9\u5b50\u51fd\u6570\u672c\u8eab\u7684\u5f62\u53c2\u7684\u503c\u3002</li> <li>\u8be5\u5f62\u53c2\u7684\u7c7b\u578b\u4e3a\u201cvoid\u6307\u9488\u201d\uff0c\u5141\u8bb8\u4efb\u52a1\u94a9\u5b50\u51fd\u6570\u5f62\u53c2\u6709\u6548\u5730\u3001\u95f4\u63a5\u5730\u901a\u8fc7\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u63a5\u6536\u4efb\u4f55\u7c7b\u578b\u7684\u5f62\u53c2\u3002\u4f8b\u5982\uff0c\u6574\u6570\u7c7b\u578b\u53ef\u4ee5\u901a\u8fc7\u5728\u8c03\u7528\u94a9\u5b50\u51fd\u6570\u65f6\u5c06\u6574\u578b\u8f6c\u6362\u4e3avoid\u6307\u9488\uff0c\u7136\u540e\u5728\u94a9\u5b50\u51fd\u6570\u5185\u90e8\u5c06void\u6307\u9488\u5f62\u53c2\u8f6c\u6362\u56de\u6574\u578b\u6765\u4f20\u9012\u7ed9\u94a9\u5b50\u51fd\u6570\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_17","title":"\u793a\u4f8b","text":"<pre><code>/* Define a hook (callback) function \u2013 using the required prototype as\ndemonstrated by Listing 8 */\nstatic BaseType_t prvExampleTaskHook( void * pvParameter )\n{\n/* Perform an action - this could be anything. In this example the hook\nis used to output debug trace information. pxCurrentTCB is the handle\nof the currently executing task. (vWriteTrace() is not an API function,\nits just used as an example.) */\nvWriteTrace( pxCurrentTCB );\n/* This example does not make use of the hook return value so just returns\n0 in every case. */\nreturn 0;\n}\n/* Define an example task that makes use of its tag value. */\nvoid vAnotherTask( void *pvParameters )\n{\n/* vTaskSetApplicationTaskTag() sets the \u2018tag\u2019 value associated with a task.\nNULL is used in place of a valid task handle to indicate that it should be\nthe tag value of the calling task that gets set. In this example the \u2018value\u2019\nbeing set is the hook function. */\nvTaskSetApplicationTaskTag( NULL, prvExampleTaskHook );\nfor( ;; )\n{\n/* The rest of the task code goes here. */\n}\n}\n/* Define the traceTASK_SWITCHED_OUT() macro to call the hook function of each\ntask that is switched out. pxCurrentTCB points to the handle of the currently\nrunning task. */\n#define traceTASK_SWITCHED_OUT() xTaskCallApplicationTaskHook( pxCurrentTCB, 0 )\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#25-xtaskcheckfortimeout","title":"2.5 xTaskCheckForTimeOut()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dBaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut,                                 TickType_t * const pxTicksToWait );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_18","title":"\u6982\u8981","text":"<p>\u672c\u529f\u80fd\u4ec5\u4f9b\u9ad8\u7ea7\u7528\u6237\u4f7f\u7528\u3002</p> <p>\u4efb\u52a1\u53ef\u4ee5\u8fdb\u5165\u201cBlocked\u201d\u72b6\u6001\uff0c\u7b49\u5f85\u4e8b\u4ef6\u53d1\u751f\u3002\u901a\u5e38\uff0c\u4efb\u52a1\u4e0d\u4f1a\u5728Blocked\u72b6\u6001\u4e0b\u65e0\u9650\u671f\u7b49\u5f85\uff0c\u800c\u662f\u6307\u5b9a\u4e00\u4e2a\u8d85\u65f6\u65f6\u95f4\u3002\u5982\u679c\u5728\u4efb\u52a1\u7b49\u5f85\u7684\u4e8b\u4ef6\u53d1\u751f\u4e4b\u524d\u8d85\u65f6\uff0c\u5219\u4efb\u52a1\u5c06\u4ece\u963b\u585e\u72b6\u6001\u4e2d\u79fb\u9664\u3002</p> <p>\u5982\u679c\u4e00\u4e2a\u4efb\u52a1\u8fdb\u5165\u548c\u9000\u51fa\u963b\u585e\u72b6\u6001\u65f6\u4e0d\u6b62\u4e00\u6b21\u7b49\u5f85\u4e8b\u4ef6\u53d1\u751f,\u90a3\u4e48\u6bcf\u4e00\u6b21\u4f7f\u7528\u7684\u8d85\u65f6\u4efb\u52a1\u8fdb\u5165\u963b\u585e\u72b6\u6001\u5fc5\u987b\u8fdb\u884c\u8c03\u6574,\u4ee5\u786e\u4fdd\u6240\u6709\u963b\u585e\u72b6\u6001\u7684\u65f6\u95f4\u4e0d\u8d85\u8fc7\u539f\u6307\u5b9a\u7684\u8d85\u65f6\u65f6\u95f4\u3002xTaskCheckForTimeOut()\u6267\u884c\u8c03\u6574\uff0c\u8003\u8651\u5230\u5076\u5c14\u53d1\u751f\u7684\u60c5\u51b5\uff0c\u5982tick\u8ba1\u6570\u6ea2\u51fa\uff0c\u5426\u5219\u624b\u52a8\u8c03\u6574\u5bb9\u6613\u51fa\u9519\u3002</p> <p>xTaskCheckForTimeOut()\u4e0evTaskSetTimeOutState()\u4e00\u8d77\u4f7f\u7528\u3002\u8c03\u7528vTaskSetTimeOutState()\u6765\u8bbe\u7f6e\u521d\u59cb\u6761\u4ef6\uff0c\u4e4b\u540e\u53ef\u4ee5\u8c03\u7528xTaskCheckForTimeOut()\u6765\u68c0\u67e5\u8d85\u65f6\u6761\u4ef6\uff0c\u5982\u679c\u6ca1\u6709\u8d85\u65f6\u5219\u8c03\u6574\u5269\u4f59\u7684\u5757\u65f6\u95f4\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_19","title":"\u53c2\u6570","text":"<p>pxTimeOut</p> <ul> <li>\u4e00\u79cd\u6307\u5411\u7ed3\u6784\u7684\u6307\u9488\uff0c\u8be5\u7ed3\u6784\u5305\u542b\u786e\u5b9a\u662f\u5426\u53d1\u751f\u8d85\u65f6\u6240\u5fc5\u9700\u7684\u4fe1\u606f\u3002pxTimeOut\u4f7f\u7528vTaskSetTimeOutState()\u521d\u59cb\u5316\u3002</li> </ul> <p>pxTicksToWait</p> <ul> <li>\u7528\u4e8e\u4f20\u9012\u8c03\u6574\u540e\u7684\u5757\u65f6\u95f4\uff0c\u8fd9\u662f\u5728\u8003\u8651\u4e86\u5df2\u82b1\u8d39\u5728Blocked\u72b6\u6001\u4e2d\u7684\u65f6\u95f4\u540e\u5269\u4f59\u7684\u5757\u65f6\u95f4\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_20","title":"\u8fd4\u56de\u503c","text":"<p>\u5982\u679c\u8fd4\u56depdTRUE\uff0c\u5219\u6ca1\u6709\u5269\u4f59\u7684\u5757\u65f6\u95f4\uff0c\u5e76\u4e14\u53d1\u751f\u4e86\u8d85\u65f6\u3002</p> <p>\u5982\u679c\u8fd4\u56depdFALSE\uff0c\u5219\u8fd8\u5269\u4e0b\u4e00\u4e9b\u5757\u65f6\u95f4\uff0c\u56e0\u6b64\u6ca1\u6709\u53d1\u751f\u8d85\u65f6\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_21","title":"\u793a\u4f8b","text":"<pre><code>/* Driver library function used to receive uxWantedBytes from an Rx buffer that is filled by a UART interrupt. If there are not enough bytes in the Rx buffer then the task enters the Blocked state until it is notified that more data has been placed into the buffer. If there is still not enough data then the task re-enters the Blocked state, and xTaskCheckForTimeOut() is used to re-calculate the Block time to ensure the total amount of time spent in the Blocked state does not exceed MAX_TIME_TO_WAIT. This continues until either the buffer contains at least uxWantedBytes bytes, or the total amount of time spent in the Blocked state reaches MAX_TIME_TO_WAIT \u2013 at which point the task reads however many bytes are available up to a maximum of uxWantedBytes. */size_t xUART_Receive( uint8_t *pucBuffer, size_t uxWantedBytes ){    size_t uxReceived = 0;    TickType_t xTicksToWait = MAX_TIME_TO_WAIT;    TimeOut_t xTimeOut;    /* Initialize xTimeOut. This records the time at which this function was entered. */    vTaskSetTimeOutState( &amp;xTimeOut );    /* Loop until the buffer contains the wanted number of bytes, or a timeout occurs. */    while( UART_bytes_in_rx_buffer( pxUARTInstance ) &lt; uxWantedBytes )    {    /* The buffer didn\u2019t contain enough data so this task is going to enter the Blockedstate. Adjusting xTicksToWait to account for any time that has been spent in theBlocked state within this function so far to ensure the total amount of time spentin the Blocked state does not exceed MAX_TIME_TO_WAIT. */        if( xTaskCheckForTimeOut( &amp;xTimeOut, &amp;xTicksToWait ) != pdFALSE )        {        /* Timed out before the wanted number of bytes were available, exit the loop. */            break;        }        /* Wait for a maximum of xTicksToWait ticks to be notified that the receiveinterrupt has placed more data into the buffer. */            ulTaskNotifyTake( pdTRUE, xTicksToWait );    }    /* Attempt to read uxWantedBytes from the receive buffer into pucBuffer. The actualnumber of bytes read (which might be less than uxWantedBytes) is returned. */    uxReceived = UART_read_from_receive_buffer( pxUARTInstance, pucBuffer, uxWantedBytes    );    return uxReceived;}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#26-xtaskcreate","title":"2.6 xTaskCreate()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dBaseType_t xTaskCreate( TaskFunction_t pvTaskCode,                        const char * const pcName,                        unsigned short usStackDepth,                        void *pvParameters,                        UBaseType_t uxPriority,                        TaskHandle_t *pxCreatedTask );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_22","title":"\u6982\u8981","text":"<p>\u521b\u5efa\u4efb\u52a1\u7684\u65b0\u5b9e\u4f8b\u3002</p> <p>\u6bcf\u4e2a\u4efb\u52a1\u90fd\u9700\u8981\u7528\u4e8e\u4fdd\u5b58\u4efb\u52a1\u72b6\u6001(\u4efb\u52a1\u63a7\u5236\u5757\uff0c\u6216TCB)\u7684RAM\uff0c\u5e76\u88ab\u4efb\u52a1\u7528\u4f5c\u5176\u5806\u6808\u3002\u5982\u679c\u4f7f\u7528xTaskCreate()\u521b\u5efa\u4efb\u52a1\uff0c\u5219\u4eceFreeRTOS\u5806\u4e2d\u81ea\u52a8\u5206\u914d\u6240\u9700\u7684RAM\u3002\u5982\u679c\u4f7f\u7528xTaskCreateStatic()\u521b\u5efa\u4efb\u52a1\uff0c\u90a3\u4e48\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u5c06\u63d0\u4f9bRAM\uff0c\u8fd9\u5c06\u5bfc\u81f4\u4e24\u4e2a\u989d\u5916\u7684\u51fd\u6570\u53c2\u6570\uff0c\u4f46\u5141\u8bb8\u5728\u7f16\u8bd1\u65f6\u9759\u6001\u5206\u914dRAM\u3002</p> <p>\u65b0\u521b\u5efa\u7684\u4efb\u52a1\u6700\u521d\u5904\u4e8e\u5c31\u7eea\u72b6\u6001\uff0c\u4f46\u5982\u679c\u6ca1\u6709\u80fd\u591f\u8fd0\u884c\u7684\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\uff0c\u5219\u4f1a\u7acb\u5373\u53d8\u4e3a\u8fd0\u884c\u72b6\u6001\u4efb\u52a1\u3002</p> <p>\u53ef\u4ee5\u5728\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u4e4b\u524d\u548c\u4e4b\u540e\u521b\u5efa\u4efb\u52a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_23","title":"\u53c2\u6570","text":"<p>pvTaskCode</p> <ul> <li>pvTaskCode\u53c2\u6570\u53ea\u662f\u4e00\u4e2a\u6307\u5411\u5b9e\u73b0\u4efb\u52a1\u7684\u51fd\u6570(\u5b9e\u9645\u4e0a\u53ea\u662f\u51fd\u6570\u540d)\u7684\u6307\u9488\u3002</li> </ul> <p>pcName</p> <ul> <li>\u8fd9\u4e3b\u8981\u7528\u4e8e\u65b9\u4fbf\u8c03\u8bd5\uff0c\u4f46\u4e5f\u53ef\u4ee5\u5728\u8c03\u7528xTaskGetHandle()\u4e2d\u4f7f\u7528\uff0c\u4ee5\u83b7\u5f97\u4efb\u52a1\u53e5\u67c4\u3002</li> <li>\u5e94\u7528\u7a0b\u5e8f\u5b9a\u4e49\u7684\u5e38\u91cfconfigMAX_TASK_NAME_LEN\u5b9a\u4e49\u4e86\u540d\u79f0\u7684\u6700\u5927\u5b57\u7b26\u957f\u5ea6\u2014\u2014\u5305\u62ecNULL\u7ed3\u675f\u7b26\u3002\u63d0\u4f9b\u4e00\u4e2a\u8d85\u8fc7\u8fd9\u4e2a\u6700\u5927\u503c\u7684\u5b57\u7b26\u4e32\u5c06\u5bfc\u81f4\u8be5\u5b57\u7b26\u4e32\u88ab\u622a\u65ad\u3002</li> </ul> <p>usStackDepth</p> <ul> <li> <p>usStackDepth\u503c\u544a\u8bc9\u5185\u6838\u5806\u6808\u7684\u5927\u5c0f\u3002</p> </li> <li> <p>\u4f8b\u5982\uff0c\u5728\u4e00\u4e2a4\u5b57\u8282\u5806\u6808\u5bbd\u5ea6\u7684\u67b6\u6784\u4e0a\uff0c\u5982\u679cusStackDepth\u4ee5100\u4f20\u5165\uff0c\u90a3\u4e48\u5c06\u5206\u914d400\u5b57\u8282\u7684\u5806\u6808\u7a7a\u95f4(100 * 4\u5b57\u8282)\u3002\u5806\u6808\u6df1\u5ea6\u4e58\u4ee5\u5806\u6808\u5bbd\u5ea6\u4e0d\u80fd\u8d85\u8fc7size_t\u7c7b\u578b\u7684\u53d8\u91cf\u6240\u80fd\u5305\u542b\u7684\u6700\u5927\u503c\u3002</p> </li> </ul> <p>\u8bd1\u8005\u6ce8\uff1a\u4f20\u5165\u53c2\u6570\u7684\u503c\u662f\u5b57\u6570\uff0c\u800c\u975e\u5b57\u8282\u6570\uff0c\u5b9e\u9645\u5b57\u8282\u6570\u548c\u5904\u7406\u5668\u4f4d\u5bbd\u76f8\u5173\u3002</p> <ul> <li>\u5728\u6f14\u793a\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u4e3a\u6240\u9009\u5fae\u63a7\u5236\u5668\u67b6\u6784\u63d0\u4f9b\u7684\u8d4b\u503c\u4e3a\u8be5\u67b6\u6784\u4e0a\u7684\u4efb\u4f55\u4efb\u52a1\u7684\u6700\u5c0f\u63a8\u8350\u503c\u3002\u5982\u679c\u60a8\u7684\u4efb\u52a1\u4f7f\u7528\u4e86\u5927\u91cf\u7684\u5806\u6808\u7a7a\u95f4\uff0c\u90a3\u4e48\u60a8\u5fc5\u987b\u5206\u914d\u4e00\u4e2a\u66f4\u5927\u7684\u503c\u3002</li> </ul> <p>pvParameters</p> <ul> <li>\u4efb\u52a1\u51fd\u6570\u63a5\u53d7void\u6307\u9488\u7c7b\u578b\u7684\u5f62\u53c2(void*)\u3002\u8d4b\u7ed9pvParameters\u7684\u503c\u5c06\u662f\u4f20\u9012\u7ed9\u4efb\u52a1\u7684\u503c\u3002</li> <li>\u8be5\u53c2\u6570\u7684\u7c7b\u578b\u4e3a\u201cvoid\u6307\u9488\u201d\uff0c\u5141\u8bb8\u4efb\u52a1\u53c2\u6570\u6709\u6548\u5730\u3001\u95f4\u63a5\u5730\u901a\u8fc7\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u63a5\u6536\u4efb\u4f55\u7c7b\u578b\u7684\u53c2\u6570\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u4efb\u52a1\u521b\u5efa\u70b9\u5c06\u6574\u578b\u8f6c\u6362\u4e3a\u7a7a\u6307\u9488\uff0c\u7136\u540e\u5728\u4efb\u52a1\u51fd\u6570\u5b9a\u4e49\u672c\u8eab\u5c06\u7a7a\u6307\u9488\u5f62\u53c2\u8f6c\u6362\u56de\u6574\u578b\uff0c\u5c06\u6574\u578b\u7c7b\u578b\u4f20\u9012\u7ed9\u4efb\u52a1\u51fd\u6570\u3002</li> </ul> <p>uxPriority</p> <ul> <li>\u5b9a\u4e49\u4efb\u52a1\u5c06\u6267\u884c\u7684\u4f18\u5148\u7ea7\u3002\u4f18\u5148\u7ea7\u53ef\u4ee5\u4ece0(\u6700\u4f4e\u4f18\u5148\u7ea7)\u5206\u914d\u5230(configMAX_PRIORITIES - 1)(\u6700\u9ad8\u4f18\u5148\u7ea7)\u3002</li> </ul> <p>\u8bd1\u8005\u6ce8\uff1aFreeRTOS\u4efb\u52a1\u6700\u9ad8\u4f18\u5148\u7ea7\u662f0\uff0c\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\u4efb\u52a1\u6700\u4f4e\u4f18\u5148\u7ea7\u662f0\uff0c\u8fd9\u70b9\u9700\u8981\u7279\u522b\u6ce8\u610f\u3002</p> <ul> <li> <p>configMAX_PRIORITIES\u662f\u4e00\u4e2a\u7528\u6237\u5b9a\u4e49\u7684\u5e38\u91cf\u3002\u5982\u679cconfigUSE_PORT_OPTIMISED_TASK_SELECTION\u8bbe\u7f6e\u4e3a0,\u90a3\u4e48\u4f18\u5148\u7684\u6570\u91cf\u6ca1\u6709\u4e0a\u9650,\u53ef\u4ee5\u4f7f\u7528\u7684\u9650\u5236(\u9664\u4e86\u6570\u636e\u7c7b\u578b\u548c\u53ef\u7528\u7684RAM\u5355\u7247\u673a\u4f7f\u7528),\u4f46\u5efa\u8bae\u4f7f\u7528\u6240\u9700\u7684\u6700\u4f4e\u6570\u91cf\u7684\u4f18\u5148\u7ea7,\u4ee5\u907f\u514d\u6d6a\u8d39\u5185\u5b58\u3002 </p> </li> <li> <p>\u4f20\u9012\u4ee5\u4e0a\u7684uxPriority\u503c(configMAX_PRIORITIES - 1)\u5c06\u5bfc\u81f4\u5206\u914d\u7ed9\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u88ab\u9759\u9ed8\u5730\u4e0a\u9650\u4e3a\u6700\u5927\u5408\u6cd5\u503c</p> </li> </ul> <p>pxCreatedTask</p> <ul> <li>pxCreatedTask\u53ef\u7528\u4e8e\u5c06\u53e5\u67c4\u4f20\u9012\u7ed9\u6b63\u5728\u521b\u5efa\u7684\u4efb\u52a1\u3002\u8fd9\u4e2a\u53e5\u67c4\u53ef\u7528\u4e8e\u5728API\u8c03\u7528\u4e2d\u5f15\u7528\u4efb\u52a1\uff0c\u4f8b\u5982\uff0c\u66f4\u6539\u4efb\u52a1\u4f18\u5148\u7ea7\u6216\u5220\u9664\u4efb\u52a1\u3002</li> <li>\u5982\u679c\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0d\u4f7f\u7528\u4efb\u52a1\u53e5\u67c4\uff0c\u90a3\u4e48pxCreatedTask\u53ef\u4ee5\u8bbe\u7f6e\u4e3aNULL\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_24","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS \u8868\u793a\u4efb\u52a1\u521b\u5efa\u6210\u529f\u3002</p> <p>errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY\u6307\u793a\u65e0\u6cd5\u521b\u5efa\u4efb\u52a1\uff0c\u56e0\u4e3a\u6ca1\u6709\u8db3\u591f\u7684\u5806\u5185\u5b58\u4f9bFreeRTOS\u5206\u914d\u4efb\u52a1\u6570\u636e\u7ed3\u6784\u548c\u5806\u6808\u3002</p> <p>\u5982\u679cheap_1.c, heap_2.c\u6216heap_4.c\u88ab\u5305\u542b\u5728\u9879\u76ee\u4e2d\uff0c\u90a3\u4e48\u5806\u53ef\u7528\u7684\u603b\u6570\u91cf\u662f\u7531FreeRTOSConfig.h\u4e2d\u7684configTOTAL_HEAP_SIZE\u5b9a\u4e49\u7684\uff0c\u5e76\u4e14\u5206\u914d\u5185\u5b58\u5931\u8d25\u53ef\u4ee5\u4f7f\u7528vApplicationMallocFailedHook()\u56de\u8c03(\u6216' hook ')\u51fd\u6570\u6355\u83b7\uff0c\u5269\u4f59\u7684\u7a7a\u95f2\u5806\u5185\u5b58\u6570\u91cf\u53ef\u4ee5\u4f7f\u7528xPortGetFreeHeapSize() API\u51fd\u6570\u67e5\u8be2\u3002</p> <p>\u5982\u679c\u9879\u76ee\u4e2d\u5305\u542bheap_3.c\uff0c\u90a3\u4e48\u603b\u5806\u5927\u5c0f\u662f\u7531\u8fde\u63a5\u5668\u914d\u7f6e\u5b9a\u4e49\u7684\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_25","title":"\u63d0\u793a","text":"<p>configSUPPORT_DYNAMIC_ALLOCATION\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u8bbe\u7f6e\u4e3a1\uff0c\u6216\u8005\u4e0d\u8bbe\u7f6e\u4e3a\u672a\u5b9a\u4e49\uff0c\u4ee5\u4f7f\u8be5\u51fd\u6570\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#27-xtaskcreatestatic","title":"2.7 xTaskCreateStatic()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dTaskHandle_t xTaskCreateStatic( TaskFunction_t pvTaskCode,                                const char * const pcName,                                uint32_t ulStackDepth,                                void *pvParameters,                                UBaseType_t uxPriority,                                StackType_t * const puxStackBuffer,                                StaticTask_t * const pxTaskBuffer );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_26","title":"\u6982\u8981","text":"<p>\u521b\u5efa\u4efb\u52a1\u7684\u65b0\u5b9e\u4f8b.</p> <p>\u6bcf\u4e2a\u4efb\u52a1\u90fd\u9700\u8981\u7528\u4e8e\u4fdd\u5b58\u4efb\u52a1\u72b6\u6001(\u4efb\u52a1\u63a7\u5236\u5757\uff0c\u6216TCB)\u7684RAM\uff0c\u5e76\u88ab\u4efb\u52a1\u7528\u4f5c\u5176\u5806\u6808\u3002\u5982\u679c\u4f7f\u7528xTaskCreate()\u521b\u5efa\u4efb\u52a1\uff0c\u5219\u4eceFreeRTOS\u5806\u4e2d\u81ea\u52a8\u5206\u914d\u6240\u9700\u7684RAM\u3002\u5982\u679c\u4f7f\u7528xTaskCreateStatic()\u521b\u5efa\u4efb\u52a1\uff0c\u90a3\u4e48\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u5c06\u63d0\u4f9bRAM\uff0c\u8fd9\u5c06\u5bfc\u81f4\u4e24\u4e2a\u989d\u5916\u7684\u51fd\u6570\u53c2\u6570\uff0c\u4f46\u5141\u8bb8\u5728\u7f16\u8bd1\u65f6\u9759\u6001\u5206\u914dRAM\u3002</p> <p>\u65b0\u521b\u5efa\u7684\u4efb\u52a1\u6700\u521d\u5904\u4e8e\u5c31\u7eea\u72b6\u6001\uff0c\u4f46\u5982\u679c\u6ca1\u6709\u80fd\u591f\u8fd0\u884c\u7684\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\uff0c\u5219\u4f1a\u7acb\u5373\u53d8\u4e3a\u8fd0\u884c\u72b6\u6001\u4efb\u52a1\u3002</p> <p>\u53ef\u4ee5\u5728\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u4e4b\u524d\u548c\u4e4b\u540e\u521b\u5efa\u4efb\u52a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_27","title":"\u53c2\u6570","text":"<p>pvTaskCode</p> <ul> <li>pvTaskCode\u53c2\u6570\u53ea\u662f\u4e00\u4e2a\u6307\u5411\u5b9e\u73b0\u4efb\u52a1\u7684\u51fd\u6570(\u5b9e\u9645\u4e0a\u53ea\u662f\u51fd\u6570\u540d)\u7684\u6307\u9488\u3002</li> </ul> <p>pcName</p> <ul> <li>\u8fd9\u4e3b\u8981\u7528\u4e8e\u65b9\u4fbf\u8c03\u8bd5\uff0c\u4f46\u4e5f\u53ef\u4ee5\u5728\u8c03\u7528xTaskGetHandle()\u4e2d\u4f7f\u7528\uff0c\u4ee5\u83b7\u5f97\u4efb\u52a1\u53e5\u67c4\u3002</li> <li>\u5e94\u7528\u7a0b\u5e8f\u5b9a\u4e49\u7684\u5e38\u91cfconfigMAX_TASK_NAME_LEN\u5b9a\u4e49\u4e86\u540d\u79f0\u7684\u6700\u5927\u5b57\u7b26\u957f\u5ea6\u2014\u2014\u5305\u62ecNULL\u7ed3\u675f\u7b26\u3002\u63d0\u4f9b\u4e00\u4e2a\u8d85\u8fc7\u8fd9\u4e2a\u6700\u5927\u503c\u7684\u5b57\u7b26\u4e32\u5c06\u5bfc\u81f4\u8be5\u5b57\u7b26\u4e32\u88ab\u622a\u65ad\u3002</li> </ul> <p>usStackDepth</p> <ul> <li> <p>usStackDepth\u503c\u544a\u8bc9\u5185\u6838\u5806\u6808\u7684\u5927\u5c0f\u3002</p> </li> <li> <p>\u4f8b\u5982\uff0c\u5728\u4e00\u4e2a4\u5b57\u8282\u5806\u6808\u5bbd\u5ea6\u7684\u67b6\u6784\u4e0a\uff0c\u5982\u679cusStackDepth\u4ee5100\u4f20\u5165\uff0c\u90a3\u4e48\u5c06\u5206\u914d400\u5b57\u8282\u7684\u5806\u6808\u7a7a\u95f4(100 * 4\u5b57\u8282)\u3002\u5806\u6808\u6df1\u5ea6\u4e58\u4ee5\u5806\u6808\u5bbd\u5ea6\u4e0d\u80fd\u8d85\u8fc7size_t\u7c7b\u578b\u7684\u53d8\u91cf\u6240\u80fd\u5305\u542b\u7684\u6700\u5927\u503c\u3002</p> </li> </ul> <p>\u8bd1\u8005\u6ce8\uff1a\u4f20\u5165\u53c2\u6570\u7684\u503c\u662f\u5b57\u6570\uff0c\u800c\u975e\u5b57\u8282\u6570\uff0c\u5b9e\u9645\u5b57\u8282\u6570\u548c\u5904\u7406\u5668\u4f4d\u5bbd\u76f8\u5173\u3002</p> <ul> <li>\u5728\u6f14\u793a\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u4e3a\u6240\u9009\u5fae\u63a7\u5236\u5668\u67b6\u6784\u63d0\u4f9b\u7684\u8d4b\u503c\u4e3a\u8be5\u67b6\u6784\u4e0a\u7684\u4efb\u4f55\u4efb\u52a1\u7684\u6700\u5c0f\u63a8\u8350\u503c\u3002\u5982\u679c\u60a8\u7684\u4efb\u52a1\u4f7f\u7528\u4e86\u5927\u91cf\u7684\u5806\u6808\u7a7a\u95f4\uff0c\u90a3\u4e48\u60a8\u5fc5\u987b\u5206\u914d\u4e00\u4e2a\u66f4\u5927\u7684\u503c\u3002</li> </ul> <p>pvParameters</p> <ul> <li>\u4efb\u52a1\u51fd\u6570\u63a5\u53d7void\u6307\u9488\u7c7b\u578b\u7684\u5f62\u53c2(void*)\u3002\u8d4b\u7ed9pvParameters\u7684\u503c\u5c06\u662f\u4f20\u9012\u7ed9\u4efb\u52a1\u7684\u503c\u3002</li> <li>\u8be5\u53c2\u6570\u7684\u7c7b\u578b\u4e3a\u201cvoid\u6307\u9488\u201d\uff0c\u5141\u8bb8\u4efb\u52a1\u53c2\u6570\u6709\u6548\u5730\u3001\u95f4\u63a5\u5730\u901a\u8fc7\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u63a5\u6536\u4efb\u4f55\u7c7b\u578b\u7684\u53c2\u6570\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u4efb\u52a1\u521b\u5efa\u70b9\u5c06\u6574\u578b\u8f6c\u6362\u4e3a\u7a7a\u6307\u9488\uff0c\u7136\u540e\u5728\u4efb\u52a1\u51fd\u6570\u5b9a\u4e49\u672c\u8eab\u5c06\u7a7a\u6307\u9488\u5f62\u53c2\u8f6c\u6362\u56de\u6574\u578b\uff0c\u5c06\u6574\u578b\u7c7b\u578b\u4f20\u9012\u7ed9\u4efb\u52a1\u51fd\u6570\u3002</li> </ul> <p>uxPriority</p> <ul> <li>\u5b9a\u4e49\u4efb\u52a1\u5c06\u6267\u884c\u7684\u4f18\u5148\u7ea7\u3002\u4f18\u5148\u7ea7\u53ef\u4ee5\u4ece0(\u6700\u4f4e\u4f18\u5148\u7ea7)\u5206\u914d\u5230(configMAX_PRIORITIES - 1)(\u6700\u9ad8\u4f18\u5148\u7ea7)\u3002</li> </ul> <p>\u8bd1\u8005\u6ce8\uff1aFreeRTOS\u4efb\u52a1\u6700\u9ad8\u4f18\u5148\u7ea7\u662f0\uff0c\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\u4efb\u52a1\u6700\u4f4e\u4f18\u5148\u7ea7\u662f0\uff0c\u8fd9\u70b9\u9700\u8981\u7279\u522b\u6ce8\u610f\u3002</p> <ul> <li> <p>configMAX_PRIORITIES\u662f\u4e00\u4e2a\u7528\u6237\u5b9a\u4e49\u7684\u5e38\u91cf\u3002\u5982\u679cconfigUSE_PORT_OPTIMISED_TASK_SELECTION\u8bbe\u7f6e\u4e3a0,\u90a3\u4e48\u4f18\u5148\u7684\u6570\u91cf\u6ca1\u6709\u4e0a\u9650,\u53ef\u4ee5\u4f7f\u7528\u7684\u9650\u5236(\u9664\u4e86\u6570\u636e\u7c7b\u578b\u548c\u53ef\u7528\u7684RAM\u5355\u7247\u673a\u4f7f\u7528),\u4f46\u5efa\u8bae\u4f7f\u7528\u6240\u9700\u7684\u6700\u4f4e\u6570\u91cf\u7684\u4f18\u5148\u7ea7,\u4ee5\u907f\u514d\u6d6a\u8d39\u5185\u5b58\u3002 </p> </li> <li> <p>\u4f20\u9012\u4ee5\u4e0a\u7684uxPriority\u503c(configMAX_PRIORITIES - 1)\u5c06\u5bfc\u81f4\u5206\u914d\u7ed9\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u88ab\u9759\u9ed8\u5730\u4e0a\u9650\u4e3a\u6700\u5927\u5408\u6cd5\u503c</p> </li> </ul> <p>puxStackBuffer</p> <ul> <li>\u5fc5\u987b\u6307\u5411\u81f3\u5c11\u5177\u6709ulStackDepth\u7d22\u5f15\u7684StackType_t\u53d8\u91cf\u6570\u7ec4(\u53c2\u89c1\u4e0a\u9762\u7684ulStackDepth\u53c2\u6570)\u3002\u8be5\u6570\u7ec4\u5c06\u88ab\u7528\u4f5c\u521b\u5efa\u7684\u4efb\u52a1\u7684\u5806\u6808\uff0c\u56e0\u6b64\u5fc5\u987b\u662f\u6301\u4e45\u7684(\u4e0d\u80fd\u5728\u51fd\u6570\u521b\u5efa\u7684\u5806\u6808\u6846\u67b6\u4e2d\u58f0\u660e\uff0c\u4e5f\u4e0d\u80fd\u5728\u5e94\u7528\u7a0b\u5e8f\u6267\u884c\u65f6\u53ef\u4ee5\u5408\u6cd5\u91cd\u5199\u7684\u4efb\u4f55\u5176\u4ed6\u5185\u5b58\u4e2d\u58f0\u660e)\u3002</li> </ul> <p>pxTaskBuffer</p> <ul> <li>\u5fc5\u987b\u6307\u5411StaticTask_t\u7c7b\u578b\u7684\u53d8\u91cf\u3002\u8be5\u53d8\u91cf\u5c06\u7528\u4e8e\u4fdd\u5b58\u521b\u5efa\u7684\u4efb\u52a1\u7684\u6570\u636e\u7ed3\u6784(TCB)\uff0c\u56e0\u6b64\u5b83\u5fc5\u987b\u662f\u6301\u4e45\u7684(\u4e0d\u80fd\u5728\u51fd\u6570\u521b\u5efa\u7684\u5806\u6808\u6846\u67b6\u4e2d\u58f0\u660e\uff0c\u4e5f\u4e0d\u80fd\u5728\u5e94\u7528\u7a0b\u5e8f\u6267\u884c\u65f6\u53ef\u4ee5\u5408\u6cd5\u91cd\u5199\u7684\u4efb\u4f55\u5176\u4ed6\u5185\u5b58\u4e2d\u58f0\u660e)\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_28","title":"\u8fd4\u56de\u503c","text":"<p>NULL \u65e0\u6cd5\u521b\u5efa\u4efb\u52a1\uff0c\u56e0\u4e3apuxStackBuffer\u6216pxTaskBuffer\u4e3aNULL\u3002</p> <p>\u5176\u4ed6\u8fd4\u56de\u503c \u5982\u679c\u8fd4\u56de\u975enull\u503c\uff0c\u5219\u521b\u5efa\u4e86\u4efb\u52a1\uff0c\u8fd4\u56de\u7684\u503c\u662f\u521b\u5efa\u7684\u4efb\u52a1\u7684\u53e5\u67c4\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_29","title":"\u63d0\u793a","text":"<p>configSUPPORT_STATIC_ALLOCATION\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u8bbe\u7f6e\u4e3a1\uff0c\u624d\u80fd\u4f7f\u7528\u8be5\u51fd\u6570\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#28-xtaskcreaterestricted","title":"2.8 xTaskCreateRestricted()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dBaseType_t xTaskCreateRestricted( TaskParameters_t *pxTaskDefinition,                                  TaskHandle_t *pxCreatedTask );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_30","title":"\u6982\u8981","text":"<p>\u672c\u529f\u80fd\u4ec5\u4f9b\u9ad8\u7ea7\u7528\u6237\u4f7f\u7528\uff0c\u4ec5\u4e0eFreeRTOS MPU\u7aef\u53e3(\u4f7f\u7528\u5185\u5b58\u4fdd\u62a4\u5355\u5143\u7684FreeRTOS\u7aef\u53e3)\u76f8\u5173\u3002</p> <p>\u521b\u5efa\u65b0\u7684MPU\u53d7\u9650\u4efb\u52a1\u3002</p> <p>\u65b0\u521b\u5efa\u7684\u4efb\u52a1\u6700\u521d\u5904\u4e8e\u5c31\u7eea\u72b6\u6001\uff0c\u4f46\u5982\u679c\u6ca1\u6709\u80fd\u591f\u8fd0\u884c\u7684\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\uff0c\u5219\u4f1a\u7acb\u5373\u53d8\u4e3a\u8fd0\u884c\u72b6\u6001\u4efb\u52a1\u3002</p> <p>\u53ef\u4ee5\u5728\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u4e4b\u524d\u548c\u4e4b\u540e\u521b\u5efa\u4efb\u52a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_31","title":"\u53c2\u6570","text":"<p>pxTaskDefinition</p> <ul> <li>\u6307\u5411\u5b9a\u4e49\u4efb\u52a1\u7684\u7ed3\u6784\u7684\u6307\u9488\u3002\u8be5\u7ed3\u6784\u5728\u53c2\u8003\u624b\u518c\u7684\u8fd9\u4e00\u8282\u7684\u6ce8\u91ca\u6807\u9898\u4e0b\u8fdb\u884c\u4e86\u63cf\u8ff0\u3002</li> </ul> <p>pxCreatedTask</p> <ul> <li>pxCreatedTask\u53ef\u7528\u4e8e\u5c06\u53e5\u67c4\u4f20\u9012\u7ed9\u6b63\u5728\u521b\u5efa\u7684\u4efb\u52a1\u3002\u8fd9\u4e2a\u53e5\u67c4\u53ef\u7528\u4e8e\u5728API\u8c03\u7528\u4e2d\u5f15\u7528\u4efb\u52a1\uff0c\u4f8b\u5982\uff0c\u66f4\u6539\u4efb\u52a1\u4f18\u5148\u7ea7\u6216\u5220\u9664\u4efb\u52a1\u3002</li> <li>\u5982\u679c\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0d\u4f7f\u7528\u4efb\u52a1\u53e5\u67c4\uff0c\u90a3\u4e48pxCreatedTask\u53ef\u4ee5\u8bbe\u7f6e\u4e3aNULL\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_32","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS \u8868\u793a\u4efb\u52a1\u521b\u5efa\u6210\u529f\u3002</p> <p>\u5176\u4ed6\u8fd4\u56de\u503c \u6307\u793a\u4e0d\u80fd\u6309\u6307\u5b9a\u7684\u65b9\u5f0f\u521b\u5efa\u4efb\u52a1\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u53ef\u7528\u7684FreeRTOS\u5806\u5185\u5b58\u4e0d\u8db3\uff0c\u65e0\u6cd5\u5206\u914d\u4efb\u52a1\u6570\u636e\u7ed3\u6784\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_33","title":"\u63d0\u793a","text":"<p>xTaskCreateRestricted()\u5229\u7528\u4e86\u4e0b\u9762\u6240\u793a\u7684\u4e24\u4e2a\u6570\u636e\u7ed3\u6784\u3002</p> <pre><code>typedef struct xTASK_PARAMTERS{    TaskFunction_t pvTaskCode;    const signed char * const pcName;    unsigned short usStackDepth;    void *pvParameters;    UBaseType_t uxPriority;    portSTACK_TYPE *puxStackBuffer;    MemoryRegion_t xRegions[ portNUM_CONFIGURABLE_REGIONS ];} TaskParameters_t;/* ....where MemoryRegion_t is defined as: */typedef struct xMEMORY_REGION{    void *pvBaseAddress;    unsigned long ulLengthInBytes;    unsigned long ulParameters;} MemoryRegion_t;\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#29-taskdelay","title":"2.9 TaskDelay()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dvoid vTaskDelay( TickType_t xTicksToDelay );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_34","title":"\u6982\u8981","text":"<p>\u5bf9\u4e8e\u56fa\u5b9a\u6570\u91cf\u7684tick\u4e2d\u65ad\uff0c\u5c06\u8c03\u7528vTaskDelay()\u7684\u4efb\u52a1\u7f6e\u4e8eBlocked\u72b6\u6001\u3002</p> <p>\u6307\u5b9a\u96f6\u8282\u62cd\u7684\u5ef6\u8fdf\u65f6\u95f4\u4e0d\u4f1a\u5bfc\u81f4\u8c03\u7528\u4efb\u52a1\u88ab\u7f6e\u4e8eBlocked\u72b6\u6001\uff0c\u4f46\u4f1a\u5bfc\u81f4\u8c03\u7528\u4efb\u52a1\u5c48\u670d\u4e8e\u4e0e\u4e4b\u5171\u4eab\u5176\u4f18\u5148\u7ea7\u7684\u4efb\u4f55Ready\u72b6\u6001\u4efb\u52a1\u3002\u8c03\u7528vTaskDelay(0)\u7b49\u4ef7\u4e8e\u8c03\u7528taskYIELD()\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_35","title":"\u53c2\u6570","text":"<p>xTicksToDelay </p> <ul> <li>\u8c03\u7528\u4efb\u52a1\u5728\u8f6c\u6362\u56de\u5c31\u7eea\u72b6\u6001\u4e4b\u524d\u5c06\u4fdd\u6301\u5728Blocked\u72b6\u6001\u7684tick\u4e2d\u65ad\u7684\u6570\u91cf\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4e00\u4e2a\u540d\u4e3avTaskDelay(100)\u7684\u4efb\u52a1\u5728tick\u8ba1\u6570\u4e3a10,000\u65f6\uff0c\u90a3\u4e48\u5b83\u5c06\u7acb\u5373\u8fdb\u5165Blocked\u72b6\u6001\uff0c\u5e76\u4fdd\u6301Blocked\u72b6\u6001\uff0c\u76f4\u5230tick\u8ba1\u6570\u8fbe\u523010,100\u3002</li> <li>\u5728\u8c03\u7528vTaskDelay()\u548c\u53d1\u751f\u4e0b\u4e00\u4e2a\u6ef4\u7b54\u4e2d\u65ad\u4e4b\u95f4\u7684\u4efb\u4f55\u65f6\u95f4\uff0c\u90fd\u7b97\u4f5c\u4e00\u4e2a\u5b8c\u6574\u7684\u6ef4\u7b54\u5468\u671f\u3002\u56e0\u6b64\uff0c\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u6307\u5b9a\u5ef6\u8fdf\u5468\u671f\u65f6\u6240\u80fd\u8fbe\u5230\u7684\u6700\u9ad8\u65f6\u95f4\u5206\u8fa8\u7387\u7b49\u4e8e\u4e00\u4e2a\u5b8c\u6574\u7684tick\u4e2d\u65ad\u5468\u671f</li> <li>\u5b8fpdMS_TO_TICKS()\u53ef\u7528\u4e8e\u5c06\u6beb\u79d2\u8f6c\u6362\u4e3a\u8282\u62cd\u3002\u672c\u8282\u7684\u793a\u4f8b\u6f14\u793a\u4e86\u8fd9\u4e00\u70b9\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_36","title":"\u8fd4\u56de\u503c","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_37","title":"\u63d0\u793a","text":"<p>\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u5c06INCLUDE_vTaskDelay\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u4fbfvTaskDelay() API\u51fd\u6570\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_38","title":"\u793a\u4f8b","text":"<pre><code>void vAnotherTask( void * pvParameters ){    for( ;; )    {    /* Perform some processing here. */    \u2026    /* Enter the Blocked state for 20 tick interrupts \u2013 the actual time spent    in the Blocked state is dependent on the tick frequency. */        vTaskDelay( 20 );    /* 20 ticks will have passed since the first call to vTaskDelay() was    executed. */    /* Enter the Blocked state for 20 milliseconds. Using the    pdMS_TO_TICKS() macro means the tick frequency can change without    effecting the time spent in the blocked state (other than due to the    resolution of the tick frequency). */        vTaskDelay( pdMS_TO_TICKS( 20 ) );    }}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#210-vtaskdelayuntil","title":"2.10 vTaskDelayUntil()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dvoid vTaskDelayUntil( TickType_t *pxPreviousWakeTime, TickType_t xTimeIncrement );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_39","title":"\u6982\u8981","text":"<p>\u5c06\u8c03\u7528vTaskDelayUntil()\u7684\u4efb\u52a1\u7f6e\u4e8eBlocked\u72b6\u6001\uff0c\u76f4\u5230\u8fbe\u5230\u7edd\u5bf9\u65f6\u95f4\u3002</p> <p>\u5468\u671f\u6027\u4efb\u52a1\u53ef\u4ee5\u4f7f\u7528vTaskDelayUntil()\u6765\u5b9e\u73b0\u56fa\u5b9a\u7684\u6267\u884c\u9891\u7387\u3002</p> <p>vTaskDelay()\u548cvTaskDelayUntil()\u7684\u533a\u522b</p> <ul> <li> <p>vTaskDelay()\u5bfc\u81f4\u8c03\u7528\u4efb\u52a1\u8fdb\u5165Blocked\u72b6\u6001\uff0c\u7136\u540e\u5728vTaskDelay()\u88ab\u8c03\u7528\u540e\u7684\u6307\u5b9a\u65f6\u95f4\u95f4\u9694\u5185\u4fdd\u6301Blocked\u72b6\u6001\u3002\u8c03\u7528vTaskDelay()\u7684\u4efb\u52a1\u9000\u51faBlocked\u72b6\u6001\u7684\u65f6\u95f4\u4e0e\u8c03\u7528vTaskDelay()\u7684\u65f6\u95f4\u6709\u5173\u3002</p> </li> <li> <p>vTaskDelayUntil()\u5bfc\u81f4\u8c03\u7528\u4efb\u52a1\u8fdb\u5165Blocked\u72b6\u6001\uff0c\u7136\u540e\u4fdd\u6301Blocked\u72b6\u6001\uff0c\u76f4\u5230\u8fbe\u5230\u7edd\u5bf9\u65f6\u95f4\u3002\u8c03\u7528vTaskDelayUntil()\u7684\u4efb\u52a1\u6070\u597d\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u9000\u51faBlocked\u72b6\u6001\uff0c\u800c\u4e0d\u662f\u76f8\u5bf9\u4e8evTaskDelayUntil()\u88ab\u8c03\u7528\u7684\u65f6\u95f4\u3002</p> </li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_40","title":"\u53c2\u6570","text":"<p>pxPreviousWakeTime</p> <ul> <li>\u8fd9\u4e2a\u53c2\u6570\u7684\u547d\u540d\u662f\u57fa\u4e8e\u8fd9\u6837\u7684\u5047\u8bbe:vTaskDelayUntil()\u7528\u4e8e\u5b9e\u73b0\u4e00\u4e2a\u5b9a\u671f\u6267\u884c\u5e76\u4ee5\u56fa\u5b9a\u9891\u7387\u6267\u884c\u7684\u4efb\u52a1\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cpxPreviousWakeTime\u4fdd\u6301\u4efb\u52a1\u6700\u540e\u79bb\u5f00Blocked\u72b6\u6001(\u88ab\u201c\u5524\u9192\u201d)\u7684\u65f6\u95f4\u3002\u6b64\u65f6\u95f4\u7528\u4f5c\u53c2\u8003\u70b9\uff0c\u4ee5\u8ba1\u7b97\u4efb\u52a1\u4e0b\u4e00\u6b21\u79bb\u5f00Blocked\u72b6\u6001\u7684\u65f6\u95f4\u3002</li> <li>pxPreviousWakeTime\u6240\u6307\u5411\u7684\u53d8\u91cf\u4f1a\u5728vTaskDelayUntil()\u51fd\u6570\u4e2d\u81ea\u52a8\u66f4\u65b0;\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u901a\u5e38\u4e0d\u4f1a\u4fee\u6539\u5b83\uff0c\u9664\u975e\u53d8\u91cf\u7b2c\u4e00\u6b21\u521d\u59cb\u5316\u3002\u672c\u8282\u4e2d\u7684\u793a\u4f8b\u6f14\u793a\u5982\u4f55\u6267\u884c\u521d\u59cb\u5316\u3002</li> </ul> <p>xTimeIncrement</p> <ul> <li>\u8fd9\u4e2a\u53c2\u6570\u7684\u547d\u540d\u4e5f\u662f\u57fa\u4e8e\u8fd9\u6837\u4e00\u4e2a\u5047\u8bbe:vTaskDelayUntil()\u88ab\u7528\u4e8e\u5b9e\u73b0\u4e00\u4e2a\u5468\u671f\u6027\u6267\u884c\u7684\u4efb\u52a1\uff0c\u5e76\u4e14\u5177\u6709\u56fa\u5b9a\u7684\u9891\u7387\u2014\u9891\u7387\u7531xTimeIncrement\u503c\u8bbe\u7f6e\u3002</li> <li>xTimeIncrement\u5728' ticks '\u4e2d\u6307\u5b9a\u3002\u53ef\u4ee5\u4f7f\u7528pdMS_TO_TICKS()\u5b8f\u5c06\u6beb\u79d2\u8f6c\u6362\u4e3a\u8282\u62cd\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_41","title":"\u8fd4\u56de\u503c","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_42","title":"\u63d0\u793a","text":"<p>INCLUDE_vTaskDelayUntil\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u4fbfvTaskDelay() API\u51fd\u6570\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#211-vtaskdelete","title":"2.11 vTaskDelete()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dvoid vTaskDelete( TaskHandle_t pxTask );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_43","title":"\u6982\u8981","text":"<p>\u5220\u9664\u4ee5\u524d\u901a\u8fc7\u8c03\u7528xTaskCreate()\u6216xTaskCreateStatic()\u521b\u5efa\u7684\u4efb\u52a1\u5b9e\u4f8b\u3002</p> <p>\u5220\u9664\u7684\u4efb\u52a1\u4e0d\u518d\u5b58\u5728\uff0c\u4e0d\u80fd\u8fdb\u5165\u8fd0\u884c\u72b6\u6001\u3002</p> <p>\u4e0d\u8981\u5c1d\u8bd5\u4f7f\u7528\u4efb\u52a1\u53e5\u67c4\u6765\u5f15\u7528\u5df2\u5220\u9664\u7684\u4efb\u52a1\u3002</p> <p>\u5f53\u4e00\u4e2a\u4efb\u52a1\u88ab\u5220\u9664\u65f6\uff0c\u7a7a\u95f2\u4efb\u52a1\u8d1f\u8d23\u91ca\u653e\u7528\u6765\u4fdd\u5b58\u88ab\u5220\u9664\u4efb\u52a1\u7684\u5806\u6808\u548c\u6570\u636e\u7ed3\u6784(\u4efb\u52a1\u63a7\u5236\u5757)\u7684\u5185\u5b58\u3002\u56e0\u6b64\uff0c\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528vTaskDelete() API\u51fd\u6570\uff0c\u5e94\u7528\u7a0b\u5e8f\u8fd8\u5fc5\u987b\u786e\u4fdd\u7a7a\u95f2\u4efb\u52a1\u4e0d\u4f1a\u7f3a\u4e4f\u5904\u7406\u65f6\u95f4(\u7a7a\u95f2\u4efb\u52a1\u5fc5\u987b\u5728Running\u72b6\u6001\u4e0b\u5206\u914d\u65f6\u95f4)\u3002</p> <p>\u5220\u9664\u4efb\u52a1\u65f6\uff0c\u53ea\u6709\u5185\u6838\u672c\u8eab\u5206\u914d\u7ed9\u4efb\u52a1\u7684\u5185\u5b58\u4f1a\u81ea\u52a8\u91ca\u653e\u3002\u5e94\u7528\u7a0b\u5e8f(\u800c\u4e0d\u662f\u5185\u6838)\u5206\u914d\u7ed9\u4efb\u52a1\u7684\u5185\u5b58\u6216\u4efb\u4f55\u5176\u4ed6\u8d44\u6e90\uff0c\u5fc5\u987b\u5728\u5220\u9664\u4efb\u52a1\u65f6\u7531\u5e94\u7528\u7a0b\u5e8f\u663e\u5f0f\u91ca\u653e\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_44","title":"\u53c2\u6570","text":"<p>pxTask</p> <ul> <li> <p>\u88ab\u5220\u9664\u4efb\u52a1\u7684\u53e5\u67c4(\u4e3b\u9898\u4efb\u52a1)\u3002</p> </li> <li> <p>\u8981\u83b7\u5f97\u4efb\u52a1\u7684\u53e5\u67c4\uff0c\u4f7f\u7528xTaskCreate()\u521b\u5efa\u4efb\u52a1\u5e76\u4f7f\u7528pxCreatedTask\u53c2\u6570\uff0c\u6216\u8005\u4f7f\u7528xTaskCreateStatic()\u521b\u5efa\u4efb\u52a1\u5e76\u5b58\u50a8\u8fd4\u56de\u503c\uff0c\u6216\u8005\u5728\u8c03\u7528xTaskGetHandle()\u65f6\u4f7f\u7528\u4efb\u52a1\u7684\u540d\u79f0\u3002</p> </li> <li> <p>\u4efb\u52a1\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012NULL\u6765\u4ee3\u66ff\u6709\u6548\u7684\u4efb\u52a1\u53e5\u67c4\u6765\u5220\u9664\u81ea\u5df1\u3002</p> </li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_45","title":"\u8fd4\u56de\u503c","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_46","title":"\u793a\u4f8b","text":"<pre><code>void vAnotherFunction( void ){    TaskHandle_t xHandle;/* Create a task, storing the handle to the created task in xHandle. */    if(        xTaskCreate(            vTaskCode,            \"Demo task\",            STACK_SIZE,            NULL,            PRIORITY,            &amp;xHandle             /* The address of xHandle is passed in as the                last parameter to xTaskCreate() to obtain a handle                to the task being created. */        )        != pdPASS )        {            /* The task could not be created because there was not enough FreeRTOS heap            memory available for the task data structures and stack to be allocated. */        }        else        {            /* Delete the task just created. Use the handle passed out of xTaskCreate()            to reference the subject task. */            vTaskDelete( xHandle );         }/* Delete the task that called this function by passing NULL in as thevTaskDelete() parameter. The same task (this task) could also be deleted bypassing in a valid handle to itself. */}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#212-taskdisable_interrupts","title":"2.12 taskDISABLE_INTERRUPTS()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dvoid taskDISABLE_INTERRUPTS( void );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_47","title":"\u6982\u8981","text":"<p>\u5982\u679c\u6b63\u5728\u4f7f\u7528\u7684FreeRTOS\u7aef\u53e3\u6ca1\u6709\u4f7f\u7528configMAX_SYSCALL_INTERRUPT_PRIORITY(\u6216configMAX_API_CALL_INTERRUPT_PRIORITY\uff0c\u53d6\u51b3\u4e8e\u7aef\u53e3)\u5185\u6838\u914d\u7f6e\u5e38\u91cf\uff0c\u90a3\u4e48\u8c03\u7528taskDISABLE_INTERRUPTS()\u5c06\u4f7f\u4e2d\u65ad\u5168\u5c40\u7981\u7528\u3002</p> <p>\u5982\u679c\u6b63\u5728\u4f7f\u7528\u7684FreeRTOS\u7aef\u53e3\u786e\u5b9e\u4f7f\u7528\u4e86configMAX_SYSCALL_INTERRUPT_PRIORITY\u5185\u6838\u914d\u7f6e\u5e38\u91cf\uff0c\u90a3\u4e48\u8c03\u7528taskDISABLE_INTERRUPTS()\u5c06\u4f7f\u4e2d\u65ad\u5904\u4e8e\u6216\u4f4e\u4e8econfigMAX_SYSCALL_INTERRUPT_PRIORITY\u8bbe\u7f6e\u7684\u4e2d\u65ad\u4f18\u5148\u7ea7\u7981\u7528\uff0c\u5e76\u542f\u7528\u6240\u6709\u9ad8\u4f18\u5148\u7ea7\u7684\u4e2d\u65ad\u3002</p> <p>configMAX_SYSCALL_INTERRUPT_PRIORITY\u901a\u5e38\u5728FreeRTOSConfig.h\u4e2d\u5b9a\u4e49\u3002</p> <p>taskDISABLE_INTERRUPTS()\u548ctaskENABLE_INTERRUPTS()\u7684\u8c03\u7528\u4e0d\u662f\u4e3a\u4e86\u5d4c\u5957\u800c\u8bbe\u8ba1\u7684\u3002\u4f8b\u5982\uff0c\u5982\u679ctaskDISABLE_INTERRUPTS()\u88ab\u8c03\u7528\u4e24\u6b21\uff0c\u5bf9taskENABLE_INTERRUPTS()\u7684\u5355\u4e2a\u8c03\u7528\u4ecd\u7136\u4f1a\u5bfc\u81f4\u4e2d\u65ad\u88ab\u542f\u7528\u3002\u5982\u679c\u9700\u8981\u5d4c\u5957\uff0c\u5219\u5206\u522b\u4f7f\u7528taskENTER_CRITICAL()\u548ctaskEXIT_CRITICAL()\u6765\u4ee3\u66fftaskDISABLE_INTERRUPTS()\u548ctaskENABLE_INTERRUPTS()\u3002</p> <p>\u4e00\u4e9bFreeRTOS API\u51fd\u6570\u4f7f\u7528\u4e34\u754c\u533a\uff0c\u5982\u679c\u4e34\u754c\u533a\u5d4c\u5957\u8ba1\u6570\u4e3a0\uff0c\u5b83\u5c06\u91cd\u65b0\u542f\u7528\u4e2d\u65ad\u2014\u2014\u5373\u4f7f\u5728\u8c03\u7528API\u51fd\u6570\u4e4b\u524d\u8c03\u7528taskDISABLE_INTERRUPTS()\u7981\u7528\u4e86\u4e2d\u65ad\u3002\u5f53\u4e2d\u65ad\u5df2\u7ecf\u88ab\u7981\u7528\u65f6\uff0c\u4e0d\u5efa\u8bae\u8c03\u7528FreeRTOS API\u51fd\u6570\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_48","title":"\u53c2\u6570","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_49","title":"\u8fd4\u56de\u503c","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#213-taskenable_interrupts","title":"2.13 taskENABLE_INTERRUPTS()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dvoid taskENABLE_INTERRUPTS( void );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_50","title":"\u6982\u8981","text":"<p>\u8c03\u7528taskENABLE_INTERRUPTS()\u5c06\u5bfc\u81f4\u6240\u6709\u4e2d\u65ad\u4f18\u5148\u7ea7\u88ab\u542f\u7528\u3002</p> <p>taskDISABLE_INTERRUPTS()\u548ctaskENABLE_INTERRUPTS()\u7684\u8c03\u7528\u4e0d\u662f\u4e3a\u4e86\u5d4c\u5957\u800c\u8bbe\u8ba1\u7684\u3002\u4f8b\u5982\uff0c\u5982\u679ctaskDISABLE_INTERRUPTS()\u88ab\u8c03\u7528\u4e24\u6b21\uff0c\u5bf9taskENABLE_INTERRUPTS()\u7684\u5355\u4e2a\u8c03\u7528\u4ecd\u7136\u4f1a\u5bfc\u81f4\u4e2d\u65ad\u88ab\u542f\u7528\u3002\u5982\u679c\u9700\u8981\u5d4c\u5957\uff0c\u5219\u5206\u522b\u4f7f\u7528taskENTER_CRITICAL()\u548ctaskEXIT_CRITICAL()\u6765\u4ee3\u66fftaskDISABLE_INTERRUPTS()\u548ctaskENABLE_INTERRUPTS()\u3002</p> <p>\u4e00\u4e9bFreeRTOS API\u51fd\u6570\u4f7f\u7528\u4e34\u754c\u533a\uff0c\u5982\u679c\u4e34\u754c\u533a\u5d4c\u5957\u8ba1\u6570\u4e3a0\uff0c\u5b83\u5c06\u91cd\u65b0\u542f\u7528\u4e2d\u65ad\u2014\u2014\u5373\u4f7f\u5728\u8c03\u7528API\u51fd\u6570\u4e4b\u524d\u8c03\u7528taskDISABLE_INTERRUPTS()\u7981\u7528\u4e86\u4e2d\u65ad\u3002\u5f53\u4e2d\u65ad\u5df2\u7ecf\u88ab\u7981\u7528\u65f6\uff0c\u4e0d\u5efa\u8bae\u8c03\u7528FreeRTOS API\u51fd\u6570\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_51","title":"\u53c2\u6570","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_52","title":"\u8fd4\u56de\u503c","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#214-taskenter_critical","title":"2.14 taskENTER_CRITICAL()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dvoid taskENTER_CRITICAL( void );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_53","title":"\u6458\u8981","text":"<p>\u901a\u8fc7\u8c03\u7528taskENTER_CRITICAL()\u8fdb\u5165\u4e34\u754c\u533a\uff0c\u7136\u540e\u901a\u8fc7\u8c03\u7528taskEXIT_CRITICAL()\u9000\u51fa\u4e34\u754c\u533a\u3002</p> <p>taskENTER_CRITICAL()\u4e0d\u80fd\u4ece\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u4e2d\u8c03\u7528\u3002\u8bf7\u53c2\u9605taskENTER_CRITICAL_FROM_ISR()\u6765\u83b7\u5f97\u4e00\u4e2a\u4e2d\u65ad\u5b89\u5168\u7684\u7b49\u6548\u503c\u3002</p> <p>taskENTER_CRITICAL()\u548ctaskEXIT_CRITICAL()\u5b8f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u57fa\u672c\u7684\u4e34\u754c\u533a\u5b9e\u73b0\uff0c\u5b83\u901a\u8fc7\u7981\u7528\u4e2d\u65ad\u6765\u5de5\u4f5c\uff0c\u53ef\u4ee5\u662f\u5168\u5c40\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u7279\u5b9a\u7684\u4e2d\u65ad\u4f18\u5148\u7ea7\u3002\u6709\u5173\u521b\u5efa\u4e34\u754c\u533a\u800c\u4e0d\u7981\u7528\u4e2d\u65ad\u7684\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605vTaskSuspendAll() API\u51fd\u6570\u3002</p> <p>\u5982\u679c\u6b63\u5728\u4f7f\u7528\u7684FreeRTOS\u7aef\u53e3\u6ca1\u6709\u4f7f\u7528configMAX_SYSCALL_INTERRUPT_PRIORITY\u5185\u6838\u914d\u7f6e\u5e38\u91cf\uff0c\u90a3\u4e48\u8c03\u7528taskENTER_CRITICAL()\u5c06\u4f7f\u5168\u5c40\u4e2d\u65ad\u5904\u4e8e\u7981\u7528\u72b6\u6001\u3002</p> <p>\u5982\u679cFreeRTOS\u7aef\u53e3\u6b63\u5728\u4f7f\u7528\u5229\u7528configMAX_SYSCALL_INTERRUPT_PRIORITY(\u6216configMAX_API_CALL_INTERRUPT_PRIORITY,\u6839\u636e\u7aef\u53e3)\u5185\u6838\u914d\u7f6e\u4e0d\u53d8,\u7136\u540e\u8c03\u7528taskENTER_CRITICAL()\u5c06\u4e2d\u65ad\u548c\u4f4e\u4e8econfigMAX_SYSCALL_INTERRUPT_PRIORITY\u7981\u7528\u4e2d\u65ad\u4f18\u5148\u7ea7,\u548c\u6240\u6709\u9ad8\u4f18\u5148\u7ea7\u4e2d\u65ad\u542f\u7528\u3002</p> <p>\u62a2\u5360\u5f0f\u4e0a\u4e0b\u6587\u5207\u6362\u53ea\u53d1\u751f\u5728\u4e2d\u65ad\u4e2d\uff0c\u56e0\u6b64\u5728\u4e2d\u65ad\u88ab\u7981\u7528\u65f6\u4e0d\u4f1a\u53d1\u751f\u3002\u56e0\u6b64\uff0c\u8c03\u7528taskENTER_CRITICAL()\u7684\u4efb\u52a1\u88ab\u4fdd\u8bc1\u4fdd\u6301\u5728Running\u72b6\u6001\uff0c\u76f4\u5230\u4e34\u754c\u533a\u9000\u51fa\uff0c\u9664\u975e\u4efb\u52a1\u663e\u5f0f\u5730\u8bd5\u56fe\u963b\u585e\u6216\u5c48\u670d(\u5b83\u4e0d\u5e94\u8be5\u5728\u4e34\u754c\u533a\u5185\u90e8\u8fd9\u6837\u505a)\u3002</p> <p>taskENTER_CRITICAL()\u548ctaskEXIT_CRITICAL()\u7684\u8c03\u7528\u88ab\u8bbe\u8ba1\u6210\u5d4c\u5957\u3002\u56e0\u6b64\uff0c\u53ea\u6709\u5f53\u524d\u9762\u6bcf\u6b21\u8c03\u7528taskENTER_CRITICAL()\u90fd\u6267\u884c\u4e00\u6b21\u5bf9taskEXIT_CRITICAL()\u7684\u8c03\u7528\u65f6\uff0c\u4e34\u754c\u533a\u624d\u4f1a\u9000\u51fa\u3002</p> <p>\u4e34\u754c\u6bb5\u5fc5\u987b\u4fdd\u6301\u5f88\u77ed\uff0c\u5426\u5219\u5b83\u4eec\u5c06\u5bf9\u4e2d\u65ad\u54cd\u5e94\u65f6\u95f4\u4ea7\u751f\u4e0d\u5229\u5f71\u54cd\u3002\u5bf9taskENTER_CRITICAL()\u7684\u6bcf\u6b21\u8c03\u7528\u90fd\u5fc5\u987b\u4e0e\u5bf9taskEXIT_CRITICAL()\u7684\u8c03\u7528\u7d27\u5bc6\u5339\u914d\u3002</p> <p>\u4e0d\u80fd\u5728\u4e34\u754c\u533a\u5185\u8c03\u7528FreeRTOS API\u51fd\u6570\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_54","title":"\u53c2\u6570","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_55","title":"\u8fd4\u56de\u503c","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#215-taskenter_critical_from_isr","title":"2.15 taskENTER_CRITICAL_FROM_ISR()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dUBaseType_t taskENTER_CRITICAL_FROM_ISR( void );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_56","title":"\u6458\u8981","text":"<p>taskENTER_CRITICAL()\u7684\u4e00\u4e2a\u7248\u672c\uff0c\u53ef\u4ee5\u7528\u4e8e\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b(ISR)\u3002</p> <p>\u5728ISR\u4e2d\uff0c\u4e34\u754c\u533a\u901a\u8fc7\u8c03\u7528taskENTER_CRITICAL_FROM_ISR()\u8fdb\u5165\uff0c\u968f\u540e\u901a\u8fc7\u8c03\u7528taskEXIT_CRITICAL_FROM_ISR()\u9000\u51fa\u3002</p> <p>taskENTER_CRITICAL_FROM_ISR()\u548ctaskEXIT_CRITICAL_FROM_ISR()\u5b8f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u57fa\u672c\u7684\u4e34\u754c\u533a\u5b9e\u73b0\uff0c\u5b83\u901a\u8fc7\u7981\u7528\u4e2d\u65ad\u6765\u5de5\u4f5c\uff0c\u53ef\u4ee5\u662f\u5168\u5c40\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u7279\u5b9a\u7684\u4e2d\u65ad\u4f18\u5148\u7ea7\u3002</p> <p>\u5982\u679cFreeRTOS\u7aef\u53e3\u7528\u4e8e\u652f\u6301\u4e2d\u65ad\u5d4c\u5957\u8c03\u7528taskENTER_CRITICAL_FROM_ISR\u4e0b\u9762()\u5c06\u7981\u7528\u4e2d\u65ad\u548c\u4e2d\u65ad\u4f18\u5148\u7ea7\u8bbe\u5b9a\u7684configMAX_SYSCALL_INTERRUPT_PRIORITY(\u6216configMAX_API_CALL_INTERRUPT_PRIORITY)\u5185\u6838\u914d\u7f6e\u4e0d\u53d8,\u5e76\u5c06\u6240\u6709\u5176\u4ed6\u4e2d\u65ad\u4f18\u5148\u7ea7\u542f\u7528\u3002\u5982\u679c\u4f7f\u7528\u7684FreeRTOS\u7aef\u53e3\u4e0d\u652f\u6301\u4e2d\u65ad\u5d4c\u5957\uff0c\u90a3\u4e48taskENTER_CRITICAL_FROM_ISR()\u548ctaskEXIT_CRITICAL_FROM_ISR()\u5c06\u4e0d\u8d77\u4f5c\u7528\u3002</p> <p>taskENTER_CRITICAL_FROM_ISR()\u548ctaskEXIT_CRITICAL_FROM_ISR()\u7684\u8c03\u7528\u88ab\u8bbe\u8ba1\u4e3a\u5d4c\u5957\uff0c\u4f46\u662f\u5b8f\u7684\u4f7f\u7528\u65b9\u5f0f\u4e0etaskENTER_CRITICAL()\u548ctaskEXIT_CRITICAL()\u7684\u7b49\u4ef7\u8bed\u4e49\u662f\u4e0d\u540c\u7684\u3002</p> <p>\u4e34\u754c\u6bb5\u5fc5\u987b\u4fdd\u6301\u5f88\u77ed\uff0c\u5426\u5219\u5b83\u4eec\u5c06\u5bf9\u5d4c\u5957\u7684\u9ad8\u4f18\u5148\u7ea7\u4e2d\u65ad\u7684\u54cd\u5e94\u65f6\u95f4\u4ea7\u751f\u4e0d\u5229\u5f71\u54cd\u3002\u5bf9taskENTER_CRITICAL_FROM_ISR()\u7684\u6bcf\u6b21\u8c03\u7528\u90fd\u5fc5\u987b\u4e0e\u5bf9taskEXIT_CRITICAL_FROM_ISR()\u7684\u8c03\u7528\u7d27\u5bc6\u5339\u914d\u3002</p> <p>\u4e0d\u80fd\u5728\u4e34\u754c\u533a\u5185\u8c03\u7528FreeRTOS API\u51fd\u6570\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_57","title":"\u53c2\u6570","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_58","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u8c03\u7528taskENTER_CRITICAL_FROM_ISR()\u65f6\u7684\u4e2d\u65ad\u63a9\u7801\u72b6\u6001\u3002\u5fc5\u987b\u4fdd\u5b58\u8fd4\u56de\u503c\uff0c\u4ee5\u4fbf\u5c06\u5176\u4f20\u9012\u7ed9\u5339\u914d\u7684taskEXIT_CRITICAL_FROM_ISR()\u8c03\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_59","title":"\u793a\u4f8b","text":"<pre><code>/* A function called from an ISR. */void vDemoFunction( void ){    UBaseType_t uxSavedInterruptStatus;/* Enter the critical section. In this example, this function is itself called fromwithin a critical section, so entering this critical section will result in a nestingdepth of 2. Save the value returned by taskENTER_CRITICAL_FROM_ISR() into a localstack variable so it can be passed into taskEXIT_CRITICAL_FROM_ISR(). */    uxSavedInterruptStatus = taskENTER_CRITICAL_FROM_ISR();/* Perform the action that is being protected by the critical section here. *//* Exit the critical section. In this example, this function is itself called from acritical section, so interrupts will have already been disabled before a value wasstored in uxSavedInterruptStatus, and therefore passing uxSavedInterruptStatus intotaskEXIT_CRITICAL_FROM_ISR() will not result in interrupts being re-enabled. */    taskEXIT_CRITICAL_FROM_ISR( uxSavedInterruptStatus );}/* A task that calls vDemoFunction() from within an interrupt service routine. */void vDemoISR( void ){    UBaseType_t uxSavedInterruptStatus;/* Call taskENTER_CRITICAL_FROM_ISR() to create a critical section, saving thereturned value into a local stack. */    uxSavedInterruptStatus = taskENTER_CRITICAL_FROM_ISR();/* Execute the code that requires the critical section here. *//* Calls to taskENTER_CRITICAL_FROM_ISR() can be nested so it is safe to call afunction that includes its own calls to taskENTER_CRITICAL_FROM_ISR() andtaskEXIT_CRITICAL_FROM_ISR(). */    vDemoFunction();/* The operation that required the critical section is complete so exit thecritical section. Assuming interrupts were enabled on entry to this ISR, the valuesaved in uxSavedInterruptStatus will result in interrupts being re-enabled.*/    taskEXIT_CRITICAL_FROM_ISR( uxSavedInterruptStatus );}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#216-taskexit_critical","title":"2.16 taskEXIT_CRITICAL()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dvoid taskEXIT_CRITICAL( void );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_60","title":"\u6982\u8981","text":"<p>\u901a\u8fc7\u8c03\u7528taskENTER_CRITICAL()\u8fdb\u5165\u4e34\u754c\u533a\uff0c\u7136\u540e\u901a\u8fc7\u8c03\u7528taskEXIT_CRITICAL()\u9000\u51fa\u4e34\u754c\u533a\u3002</p> <p>taskEXIT_CRITICAL()\u4e0d\u80fd\u4ece\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u4e2d\u8c03\u7528\u3002\u8bf7\u53c2\u9605taskEXIT_CRITICAL_FROM_ISR()\u6765\u83b7\u5f97\u4e00\u4e2a\u4e2d\u65ad\u5b89\u5168\u7684\u7b49\u6548\u503c\u3002</p> <p>taskENTER_CRITICAL()\u548ctaskEXIT_CRITICAL()\u5b8f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u57fa\u672c\u7684\u4e34\u754c\u533a\u5b9e\u73b0\uff0c\u5b83\u901a\u8fc7\u7981\u7528\u4e2d\u65ad\u6765\u5de5\u4f5c\uff0c\u53ef\u4ee5\u662f\u5168\u5c40\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u7279\u5b9a\u7684\u4e2d\u65ad\u4f18\u5148\u7ea7\u3002</p> <p>\u5982\u679c\u6b63\u5728\u4f7f\u7528\u7684FreeRTOS\u7aef\u53e3\u6ca1\u6709\u4f7f\u7528configMAX_SYSCALL_INTERRUPT_PRIORITY\u5185\u6838\u914d\u7f6e\u5e38\u91cf\uff0c\u90a3\u4e48\u8c03\u7528taskENTER_CRITICAL()\u5c06\u4f7f\u5168\u5c40\u4e2d\u65ad\u5904\u4e8e\u7981\u7528\u72b6\u6001\u3002</p> <p>\u5982\u679c\u6b63\u5728\u4f7f\u7528\u7684FreeRTOS\u7aef\u53e3\u786e\u5b9e\u4f7f\u7528\u4e86configMAX_SYSCALL_INTERRUPT_PRIORITY\u5185\u6838\u914d\u7f6e\u5e38\u91cf\uff0c\u90a3\u4e48\u8c03\u7528taskENTER_CRITICAL()\u5c06\u4f7f\u4e2d\u65ad\u5904\u4e8e\u6216\u4f4e\u4e8econfigMAX_SYSCALL_INTERRUPT_PRIORITY\u8bbe\u7f6e\u7684\u4e2d\u65ad\u4f18\u5148\u7ea7\u7981\u7528\uff0c\u5e76\u542f\u7528\u6240\u6709\u66f4\u9ad8\u4f18\u5148\u7ea7\u7684\u4e2d\u65ad\u3002</p> <p>\u62a2\u5360\u5f0f\u4e0a\u4e0b\u6587\u5207\u6362\u53ea\u53d1\u751f\u5728\u4e2d\u65ad\u4e2d\uff0c\u56e0\u6b64\u5728\u4e2d\u65ad\u88ab\u7981\u7528\u65f6\u4e0d\u4f1a\u53d1\u751f\u3002\u56e0\u6b64\uff0c\u8c03\u7528taskENTER_CRITICAL()\u7684\u4efb\u52a1\u88ab\u4fdd\u8bc1\u4fdd\u6301\u5728Running\u72b6\u6001\uff0c\u76f4\u5230\u4e34\u754c\u533a\u9000\u51fa\uff0c\u9664\u975e\u4efb\u52a1\u663e\u5f0f\u5730\u8bd5\u56fe\u963b\u585e\u6216\u5c48\u670d(\u5b83\u4e0d\u5e94\u8be5\u5728\u4e34\u754c\u533a\u5185\u90e8\u8fd9\u6837\u505a)\u3002</p> <p>taskENTER_CRITICAL()\u548ctaskEXIT_CRITICAL()\u7684\u8c03\u7528\u88ab\u8bbe\u8ba1\u6210\u5d4c\u5957\u3002\u56e0\u6b64\uff0c\u53ea\u6709\u5f53\u524d\u9762\u6bcf\u6b21\u8c03\u7528taskENTER_CRITICAL()\u90fd\u6267\u884c\u4e00\u6b21\u5bf9taskEXIT_CRITICAL()\u7684\u8c03\u7528\u65f6\uff0c\u4e34\u754c\u533a\u624d\u4f1a\u9000\u51fa\u3002</p> <p>\u4e34\u754c\u6bb5\u5fc5\u987b\u4fdd\u6301\u5f88\u77ed\uff0c\u5426\u5219\u5b83\u4eec\u5c06\u5bf9\u4e2d\u65ad\u54cd\u5e94\u65f6\u95f4\u4ea7\u751f\u4e0d\u5229\u5f71\u54cd\u3002\u5bf9taskENTER_CRITICAL()\u7684\u6bcf\u6b21\u8c03\u7528\u90fd\u5fc5\u987b\u4e0e\u5bf9taskEXIT_CRITICAL()\u7684\u8c03\u7528\u7d27\u5bc6\u5339\u914d\u3002</p> <p>\u4e0d\u80fd\u5728\u4e34\u754c\u533a\u5185\u8c03\u7528FreeRTOS API\u51fd\u6570\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_61","title":"\u53c2\u6570","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_62","title":"\u8fd4\u56de\u503c","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#217-taskexit_critical_from_isr","title":"2.17 taskEXIT_CRITICAL_FROM_ISR()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dvoid taskENTER_CRITICAL_FROM_ISR( UBaseType_t uxSavedInterruptStatus );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_63","title":"\u6458\u8981","text":"<p>\u9000\u51fa\u901a\u8fc7\u8c03\u7528taskENTER_CRITICAL_FROM_ISR()\u8fdb\u5165\u7684\u4e34\u754c\u533a\u3002</p> <p>\u5728ISR\u4e2d\uff0c\u901a\u8fc7\u8c03\u7528taskENTER_CRITICAL_FROM_ISR()\u8fdb\u5165\u4e34\u754c\u533a\uff0c\u7136\u540e\u901a\u8fc7\u8c03\u7528taskEXIT_CRITICAL_FROM_ISR()\u9000\u51fa\u4e34\u754c\u533a\u3002</p> <p>taskENTER_CRITICAL_FROM_ISR()\u548ctaskEXIT_CRITICAL_FROM_ISR()\u5b8f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u57fa\u672c\u7684\u4e34\u754c\u533a\u5b9e\u73b0\uff0c\u5b83\u901a\u8fc7\u7981\u7528\u4e2d\u65ad\u6765\u5de5\u4f5c\uff0c\u53ef\u4ee5\u662f\u5168\u5c40\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u7279\u5b9a\u7684\u4e2d\u65ad\u4f18\u5148\u7ea7\u3002</p> <p>\u5982\u679cFreeRTOS\u7aef\u53e3\u7528\u4e8e\u652f\u6301\u4e2d\u65ad\u5d4c\u5957\u8c03\u7528taskENTER_CRITICAL_FROM_ISR\u4e0b\u9762()\u5c06\u7981\u7528\u4e2d\u65ad\u548c\u4e2d\u65ad\u4f18\u5148\u7ea7\u8bbe\u5b9a\u7684configMAX_SYSCALL_INTERRUPT_PRIORITY(\u6216configMAX_API_CALL_INTERRUPT_PRIORITY)\u5185\u6838\u914d\u7f6e\u4e0d\u53d8,\u5e76\u5c06\u6240\u6709\u5176\u4ed6\u4e2d\u65ad\u4f18\u5148\u7ea7\u542f\u7528\u3002\u5982\u679c\u4f7f\u7528\u7684FreeRTOS\u7aef\u53e3\u4e0d\u652f\u6301\u4e2d\u65ad\u5d4c\u5957\uff0c\u90a3\u4e48taskENTER_CRITICAL_FROM_ISR()\u548ctaskEXIT_CRITICAL_FROM_ISR()\u5c06\u4e0d\u8d77\u4f5c\u7528\u3002</p> <p>taskENTER_CRITICAL_FROM_ISR()\u548ctaskEXIT_CRITICAL_FROM_ISR()\u7684\u8c03\u7528\u88ab\u8bbe\u8ba1\u4e3a\u5d4c\u5957\uff0c\u4f46\u662f\u5b8f\u7684\u4f7f\u7528\u65b9\u5f0f\u4e0etaskENTER_CRITICAL()\u548ctaskEXIT_CRITICAL()\u7684\u7b49\u4ef7\u8bed\u4e49\u662f\u4e0d\u540c\u7684\u3002</p> <p>\u4e34\u754c\u6bb5\u5fc5\u987b\u4fdd\u6301\u5f88\u77ed\uff0c\u5426\u5219\u5b83\u4eec\u5c06\u5bf9\u5d4c\u5957\u7684\u9ad8\u4f18\u5148\u7ea7\u4e2d\u65ad\u7684\u54cd\u5e94\u65f6\u95f4\u4ea7\u751f\u4e0d\u5229\u5f71\u54cd\u3002\u5bf9taskENTER_CRITICAL_FROM_ISR()\u7684\u6bcf\u6b21\u8c03\u7528\u90fd\u5fc5\u987b\u4e0e\u5bf9taskEXIT_CRITICAL_FROM_ISR()\u7684\u8c03\u7528\u7d27\u5bc6\u5339\u914d\u3002</p> <p>\u4e0d\u80fd\u5728\u4e34\u754c\u533a\u5185\u8c03\u7528FreeRTOS API\u51fd\u6570\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_64","title":"\u53c2\u6570","text":"<p>uxSavedInterruptStatus</p> <ul> <li>\u4ece\u5bf9taskENTER_CRITICAL_FROM_ISR()\u7684\u5339\u914d\u8c03\u7528\u8fd4\u56de\u7684\u503c\u5fc5\u987b\u7528\u4f5cuxSavedInterruptStatus\u503c\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_65","title":"\u8fd4\u56de\u503c","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_66","title":"\u793a\u4f8b","text":""},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#218-xtaskgetapplicationtasktag","title":"2.18 xTaskGetApplicationTaskTag()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dTaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_67","title":"\u6458\u8981","text":"<p>\u8fd4\u56de\u4e0e\u4efb\u52a1\u5173\u8054\u7684' tag '\u503c\u3002\u6807\u8bb0\u503c\u7684\u542b\u4e49\u548c\u4f7f\u7528\u7531\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u4eba\u5458\u5b9a\u4e49\u3002\u5185\u6838\u672c\u8eab\u901a\u5e38\u4e0d\u4f1a\u8bbf\u95ee\u6807\u8bb0\u503c\u3002</p> <p>\u672c\u529f\u80fd\u4ec5\u4f9b\u9ad8\u7ea7\u7528\u6237\u4f7f\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_68","title":"\u53c2\u6570","text":"<p>xTask</p> <ul> <li>\u6b63\u5728\u67e5\u8be2\u7684\u4efb\u52a1\u7684\u53e5\u67c4\u3002\u8fd9\u662f\u4e3b\u9898\u4efb\u52a1\u3002</li> <li>\u4efb\u52a1\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u81ea\u5df1\u7684\u4efb\u52a1\u53e5\u67c4\u6216\u4f7f\u7528NULL\u4ee3\u66ff\u6709\u6548\u7684\u4efb\u52a1\u53e5\u67c4\u6765\u83b7\u5f97\u81ea\u5df1\u7684\u6807\u8bb0\u503c\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_69","title":"\u8fd4\u56de\u503c","text":"<p>\u6b63\u5728\u67e5\u8be2\u7684\u4efb\u52a1\u7684' tag '\u503c\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_70","title":"\u63d0\u793a","text":"<p>\u6807\u8bb0\u503c\u53ef\u4ee5\u7528\u6765\u4fdd\u5b58\u51fd\u6570\u6307\u9488\u3002\u5b8c\u6210\u4e4b\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528xTaskCallApplicationTaskHook() API\u51fd\u6570\u8c03\u7528\u5206\u914d\u7ed9\u6807\u7b7e\u503c\u7684\u51fd\u6570\u3002\u8fd9\u79cd\u6280\u672f\u5b9e\u9645\u4e0a\u662f\u7ed9\u4efb\u52a1\u5206\u914d\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u3002\u8fd9\u6837\u7684\u56de\u8c03\u901a\u5e38\u4e0etraceTASK_SWITCHED_IN()\u5b8f\u4e00\u8d77\u4f7f\u7528\uff0c\u4ee5\u5b9e\u73b0\u6267\u884c\u8ddf\u8e2a\u7279\u6027\u3002</p> <p>configUSE_APPLICATION_TASK_TAG\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u4fbfxTaskGetApplicationTaskTag()\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_71","title":"\u793a\u4f8b","text":"<pre><code>/* In this example, an integer is set as the task tag value. */void vATask( void *pvParameters ){/* Assign a tag value of 1 to the currently executing task. The (void *) castis used to prevent compiler warnings. */    vTaskSetApplicationTaskTag( NULL, ( void * ) 1 );    for( ;; )    {    /* Rest of task code goes here. */    }}void vAFunction( void ){    TaskHandle_t xHandle;    long lReturnedTaskHandle;/* Create a task from the vATask() function, storing the handle to the createdtask in the xTask variable. *//* Create the task. */    if( xTaskCreate(                        vATask, /* Pointer to the function that implements the task. */\"Demo task\", /* Text name given to the task. */                        STACK_SIZE, /* The size of the stack that should be created for the task.This is defined in words, not bytes. */                            NULL, /* The task does not use the parameter. */                            TASK_PRIORITY, /* The priority to assign to the newly created task. */                            &amp;xHandle /* The handle to the task being created will be placed inxHandle. */                                            ) == pdPASS )    {/* The task was created successfully. Delay for a short period to allowthe task to run. */            vTaskDelay( 100 );/* What tag value is assigned to the task? The returned tag value isstored in an integer, so cast to an integer to prevent compiler warnings. */            lReturnedTaskHandle = ( long ) xTaskGetApplicationTaskTag( xHandle );    }}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#219-xtaskgetcurrenttaskhandle","title":"2.19 xTaskGetCurrentTaskHandle()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dTaskHandle_t xTaskGetCurrentTaskHandle( void );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_72","title":"\u6982\u8981","text":"<p>\u8fd4\u56de\u5904\u4e8eRunning\u72b6\u6001\u7684\u4efb\u52a1\u53e5\u67c4\u2014\u2014\u5b83\u5c06\u662f\u8c03\u7528xTaskGetCurrentTaskHandle()\u7684\u4efb\u52a1\u7684\u53e5\u67c4\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_73","title":"\u53c2\u6570","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_74","title":"\u8fd4\u56de\u503c","text":"<p>\u8c03\u7528xTaskGetCurrentTaskHandle()\u7684\u4efb\u52a1\u7684\u53e5\u67c4\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_75","title":"\u63d0\u793a","text":"<p>INCLUDE_xTaskGetCurrentTaskHandle\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u4fbfxTaskGetCurrentTaskHandle()\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#220-xtaskgetidletaskhandle","title":"2.20 xTaskGetIdleTaskHandle()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dTaskHandle_t xTaskGetIdleTaskHandle( void );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_76","title":"\u6982\u8981","text":"<p>\u8fd4\u56de\u4e0e\u7a7a\u95f2\u4efb\u52a1\u5173\u8054\u7684\u4efb\u52a1\u53e5\u67c4\u3002Idle\u4efb\u52a1\u5728\u8c03\u5ea6\u7a0b\u5e8f\u542f\u52a8\u65f6\u81ea\u52a8\u521b\u5efa\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_77","title":"\u53c2\u6570","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_78","title":"\u8fd4\u56de\u503c","text":"<p>Idle\u4efb\u52a1\u7684\u53e5\u67c4\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_79","title":"\u63d0\u793a","text":"<p>INCLUDE_xTaskGetIdleTaskHandle()\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u4fbfxTaskGetIdleTaskHandle()\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#221-xtaskgethandle","title":"2.21 xTaskGetHandle()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dTaskHandle_t xTaskGetHandle( const char *pcNameToQuery );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_80","title":"\u6982\u8981","text":"<p>\u4f7f\u7528xTaskCreate()\u6216xTaskCreateStatic()\u521b\u5efa\u4efb\u52a1\u3002\u8fd9\u4e24\u4e2a\u51fd\u6570\u90fd\u6709\u4e00\u4e2a\u540d\u4e3apcName\u7684\u53c2\u6570\uff0c\u7528\u4e8e\u5c06\u4eba\u7c7b\u53ef\u8bfb\u7684\u6587\u672c\u540d\u79f0\u5206\u914d\u7ed9\u6b63\u5728\u521b\u5efa\u7684\u4efb\u52a1\u3002xTaskGetHandle()\u4ece\u4efb\u52a1\u7684\u4eba\u7c7b\u53ef\u8bfb\u6587\u672c\u540d\u79f0\u4e2d\u67e5\u627e\u5e76\u8fd4\u56de\u4efb\u52a1\u7684\u53e5\u67c4\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_81","title":"\u53c2\u6570","text":"<p>pcNameToQuery</p> <ul> <li>\u6b63\u5728\u67e5\u8be2\u7684\u4efb\u52a1\u540d\u79f0\u3002\u8be5\u540d\u79f0\u88ab\u6307\u5b9a\u4e3a\u4e00\u4e2a\u6807\u51c6\u7684\u4ee5NULL\u7ed3\u5c3e\u7684C\u5b57\u7b26\u4e32\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_82","title":"\u8fd4\u56de\u503c","text":"<p>\u5982\u679c\u4efb\u52a1\u7684\u540d\u79f0\u4e0epcNameToQuery\u53c2\u6570\u6307\u5b9a\u7684\u540d\u79f0\u5b8c\u5168\u76f8\u540c\uff0c\u5219\u5c06\u8fd4\u56de\u8be5\u4efb\u52a1\u7684\u53e5\u67c4\u3002\u5982\u679c\u6ca1\u6709\u4efb\u52a1\u5177\u6709\u7531pcNameToQuery\u53c2\u6570\u6307\u5b9a\u7684\u540d\u79f0\uff0c\u5219\u8fd4\u56deNULL\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_83","title":"\u63d0\u793a","text":"<p>xTaskGetHandle()\u53ef\u80fd\u9700\u8981\u76f8\u5f53\u957f\u7684\u65f6\u95f4\u624d\u80fd\u5b8c\u6210\u3002\u56e0\u6b64\uff0c\u5efa\u8bae\u5bf9\u6bcf\u4e2a\u4efb\u52a1\u540d\u53ea\u4f7f\u7528xTaskGetHandle()\u4e00\u6b21\u2014\u2014\u7136\u540e\u53ef\u4ee5\u5b58\u50a8xTaskGetHandle()\u8fd4\u56de\u7684\u4efb\u52a1\u53e5\u67c4\uff0c\u4ee5\u4fbf\u4ee5\u540e\u91cd\u7528\u3002</p> <p>xTaskGetHandle()\u7684\u884c\u4e3a\u662f\u672a\u5b9a\u4e49\u7684\uff0c\u56e0\u4e3a\u6709\u591a\u4e2a\u4efb\u52a1\u5177\u6709\u76f8\u540c\u7684\u540d\u79f0\u3002\u4e3a\u4e86\u8ba9xTaskGetHandle()\u53ef\u7528\uff0c\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u5c06INCLUDE_xTaskGetHandle\u8bbe\u7f6e\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_84","title":"\u793a\u4f8b","text":"<pre><code>void vATask( void *pvParameters ){    const char *pcNameToLookup = \"MyTask\";    TaskHandle_t xHandle;/* Find the handle of the task that has the name MyTask, storing the returned handle locallyso it can be re-used later. */    xHandle = xTaskGetHandle( pcNameToLookup );    if( xHandle != NULL )    {/* The handle of the task was found, and can now be used in any other FreeRTOS APIfunction that takes a TaskHandle_t parameter. */    }    for( ;; )    {    /* The rest of the task code goes here. */    }}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#222-uxtaskgetnumberoftasks","title":"2.22 uxTaskGetNumberOfTasks()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dUBaseType_t uxTaskGetNumberOfTasks( void );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_85","title":"\u6982\u8981","text":"<p>\u8fd4\u56de\u5728\u8c03\u7528uxTaskGetNumberOfTasks()\u65f6\u5b58\u5728\u7684\u4efb\u52a1\u603b\u6570\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_86","title":"\u53c2\u6570","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_87","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u503c\u662f\u8c03\u7528uxTaskGetNumberOfTasks()\u65f6FreeRTOS\u5185\u6838\u63a7\u5236\u7684\u4efb\u52a1\u603b\u6570\u3002\u8fd9\u662f\u6302\u8d77\u72b6\u6001\u4efb\u52a1\u7684\u6570\u91cf\uff0c\u52a0\u4e0a\u963b\u585e\u72b6\u6001\u4efb\u52a1\u7684\u6570\u91cf\uff0c\u52a0\u4e0a\u5c31\u7eea\u72b6\u6001\u4efb\u52a1\u7684\u6570\u91cf\uff0c\u52a0\u4e0a\u7a7a\u95f2\u72b6\u6001\u4efb\u52a1\u7684\u6570\u91cf\uff0c\u52a0\u4e0a\u8fd0\u884c\u72b6\u6001\u4efb\u52a1\u7684\u6570\u91cf\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#223-vtaskgetruntimestats","title":"2.23  vTaskGetRunTimeStats()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dvoid vTaskGetRunTimeStats( char *pcWriteBuffer );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_88","title":"\u6982\u8981","text":"<p>FreeRTOS\u53ef\u4ee5\u914d\u7f6e\u4e3a\u6536\u96c6\u4efb\u52a1\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u3002\u4efb\u52a1\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u63d0\u4f9b\u5173\u4e8e\u6bcf\u4e2a\u4efb\u52a1\u6536\u5230\u7684\u5904\u7406\u65f6\u95f4\u7684\u4fe1\u606f\u3002\u63d0\u4f9b\u4e86\u7edd\u5bf9\u65f6\u95f4\u548c\u5e94\u7528\u7a0b\u5e8f\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u767e\u5206\u6bd4\u3002vTaskGetRunTimeStats() API\u51fd\u6570\u5c06\u6536\u96c6\u5230\u7684\u8fd0\u884c\u65f6\u7edf\u8ba1\u6570\u636e\u683c\u5f0f\u5316\u4e3a\u4eba\u7c7b\u53ef\u8bfb\u7684\u8868\u3002\u4e3a\u4efb\u52a1\u540d\u79f0\u3001\u5206\u914d\u7ed9\u8be5\u4efb\u52a1\u7684\u7edd\u5bf9\u65f6\u95f4\u4ee5\u53ca\u5206\u914d\u7ed9\u8be5\u4efb\u52a1\u7684\u5e94\u7528\u7a0b\u5e8f\u603b\u8fd0\u884c\u65f6\u95f4\u7684\u767e\u5206\u6bd4\u751f\u6210\u5217\u3002\u7cfb\u7edf\u4e2d\u7684\u6bcf\u4e2a\u4efb\u52a1\u90fd\u4f1a\u751f\u6210\u4e00\u884c\uff0c\u5305\u62ec\u201cIdle\u201d\u4efb\u52a1\u3002\u793a\u4f8b\u8f93\u51fa\u5982\u4e0b\u6240\u793a\uff1a</p> <p></p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_89","title":"\u53c2\u6570","text":"<p>pcWriteBuffer</p> <ul> <li>\u4e00\u79cd\u6307\u5411\u5b57\u7b26\u7f13\u51b2\u533a\u7684\u6307\u9488\uff0c\u5c06\u683c\u5f0f\u5316\u7684\u53ef\u8bfb\u8868\u5199\u5165\u5176\u4e2d\u3002\u7f13\u51b2\u533a\u5fc5\u987b\u5927\u5230\u8db3\u4ee5\u5bb9\u7eb3\u6574\u4e2a\u8868\uff0c\u56e0\u4e3a\u4e0d\u6267\u884c\u8fb9\u754c\u68c0\u67e5\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_90","title":"\u8fd4\u56de\u503c","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_91","title":"\u63d0\u793a","text":"<p>vTaskGetRunTimeStats()\u662f\u4e00\u4e2a\u5b9e\u7528\u51fd\u6570\uff0c\u63d0\u4f9b\u5b83\u53ea\u662f\u4e3a\u4e86\u65b9\u4fbf\u3002\u5b83\u4e0d\u88ab\u8ba4\u4e3a\u662f\u5185\u6838\u7684\u4e00\u90e8\u5206\u3002vTaskGetRunTimeStats()\u4f7f\u7528xTaskGetSystemState() API\u51fd\u6570\u83b7\u53d6\u539f\u59cb\u6570\u636e\u3002</p> <p>configGENERATE_RUN_TIME_STATS\u548cconfigUSE_STATS_FORMATTING_FUNCTIONS\u90fd\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u4fbfvTaskGetRunTimeStats()\u53ef\u7528\u3002\u8bbe\u7f6econfigGENERATE_RUN_TIME_STATS\u8fd8\u9700\u8981\u5e94\u7528\u7a0b\u5e8f\u5b9a\u4e49\u4ee5\u4e0b\u5b8f:</p> <ul> <li>portCONFIGURE_TIMER_FOR_RUN_TIME_STATS()</li> <li>\u5fc5\u987b\u63d0\u4f9b\u6b64\u5b8f\u6765\u521d\u59cb\u5316\u7528\u4e8e\u751f\u6210\u65f6\u95f4\u57fa\u6570\u7684\u4efb\u4f55\u5916\u8bbe\u3002\u8fd0\u884c\u65f6\u7edf\u8ba1\u6570\u636e\u6240\u4f7f\u7528\u7684\u65f6\u95f4\u57fa\u6570\u5fc5\u987b\u5177\u6709\u6bd4tick\u4e2d\u65ad\u66f4\u9ad8\u7684\u5206\u8fa8\u7387\uff0c\u5426\u5219\u6240\u6536\u96c6\u7684\u7edf\u8ba1\u6570\u636e\u53ef\u80fd\u592a\u4e0d\u51c6\u786e\u800c\u4e0d\u80fd\u771f\u6b63\u6709\u7528\u3002\u5efa\u8bae\u4f7f\u65f6\u95f4\u57fa\u51c6\u6bd4tick\u4e2d\u65ad\u5feb10\u523020\u500d</li> <li>portGET_RUN_TIME_COUNTER_VALUE(), or portALT_GET_RUN_TIME_COUNTER_VALUE(Time)</li> <li>\u5fc5\u987b\u63d0\u4f9b\u8fd9\u4e24\u4e2a\u5b8f\u4e2d\u7684\u4e00\u4e2a\u6765\u8fd4\u56de\u5f53\u524d\u7684\u65f6\u95f4\u57fa\u503c\u2014\u2014\u8fd9\u662f\u5e94\u7528\u7a0b\u5e8f\u5728\u9009\u62e9\u7684\u65f6\u95f4\u57fa\u5355\u5143\u4e2d\u8fd0\u884c\u7684\u603b\u65f6\u95f4\u3002\u5982\u679c\u4f7f\u7528\u4e86\u7b2c\u4e00\u4e2a\u5b8f\uff0c\u5219\u5fc5\u987b\u5b9a\u4e49\u8be5\u5b8f\u4ee5\u8ba1\u7b97\u5f53\u524d\u7684\u65f6\u95f4\u57fa\u503c\u3002\u5982\u679c\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u5b8f\uff0c\u5219\u5fc5\u987b\u5b9a\u4e49\u5b83\u5c06\u5176\u201cTime\u201d\u53c2\u6570\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7684\u65f6\u95f4\u57fa\u503c\u3002</li> </ul> <p>\u8fd9\u4e9b\u5b8f\u53ef\u4ee5\u5728FreeRTOSConfig.h\u4e2d\u5b9a\u4e49\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_92","title":"\u793a\u4f8b","text":"<pre><code>/* The LM3Sxxxx Eclipse demo application already includes a 20KHz timer interrupt.The interrupt handler was updated to simply increment a variable calledulHighFrequencyTimerTicks each time it executed.portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() then sets this variable to 0 andportGET_RUN_TIME_COUNTER_VALUE() returns its value. To implement this the following few lines are added to FreeRTOSConfig.h. */extern volatile unsigned long ulHighFrequencyTimerTicks;/* ulHighFrequencyTimerTicks is already being incremented at 20KHz. Just setits value back to 0. */#define portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() ( ulHighFrequencyTimerTicks = 0UL )/* Simply return the high frequency counter value. */#define portGET_RUN_TIME_COUNTER_VALUE() ulHighFrequencyTimerTicks/* The LPC17xx demo application does not include the high frequency interrupt test,so portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() is used to configure the timer 0peripheral to generate the time base. portGET_RUN_TIME_COUNTER_VALUE() simply returnsthe current timer 0 counter value. This was implemented using the following functionsand macros. *//* Defined in main.c. */void vConfigureTimerForRunTimeStats( void ){const unsigned long TCR_COUNT_RESET = 2,CTCR_CTM_TIMER = 0x00,TCR_COUNT_ENABLE = 0x01;/* Power up and feed the timer with a clock. */PCONP |= 0x02UL;PCLKSEL0 = (PCLKSEL0 &amp; (~(0x3&lt;&lt;2))) | (0x01 &lt;&lt; 2);/* Reset Timer 0 */T0TCR = TCR_COUNT_RESET;/* Just count up. */T0CTCR = CTCR_CTM_TIMER;/* Prescale to a frequency that is good enough to get a decent resolution,but not too fast so as to overflow all the time. */T0PR = ( configCPU_CLOCK_HZ / 10000UL ) - 1UL;/* Start the counter. */T0TCR = TCR_COUNT_ENABLE;}/* Defined in FreeRTOSConfig.h. */extern void vConfigureTimerForRunTimeStats( void );#define portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() vConfigureTimerForRunTimeStats()#define portGET_RUN_TIME_COUNTER_VALUE() T0TCvoid vAFunction( void ){/* Define a buffer that is large enough to hold the generated table. In most casesthe buffer will be too large to allocate on the stack, hence in this example it isdeclared static. */static char cBuffer[ BUFFER_SIZE ];/* Pass the buffer into vTaskGetRunTimeStats() to generate the table of data. */vTaskGetRunTimeStats( cBuffer );/* The generated information can be saved or viewed here. */}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#224-xtaskgetschedulerstate","title":"2.24 xTaskGetSchedulerState()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dBaseType_t xTaskGetSchedulerState( void );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_93","title":"\u6982\u8981","text":"<p>\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c\u8be5\u503c\u6307\u793a\u5728\u8c03\u7528xTaskGetSchedulerState()\u65f6\u8c03\u5ea6\u7a0b\u5e8f\u6240\u5904\u7684\u72b6\u6001\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_94","title":"\u53c2\u6570","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_95","title":"\u8fd4\u56de\u503c","text":"<p>taskSCHEDULER_NOT_STARTED</p> <ul> <li>\u8fd9\u4e2a\u503c\u53ea\u4f1a\u5728\u8c03\u7528vTaskStartScheduler()\u4e4b\u524d\u8c03\u7528xTaskGetSchedulerState()\u65f6\u8fd4\u56de\u3002</li> </ul> <p>taskSCHEDULER_RUNNING</p> <ul> <li>\u5982\u679cvTaskStartScheduler()\u5df2\u7ecf\u88ab\u8c03\u7528\uff0c\u53ea\u8981\u8c03\u5ea6\u7a0b\u5e8f\u4e0d\u5728Suspended\u72b6\u6001\uff0c\u5219\u8fd4\u56de\u3002</li> </ul> <p>taskSCHEDULER_SUSPENDED</p> <ul> <li>\u5f53\u8c03\u5ea6\u7a0b\u5e8f\u5904\u4e8eSuspended\u72b6\u6001\u65f6\u8fd4\u56de\uff0c\u56e0\u4e3a\u8c03\u7528\u4e86vTaskSuspendAll()\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_96","title":"\u63d0\u793a","text":"<p>INCLUDE_xTaskGetSchedulerState\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u4fbfxTaskGetSchedulerState()\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#225-uxtaskgetstackhighwatermark","title":"2.25 uxTaskGetStackHighWaterMark()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dUBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_97","title":"\u6982\u8981","text":"<p>\u6bcf\u4e2a\u4efb\u52a1\u7ef4\u62a4\u81ea\u5df1\u7684\u5806\u6808\uff0c\u5176\u603b\u5927\u5c0f\u5728\u521b\u5efa\u4efb\u52a1\u65f6\u6307\u5b9a\u3002uxTaskGetStackHighWaterMark()\u7528\u4e8e\u67e5\u8be2\u4e00\u4e2a\u4efb\u52a1\u79bb\u6ea2\u51fa\u5206\u914d\u7ed9\u5b83\u7684\u5806\u6808\u7a7a\u95f4\u6709\u591a\u8fd1\u3002\u8fd9\u4e2a\u503c\u79f0\u4e3a\u5806\u6808\u201c\u9ad8\u6c34\u4f4d\u6807\u5fd7\u201d\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_98","title":"\u53c2\u6570","text":"<p>xTask</p> <ul> <li>\u6b63\u5728\u67e5\u8be2\u5806\u6808\u9ad8\u6c34\u4f4d\u7684\u4efb\u52a1(\u4e3b\u9898\u4efb\u52a1)\u7684\u53e5\u67c4\u3002</li> <li>\u8981\u83b7\u5f97\u4efb\u52a1\u7684\u53e5\u67c4\uff0c\u4f7f\u7528xTaskCreate()\u521b\u5efa\u4efb\u52a1\u5e76\u4f7f\u7528pxCreatedTask\u53c2\u6570\uff0c\u6216\u8005\u4f7f\u7528xTaskCreateStatic()\u521b\u5efa\u4efb\u52a1\u5e76\u5b58\u50a8\u8fd4\u56de\u503c\uff0c\u6216\u8005\u5728\u8c03\u7528xTaskGetHandle()\u65f6\u4f7f\u7528\u4efb\u52a1\u7684\u540d\u79f0\u3002</li> <li>\u4e00\u4e2a\u4efb\u52a1\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012NULL\u6765\u4ee3\u66ff\u4e00\u4e2a\u6709\u6548\u7684\u4efb\u52a1\u53e5\u67c4\u6765\u67e5\u8be2\u5b83\u81ea\u5df1\u7684\u5806\u6808\u9ad8\u6c34\u4f4d\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_99","title":"\u8fd4\u56de\u503c","text":"<p>\u5f53\u4efb\u52a1\u6267\u884c\u548c\u4e2d\u65ad\u88ab\u5904\u7406\u65f6\uff0c\u4efb\u52a1\u6240\u4f7f\u7528\u7684\u5806\u6808\u91cf\u4f1a\u589e\u52a0\u6216\u51cf\u5c11\u3002uxTaskGetStackHighWaterMark()\u8fd4\u56de\u81ea\u4efb\u52a1\u5f00\u59cb\u6267\u884c\u4ee5\u6765\u53ef\u7528\u7684\u6700\u5c0f\u5269\u4f59\u5806\u6808\u7a7a\u95f4\u3002\u8fd9\u662f\u5f53\u5806\u6808\u4f7f\u7528\u7387\u8fbe\u5230\u6700\u5927(\u6216\u6700\u6df1)\u503c\u65f6\uff0c\u4ecd\u672a\u4f7f\u7528\u7684\u5806\u6808\u6570\u91cf\u3002\u9ad8\u6c34\u4f4d\u8d8a\u63a5\u8fd1\u4e8e\u96f6\uff0c\u4efb\u52a1\u8d8a\u63a5\u8fd1\u4e8e\u6ea2\u51fa\u5b83\u7684\u5806\u6808\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_100","title":"\u63d0\u793a","text":"<p>uxTaskGetStackHighWaterMark()\u53ef\u80fd\u9700\u8981\u76f8\u5f53\u957f\u7684\u65f6\u95f4\u6765\u6267\u884c\u3002\u56e0\u6b64\uff0c\u5efa\u8bae\u5c06\u5176\u4f7f\u7528\u9650\u4e8e\u6d4b\u8bd5\u548c\u8c03\u8bd5\u6784\u5efa\u3002INCLUDE_uxTaskGetStackHighWaterMark()\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u4fbfuxTaskGetStackHighWaterMark()\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_101","title":"\u793a\u4f8b","text":"<pre><code>void vTask1( void * pvParameters ){    UBaseType_t uxHighWaterMark;/* Inspect the high water mark of the calling task when the task starts toexecute. */    uxHighWaterMark = uxTaskGetStackHighWaterMark( NULL );    for( ;; )    {/* Call any function. */    vTaskDelay( 1000 );/* Calling a function will have used some stack space, so it will beexpected that uxTaskGetStackHighWaterMark() will return a lower valueat this point than when it was called on entry to the task function. */    uxHighWaterMark = uxTaskGetStackHighWaterMark( NULL );    }}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#226-etaskgetstate","title":"2.26 eTaskGetState()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201deTaskState eTaskGetState( TaskHandle_t pxTask );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_102","title":"\u6982\u8981","text":"<p>\u4f5c\u4e3a\u679a\u4e3e\u7c7b\u578b\u8fd4\u56de\u4efb\u52a1\u5728eTaskGetState()\u6267\u884c\u65f6\u5b58\u5728\u7684\u72b6\u6001\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_103","title":"\u53c2\u6570","text":"<p>pxTask</p> <ul> <li>\u4e3b\u9898\u4efb\u52a1\u7684\u53e5\u67c4</li> <li>\u8981\u83b7\u5f97\u4efb\u52a1\u7684\u53e5\u67c4\uff0c\u4f7f\u7528xTaskCreate()\u521b\u5efa\u4efb\u52a1\u5e76\u4f7f\u7528pxCreatedTask\u53c2\u6570\uff0c\u6216\u8005\u4f7f\u7528xTaskCreateStatic()\u521b\u5efa\u4efb\u52a1\u5e76\u5b58\u50a8\u8fd4\u56de\u503c\uff0c\u6216\u8005\u5728\u8c03\u7528xTaskGetHandle()\u65f6\u4f7f\u7528\u4efb\u52a1\u7684\u540d\u79f0\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_104","title":"\u8fd4\u56de\u503c","text":"<p>\u4e0b\u8868\u5217\u51fa\u4e86\u7531pxTask\u53c2\u6570\u5f15\u7528\u7684\u4efb\u52a1\u53ef\u80fd\u5b58\u5728\u7684\u6bcf\u4e2a\u53ef\u80fd\u72b6\u6001\u7684eTaskGetState()\u8fd4\u56de\u7684\u503c\u3002</p> State Return Value Running eRunning (the task is querying its own state) Ready eReady Blocked eBlocked Suspended eSuspended Deleted eDeleted (the task\u2019s structures are waiting to be cleaned up)"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_105","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86\u8ba9eTaskGetState() API\u51fd\u6570\u53ef\u7528\uff0c\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u5c06INCLUDE_eTaskGetState\u8bbe\u7f6e\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#227-uxtaskgetsystemstate","title":"2.27 uxTaskGetSystemState()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dUBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray,                                  const UBaseType_t uxArraySize,                                  unsigned long * const pulTotalRunTime );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_106","title":"\u6982\u8981","text":"<p>uxTaskGetSystemState()</p> <ul> <li> <p>\u4e3a\u7cfb\u7edf\u4e2d\u7684\u6bcf\u4e2a\u4efb\u52a1\u586b\u5145\u4e00\u4e2aTaskStatus_t\u7ed3\u6784\u3002TaskStatus_t\u7ed3\u6784\u5305\u542b\u4efb\u52a1\u7684\u53e5\u67c4\u3001\u540d\u79f0\u3001\u4f18\u5148\u7ea7\u3001\u72b6\u6001\u548c\u6d88\u8017\u7684\u8fd0\u884c\u65f6\u95f4\u603b\u91cf\u3002</p> </li> <li> <p>\u793a\u4f8b\u4e2d\u5b9a\u4e49\u4e86TaskStatus_t\u7ed3\u6784\u3002</p> </li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_107","title":"\u53c2\u6570","text":"<p>pxTaskStatusArray</p> <ul> <li>\u4e00\u4e2a\u6307\u5411TaskStatus_t\u7ed3\u6784\u6570\u7ec4\u7684\u6307\u9488\u3002\u5bf9\u4e8eRTOS\u63a7\u5236\u4e0b\u7684\u6bcf\u4e2a\u4efb\u52a1\uff0c\u6570\u7ec4\u4e2d\u5fc5\u987b\u81f3\u5c11\u5305\u542b\u4e00\u4e2aTaskStatus_t\u7ed3\u6784\u3002RTOS\u63a7\u5236\u4e0b\u7684\u4efb\u52a1\u6570\u91cf\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528uxTaskGetNumberOfTasks() API\u51fd\u6570\u6765\u786e\u5b9a\u3002</li> </ul> <p>uxArraySize</p> <ul> <li>pxTaskStatusArray\u53c2\u6570\u6240\u6307\u5411\u7684\u6570\u7ec4\u7684\u5927\u5c0f\u3002\u6307\u5b9a\u7684\u5927\u5c0f\u662f\u6570\u7ec4\u4e2d\u7d22\u5f15\u7684\u6570\u91cf(\u6570\u7ec4\u4e2d\u5305\u542b\u7684TaskStatus_t\u7ed3\u6784\u7684\u6570\u91cf)\uff0c\u800c\u4e0d\u662f\u6570\u7ec4\u4e2d\u7684\u5b57\u8282\u6570\u3002</li> </ul> <p>pulTotalRunTime</p> <ul> <li>\u5982\u679c\u5728FreeRTOSConfig.h\u4e2d\u5c06configGENERATE_RUN_TIME_STATS\u8bbe\u7f6e\u4e3a1\uff0c\u90a3\u4e48uxTaskGetSystemState()\u5c06*pulTotalRunTime\u8bbe\u7f6e\u4e3a\u81ea\u76ee\u6807\u542f\u52a8\u4ee5\u6765\u7684\u603b\u8fd0\u884c\u65f6\u95f4(\u7531\u8fd0\u884c\u65f6\u7edf\u8ba1\u65f6\u949f\u5b9a\u4e49)\u3002pulTotalRunTime\u53ef\u4ee5\u8bbe\u7f6e\u4e3aNULL\uff0c\u4ee5\u5ffd\u7565\u603b\u8fd0\u884c\u65f6\u503c\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_108","title":"\u8fd4\u56de\u503c","text":"<p>\u7531uxTaskGetSystemState()\u586b\u5145\u7684TaskStatus_t\u7ed3\u6784\u7684\u6570\u91cf\u3002\u8fd9\u4e2a\u503c\u5e94\u8be5\u7b49\u4e8euxTaskGetNumberOfTasks() API\u51fd\u6570\u8fd4\u56de\u7684\u503c\uff0c\u4f46\u662f\u5982\u679c\u901a\u8fc7uxArraySize\u53c2\u6570\u4f20\u9012\u7684\u503c\u592a\u5c0f\uff0c\u5219\u4e3a\u96f6\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_109","title":"\u63d0\u793a","text":"<p>\u6b64\u51fd\u6570\u4ec5\u7528\u4e8e\u8c03\u8bd5\uff0c\u56e0\u4e3a\u4f7f\u7528\u5b83\u4f1a\u5bfc\u81f4\u8c03\u5ea6\u5668\u5728\u8f83\u957f\u65f6\u95f4\u5185\u4fdd\u6301\u6302\u8d77\u3002</p> <p>\u8981\u83b7\u53d6\u5355\u4e2a\u4efb\u52a1\u7684\u4fe1\u606f\uff0c\u800c\u4e0d\u662f\u7cfb\u7edf\u4e2d\u6240\u6709\u4efb\u52a1\u7684\u4fe1\u606f\uff0c\u8bf7\u4f7f\u7528vTaskGetTaskInfo()\u800c\u4e0d\u662fuxTaskGetSystemState()\u3002</p> <p>configUSE_TRACE_FACILITY\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u5b9a\u4e49\u4e3a1\uff0c\u4ee5\u4fbfuxTaskGetSystemState()\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_110","title":"\u793a\u4f8b","text":"<pre><code>/* This example demonstrates how a human readable table of run time statsinformation is generated from raw data provided by uxTaskGetSystemState().The human readable table is written to pcWriteBuffer. (see the vTaskList()API function which actually does just this). */void vTaskGetRunTimeStats( signed char *pcWriteBuffer ){    TaskStatus_t *pxTaskStatusArray;    volatile UBaseType_t uxArraySize, x;    unsigned long ulTotalRunTime, ulStatsAsPercentage;/* Make sure the write buffer does not contain a string. */    *pcWriteBuffer = 0x00;/* Take a snapshot of the number of tasks in case it changes while thisfunction is executing. */    uxArraySize = uxTaskGetNumberOfTasks();/* Allocate a TaskStatus_t structure for each task. An array could beallocated statically at compile time. */    pxTaskStatusArray = pvPortMalloc( uxArraySize * sizeof( TaskStatus_t ) );    if( pxTaskStatusArray != NULL )    {/* Generate raw status information about each task. */        uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &amp;ulTotalRunTime );/* For percentage calculations. */        ulTotalRunTime /= 100UL;/* Avoid divide by zero errors. */        if( ulTotalRunTime &gt; 0 )        {/* For each populated position in the pxTaskStatusArray array,format the raw data as human readable ASCII data. */            for( x = 0; x &lt; uxArraySize; x++ )            {/* What percentage of the total run time has the task used?This will always be rounded down to the nearest integer.ulTotalRunTimeDiv100 has already been divided by 100. */                ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalRunTime;                if( ulStatsAsPercentage &gt; 0UL )                {                    sprintf( pcWriteBuffer, \"%s\\t\\t%lu\\t\\t%lu%%\\r\\n\",                    pxTaskStatusArray[ x ].pcTaskName,                    pxTaskStatusArray[ x ].ulRunTimeCounter,                    ulStatsAsPercentage );                }                else                {/* If the percentage is zero here then the task hasconsumed less than 1% of the total run time. */                    sprintf( pcWriteBuffer, \"%s\\t\\t%lu\\t\\t&lt;1%%\\r\\n\",                    pxTaskStatusArray[ x ].pcTaskName,                    pxTaskStatusArray[ x ].ulRunTimeCounter );                }                pcWriteBuffer += strlen( ( char * ) pcWriteBuffer );            }        }/* The array is no longer needed, free the memory it consumes. */        vPortFree( pxTaskStatusArray );    }}typedef struct xTASK_STATUS{    /* The handle of the task to which the rest of the information in the structurerelates. */    TaskHandle_t xHandle;    /* A pointer to the task's name. This value will be invalid if the task was deletedsince the structure was populated! */    const signed char *pcTaskName;/* A number unique to the task. */    UBaseType_t xTaskNumber;/* The state in which the task existed when the structure was populated. */    eTaskState eCurrentState;/* The priority at which the task was running (may be inherited) when the structurewas populated. */    UBaseType_t uxCurrentPriority;/* The priority to which the task will return if the task's current priority has beeninherited to avoid unbounded priority inversion when obtaining a mutex. Only validif configUSE_MUTEXES is defined as 1 in FreeRTOSConfig.h. */    UBaseType_t uxBasePriority;/* The total run time allocated to the task so far, as defined by the run time statsclock. Only valid when configGENERATE_RUN_TIME_STATS is defined as 1 inFreeRTOSConfig.h. */    unsigned long ulRunTimeCounter;/* Points to the lowest address of the task's stack area. */    StackType_t *pxStackBase;/* The minimum amount of stack space that has remained for the task since the task wascreated. The closer this value is to zero the closer the task has come to overflowingits stack. */    unsigned short usStackHighWaterMark;} TaskStatus_t;\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#228-vtaskgettaskinfo","title":"2.28 vTaskGetTaskInfo()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dvoid vTaskGetTaskInfo( TaskHandle_t xTask,                        TaskStatus_t *pxTaskStatus,                        BaseType_t xGetFreeStackSpace,                        eTaskState eState );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_111","title":"\u6982\u8981","text":"<p>vTaskGetTaskInfo()\u4e3a\u5355\u4e2a\u4efb\u52a1\u586b\u5145TaskStatus_t\u7ed3\u6784\u3002TaskStatus_t\u7ed3\u6784\u5305\u542b\u4efb\u52a1\u7684\u53e5\u67c4\u3001\u540d\u79f0\u3001\u4f18\u5148\u7ea7\u3001\u72b6\u6001\u548c\u6d88\u8017\u7684\u8fd0\u884c\u65f6\u95f4\u603b\u91cf\u3002</p> <p>TaskStatus_t\u5728\u524d\u6587\u5df2\u6709\u5b9a\u4e49\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_112","title":"\u53c2\u6570","text":"<p>xTask</p> <ul> <li> <p>\u6b63\u5728\u67e5\u8be2\u7684\u4efb\u52a1\u7684\u53e5\u67c4\u3002</p> </li> <li> <p>\u8981\u83b7\u5f97\u4efb\u52a1\u7684\u53e5\u67c4\uff0c\u4f7f\u7528xTaskCreate()\u521b\u5efa\u4efb\u52a1\u5e76\u4f7f\u7528pxCreatedTask\u53c2\u6570\uff0c\u6216\u8005\u4f7f\u7528xTaskCreateStatic()\u521b\u5efa\u4efb\u52a1\u5e76\u5b58\u50a8\u8fd4\u56de\u503c\uff0c\u6216\u8005\u5728\u8c03\u7528xTaskGetHandle()\u65f6\u4f7f\u7528\u4efb\u52a1\u7684\u540d\u79f0\u3002</p> </li> </ul> <p>pxTaskStatus</p> <ul> <li>\u5fc5\u987b\u6307\u5411\u7c7b\u578b\u4e3aTaskStatus_t\u7684\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u5c06\u88ab\u67e5\u8be2\u7684\u4efb\u52a1\u4fe1\u606f\u586b\u5145\u3002</li> </ul> <p>xGetFreeStackSpace</p> <ul> <li>TaskStatus_t\u7ed3\u6784\u4f53\u5305\u542b\u4e00\u4e2a\u6210\u5458\uff0c\u7528\u4e8e\u62a5\u544a\u6b63\u5728\u67e5\u8be2\u7684\u4efb\u52a1\u7684\u5806\u6808\u9ad8\u6c34\u4f4d\u6807\u8bb0\u3002\u5806\u6808\u9ad8\u6c34\u4f4d\u6807\u5fd7\u662f\u4efb\u52a1\u66fe\u7ecf\u5b58\u5728\u7684\u6700\u5c0f\u5806\u6808\u7a7a\u95f4\uff0c\u6240\u4ee5\u8fd9\u4e2a\u6570\u5b57\u8d8a\u63a5\u8fd1\u96f6\uff0c\u4efb\u52a1\u8d8a\u63a5\u8fd1\u6ea2\u51fa\u5176\u5806\u6808\u3002\u8ba1\u7b97\u5806\u6808\u9ad8\u6c34\u4f4d\u7ebf\u9700\u8981\u76f8\u5f53\u957f\u7684\u65f6\u95f4\uff0c\u5e76\u4e14\u53ef\u80fd\u4f7f\u7cfb\u7edf\u6682\u65f6\u65e0\u54cd\u5e94\u2014\u56e0\u6b64\u63d0\u4f9b\u4e86xGetFreeStackSpace\u53c2\u6570\u4ee5\u5141\u8bb8\u8df3\u8fc7\u9ad8\u6c34\u4f4d\u7ebf\u68c0\u67e5\u3002\u5982\u679cxGetFreeStackSpace\u6ca1\u6709\u8bbe\u7f6e\u4e3apdFALSE\uff0c\u5219\u9ad8\u6c34\u4f4d\u503c\u53ea\u4f1a\u5199\u5165TaskStatus_t\u7ed3\u6784\u3002</li> </ul> <p>eState</p> <ul> <li>TaskStatus_t\u7ed3\u6784\u4f53\u5305\u542b\u4e00\u4e2a\u6210\u5458\uff0c\u7528\u4e8e\u62a5\u544a\u6b63\u5728\u67e5\u8be2\u7684\u4efb\u52a1\u7684\u72b6\u6001\u3002\u83b7\u53d6\u4efb\u52a1\u72b6\u6001\u4e0d\u5982\u7b80\u5355\u7684\u8d4b\u503c\u5feb\u2014\u2014\u56e0\u6b64\u63d0\u4f9beState\u53c2\u6570\u4ee5\u5141\u8bb8\u4eceTaskStatus_t\u7ed3\u6784\u4e2d\u7701\u7565\u72b6\u6001\u4fe1\u606f\u3002\u8981\u83b7\u53d6\u72b6\u6001\u4fe1\u606f\uff0c\u8bf7\u5c06eState\u8bbe\u7f6e\u4e3aeInvalid -\u5426\u5219\u5728eState\u4e2d\u4f20\u9012\u7684\u503c\u5c06\u4f5c\u4e3aTaskStatus_t\u7ed3\u6784\u4e2d\u7684\u4efb\u52a1\u72b6\u6001\u62a5\u544a\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_113","title":"\u63d0\u793a","text":"<p>\u6b64\u51fd\u6570\u4ec5\u7528\u4e8e\u8c03\u8bd5\uff0c\u56e0\u4e3a\u4f7f\u7528\u5b83\u53ef\u80fd\u5bfc\u81f4\u8c03\u5ea6\u5668\u5728\u8f83\u957f\u65f6\u95f4\u5185\u4fdd\u6301\u6302\u8d77\u3002</p> <p>\u8981\u83b7\u53d6\u7cfb\u7edf\u4e2d\u6240\u6709\u4efb\u52a1\u7684TaskStatus_t\u7ed3\u6784\uff0c\u4f7f\u7528uxTaskGetSystemState()\u4ee3\u66ffvTaskGetTaskInfo()\u3002</p> <p>configUSE_TRACE_FACILITY\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u5b9a\u4e49\u4e3a1\uff0c\u4ee5\u4fbfuxTaskGetSystemState()\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_114","title":"\u793a\u4f8b","text":"<pre><code>void vAFunction( void ){    TaskHandle_t xHandle;    TaskStatus_t xTaskDetails;/* Obtain the handle of a task from its name. */    xHandle = xTaskGetHandle( \"Task_Name\" );/* Check the handle is not NULL. */    configASSERT( xHandle );/* Use the handle to obtain further information about the task. */    vTaskGetTaskInfo( /* The handle of the task being queried. */                    xHandle,/* The TaskStatus_t structure to complete with information on xHandle. */                    &amp;xTaskDetails,/* Include the stack high water mark value in the TaskStatus_tstructure. */                    pdTRUE,/* Include the task state in the TaskStatus_t structure. */                    eInvalid );}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#229-pvtaskgetthreadlocalstoragepointer","title":"2.29 pvTaskGetThreadLocalStoragePointer()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dvoid *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery,                                          BaseType_t xIndex );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_115","title":"\u6982\u8981","text":"<p>\u7ebf\u7a0b\u672c\u5730\u5b58\u50a8(\u6216TLS)\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u5c06\u503c\u5b58\u50a8\u5728\u4efb\u52a1\u7684\u63a7\u5236\u5757\u4e2d\uff0c\u4f7f\u503c\u7279\u5b9a\u4e8e\u4efb\u52a1\u672c\u8eab(\u5c40\u90e8\u4e8e\u4efb\u52a1)\uff0c\u5e76\u5141\u8bb8\u6bcf\u4e2a\u4efb\u52a1\u62e5\u6709\u81ea\u5df1\u7684\u552f\u4e00\u503c\u3002</p> <p>\u6bcf\u4e2a\u4efb\u52a1\u90fd\u6709\u81ea\u5df1\u7684\u6307\u9488\u6570\u7ec4\uff0c\u53ef\u4ee5\u7528\u4f5c\u7ebf\u7a0b\u672c\u5730\u5b58\u50a8\u3002\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15\u6570\u7531FreeRTOSConfig.h\u4e2d\u7684configignum_thread_local_storage_pointer\u7f16\u8bd1\u65f6\u914d\u7f6e\u5e38\u91cf\u8bbe\u7f6e\u3002</p> <p>pvTaskGetThreadLocalStoragePointer()\u4ece\u6570\u7ec4\u7684\u7d22\u5f15\u4e2d\u8bfb\u53d6\u4e00\u4e2a\u503c\uff0c\u6709\u6548\u5730\u68c0\u7d22\u7ebf\u7a0b\u672c\u5730\u503c\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_116","title":"\u53c2\u6570","text":"<p>xTaskToQuery</p> <ul> <li>\u4ece\u5176\u4e2d\u8bfb\u53d6\u7ebf\u7a0b\u672c\u5730\u6570\u636e\u7684\u4efb\u52a1\u7684\u53e5\u67c4\u3002</li> <li>\u4e00\u4e2a\u4efb\u52a1\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528NULL\u4f5c\u4e3a\u53c2\u6570\u503c\u8bfb\u53d6\u5b83\u81ea\u5df1\u7684\u7ebf\u7a0b\u672c\u5730\u6570\u636e\u3002</li> </ul> <p>xIndex</p> <ul> <li>\u4ece\u5176\u4e2d\u8bfb\u53d6\u6570\u636e\u7684\u7ebf\u7a0b\u672c\u5730\u5b58\u50a8\u9635\u5217\u7684\u7d22\u5f15\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_117","title":"\u8fd4\u56de\u503c","text":"<p>\u4ece\u4efb\u52a1\u7684\u7ebf\u7a0b\u672c\u5730\u5b58\u50a8\u9635\u5217\u7d22\u5f15xIndex\u8bfb\u53d6\u7684\u503c\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_118","title":"\u793a\u4f8b","text":"<pre><code>uint32_t ulVariable;/* Read the value stored in index 5 of the calling task's thread local storagearray into ulVariable. */ulVariable = ( uint32_t ) pvTaskGetThreadLocalStoragePointer( NULL, 5 );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#230-pctaskgetname","title":"2.30 pcTaskGetName()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dchar * pcTaskGetName( TaskHandle_t xTaskToQuery );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_119","title":"\u6982\u8981","text":"<p>\u67e5\u8be2\u4efb\u52a1\u7684\u4eba\u7c7b\u53ef\u8bfb\u6587\u672c\u540d\u79f0\u3002\u4f7f\u7528\u7528\u4e8e\u521b\u5efa\u4efb\u52a1\u7684xTaskCreate()\u6216xTaskCreateStatic() API\u51fd\u6570\u8c03\u7528\u7684pcName\u53c2\u6570\uff0c\u5c06\u6587\u672c\u540d\u79f0\u5206\u914d\u7ed9\u4efb\u52a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_120","title":"\u53c2\u6570","text":"<p>xTaskToQuery</p> <ul> <li> <p>\u6b63\u5728\u67e5\u8be2\u7684\u4efb\u52a1\u7684\u53e5\u67c4(\u4e3b\u9898\u4efb\u52a1)\u3002</p> </li> <li> <p>\u8981\u83b7\u5f97\u4efb\u52a1\u7684\u53e5\u67c4\uff0c\u4f7f\u7528xTaskCreate()\u521b\u5efa\u4efb\u52a1\u5e76\u4f7f\u7528pxCreatedTask\u53c2\u6570\uff0c\u6216\u8005\u4f7f\u7528xTaskCreateStatic()\u521b\u5efa\u4efb\u52a1\u5e76\u5b58\u50a8\u8fd4\u56de\u503c\uff0c\u6216\u8005\u5728\u8c03\u7528xTaskGetHandle()\u65f6\u4f7f\u7528\u4efb\u52a1\u7684\u540d\u79f0\u3002</p> </li> <li> <p>\u4efb\u52a1\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012NULL\u6765\u4ee3\u66ff\u6709\u6548\u7684\u4efb\u52a1\u53e5\u67c4\u6765\u67e5\u8be2\u81ea\u5df1\u7684\u540d\u79f0\u3002</p> </li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_121","title":"\u8fd4\u56de\u503c","text":"<p>\u4efb\u52a1\u540d\u662f\u6807\u51c6\u7684\u4ee5NULL\u7ed3\u5c3e\u7684C\u5b57\u7b26\u4e32\u3002\u8fd4\u56de\u7684\u503c\u662f\u4e00\u4e2a\u6307\u5411\u4e3b\u9898\u4efb\u52a1\u540d\u79f0\u7684\u6307\u9488\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#231-xtaskgettickcount","title":"2.31 xTaskGetTickCount()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dTickType_t xTaskGetTickCount( void );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_122","title":"\u6982\u8981","text":"<p>\u6ef4\u7b54\u8ba1\u6570\u662f\u81ea\u8c03\u5ea6\u7a0b\u5e8f\u542f\u52a8\u4ee5\u6765\u53d1\u751f\u7684\u6ef4\u7b54\u4e2d\u65ad\u7684\u603b\u6570\u3002xTaskGetTickCount()\u8fd4\u56de\u5f53\u524d\u6ef4\u7b54\u8ba1\u6570\u503c\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_123","title":"\u53c2\u6570","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_124","title":"\u8fd4\u56de\u503c","text":"<p>xTaskGetTickCount()\u603b\u662f\u8fd4\u56de\u8c03\u7528xTaskGetTickCount()\u65f6\u7684tick\u8ba1\u6570\u503c\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_125","title":"\u63d0\u793a","text":"<p>\u4e00\u4e2atick period\u4ee3\u8868\u7684\u5b9e\u9645\u65f6\u95f4\u53d6\u51b3\u4e8e\u5728FreeRTOSConfig.h\u4e2d\u5206\u914d\u7ed9configTICK_RATE_HZ\u7684\u503c\u3002pdMS_TO_TICKS()\u5b8f\u53ef\u7528\u4e8e\u5c06\u65f6\u95f4\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u8f6c\u6362\u4e3a\u4ee5\u201cticks\u201d\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u3002</p> <p>\u6ef4\u7b54\u8ba1\u6570\u6700\u7ec8\u4f1a\u6ea2\u51fa\u5e76\u8fd4\u56de\u5230\u96f6\u3002\u8fd9\u5c06\u4e0d\u4f1a\u5f71\u54cd\u5185\u6838\u7684\u5185\u90e8\u64cd\u4f5c\u2014\u4f8b\u5982\uff0c\u4efb\u52a1\u5c06\u59cb\u7ec8\u963b\u585e\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u5185\uff0c\u5373\u4f7f\u5728\u4efb\u52a1\u5904\u4e8eBlocked\u72b6\u6001\u65f6\u65f6\u949f\u8ba1\u6570\u6ea2\u51fa\u3002\u4f46\u662f\uff0c\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u76f4\u63a5\u4f7f\u7528\u523b\u5ea6\u6570\u503c\uff0c\u5219\u5bbf\u4e3b\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u8003\u8651\u6ea2\u51fa\u3002</p> <p>\u6ef4\u7b54\u8ba1\u6570\u6ea2\u51fa\u7684\u9891\u7387\u53d6\u51b3\u4e8e\u6ef4\u7b54\u9891\u7387\u548c\u7528\u4e8e\u4fdd\u5b58\u8ba1\u6570\u503c\u7684\u6570\u636e\u7c7b\u578b\u3002\u5982\u679cconfigUSE_16_BIT_TICKS\u8bbe\u7f6e\u4e3a1\uff0c\u90a3\u4e48\u6ef4\u7b54\u8ba1\u6570\u5c06\u88ab\u4fdd\u5b58\u5728\u4e00\u4e2a16\u4f4d\u53d8\u91cf\u4e2d\u3002\u5982\u679cconfigUSE_16_BIT_TICKS\u8bbe\u7f6e\u4e3a0\uff0c\u90a3\u4e48\u6ef4\u7b54\u8ba1\u6570\u5c06\u4fdd\u5b58\u5728\u4e00\u4e2a32\u4f4d\u53d8\u91cf\u4e2d\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_126","title":"\u793a\u4f8b","text":"<pre><code>void vAFunction( void ){    TickType_t xTime1, xTime2, xExecutionTime;    /* Get the time the function started. */    xTime1 = xTaskGetTickCount();    /* Perform some operation. */    /* Get the time following the execution of the operation. */    xTime2 = xTaskGetTickCount();    /* Approximately how long did the operation take? */    xExecutionTime = xTime2 \u2013 xTime1;}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#232-xtaskgettickcountfromisr","title":"2.32 xTaskGetTickCountFromISR()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dTickType_t xTaskGetTickCountFromISR( void );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_127","title":"\u6982\u8981","text":"<p>xTaskGetTickCount()\u7684\u4e00\u4e2a\u7248\u672c\uff0c\u53ef\u4ee5\u4eceISR\u8c03\u7528\u3002</p> <p>\u6ef4\u7b54\u8ba1\u6570\u662f\u81ea\u8c03\u5ea6\u7a0b\u5e8f\u542f\u52a8\u4ee5\u6765\u53d1\u751f\u7684\u6ef4\u7b54\u4e2d\u65ad\u7684\u603b\u6570\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_128","title":"\u53c2\u6570","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_129","title":"\u8fd4\u56de\u503c","text":"<p>xTaskGetTickCountFromISR()\u603b\u662f\u5728\u8c03\u7528xTaskGetTickCountFromISR()\u65f6\u8fd4\u56detick\u8ba1\u6570\u503c\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_130","title":"\u63d0\u793a","text":"<p>\u4e00\u4e2atick period\u4ee3\u8868\u7684\u5b9e\u9645\u65f6\u95f4\u53d6\u51b3\u4e8e\u5728FreeRTOSConfig.h\u4e2d\u5206\u914d\u7ed9configTICK_RATE_HZ\u7684\u503c\u3002pdMS_TO_TICKS()\u5b8f\u53ef\u7528\u4e8e\u5c06\u65f6\u95f4\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u8f6c\u6362\u4e3a\u4ee5\u201cticks\u201d\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u3002</p> <p>\u6ef4\u7b54\u8ba1\u6570\u6700\u7ec8\u4f1a\u6ea2\u51fa\u5e76\u8fd4\u56de\u5230\u96f6\u3002\u8fd9\u5c06\u4e0d\u4f1a\u5f71\u54cd\u5185\u6838\u7684\u5185\u90e8\u64cd\u4f5c\u2014\u4f8b\u5982\uff0c\u4efb\u52a1\u5c06\u59cb\u7ec8\u963b\u585e\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u5185\uff0c\u5373\u4f7f\u5728\u4efb\u52a1\u5904\u4e8eBlocked\u72b6\u6001\u65f6\u65f6\u949f\u8ba1\u6570\u6ea2\u51fa\u3002\u4f46\u662f\uff0c\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u76f4\u63a5\u4f7f\u7528\u523b\u5ea6\u6570\u503c\uff0c\u5219\u5bbf\u4e3b\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u8003\u8651\u6ea2\u51fa\u3002</p> <p>\u6ef4\u7b54\u8ba1\u6570\u6ea2\u51fa\u7684\u9891\u7387\u53d6\u51b3\u4e8e\u6ef4\u7b54\u9891\u7387\u548c\u7528\u4e8e\u4fdd\u5b58\u8ba1\u6570\u503c\u7684\u6570\u636e\u7c7b\u578b\u3002\u5982\u679cconfigUSE_16_BIT_TICKS\u8bbe\u7f6e\u4e3a1\uff0c\u90a3\u4e48\u6ef4\u7b54\u8ba1\u6570\u5c06\u88ab\u4fdd\u5b58\u5728\u4e00\u4e2a16\u4f4d\u53d8\u91cf\u4e2d\u3002\u5982\u679cconfigUSE_16_BIT_TICKS\u8bbe\u7f6e\u4e3a0\uff0c\u90a3\u4e48\u6ef4\u7b54\u8ba1\u6570\u5c06\u4fdd\u5b58\u5728\u4e00\u4e2a32\u4f4d\u53d8\u91cf\u4e2d\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_131","title":"\u793a\u4f8b","text":"<pre><code>void vAnISR( void ){    static TickType_t xTimeISRLastExecuted = 0;    TickType_t xTimeNow, xTimeBetweenInterrupts;    /* Store the time at which this interrupt was entered. */    xTimeNow = xTaskGetTickCountFromISR();    /* Perform some operation. */    /* How many ticks occurred between this and the previous interrupt? */    xTimeBetweenInterrupts = xTimeISRLastExecuted \u2013 xTimeNow;    /* If more than 200 ticks occurred between this and the previous interrupt then    do something. */    if( xTimeBetweenInterrupts &gt; 200 )    {    /* Take appropriate action here. */    }    /* Remember the time at which this interrupt was entered. */    xTimeISRLastExecuted = xTimeNow;}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#233-vtasklist","title":"2.33 vTaskList()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dvoid vTaskList( char *pcWriteBuffer );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_132","title":"\u6982\u8981","text":"<p>\u5728\u5b57\u7b26\u7f13\u51b2\u533a\u4e2d\u521b\u5efa\u4e00\u4e2a\u4eba\u7c7b\u53ef\u8bfb\u7684\u8868\uff0c\u63cf\u8ff0\u5728\u8c03\u7528vTaskList()\u65f6\u6bcf\u4e2a\u4efb\u52a1\u7684\u72b6\u6001\u3002\u4e0b\u56fe\u663e\u793a\u4e86\u4e00\u4e2a\u793a\u4f8b\u3002</p> <p></p> <p>\u8be5\u8868\u5305\u62ec\u4ee5\u4e0b\u4fe1\u606f:</p> <ul> <li>Name\u2014\u2014\u8fd9\u662f\u5728\u521b\u5efa\u4efb\u52a1\u65f6\u6307\u5b9a\u7ed9\u4efb\u52a1\u7684\u540d\u79f0\u3002</li> <li>State\u2014\u2014\u8c03\u7528vTaskList()\u65f6\u4efb\u52a1\u7684\u72b6\u6001\uff0c\u5982\u4e0b\u6240\u793a:</li> <li>'B '\uff0c\u5982\u679c\u4efb\u52a1\u5904\u4e8e\u963b\u585e\u72b6\u6001\u3002</li> <li>\u5982\u679c\u4efb\u52a1\u5904\u4e8e\u5c31\u7eea\u72b6\u6001\uff0c\u5219\u4f7f\u7528' R '\u3002</li> <li>' S '\u8868\u793a\u4efb\u52a1\u5904\u4e8e\u6302\u8d77\u72b6\u6001\uff0c\u6216\u5904\u4e8e\u672a\u8d85\u65f6\u7684\u963b\u585e\u72b6\u6001\u3002</li> <li>'D '\u5982\u679c\u4efb\u52a1\u5df2\u7ecf\u88ab\u5220\u9664\uff0c\u4f46\u7a7a\u95f2\u4efb\u52a1\u8fd8\u6ca1\u6709\u91ca\u653e\u8be5\u4efb\u52a1\u7528\u6765\u4fdd\u5b58\u5176\u6570\u636e\u7ed3\u6784\u548c\u5806\u6808\u7684\u5185\u5b58\u3002</li> <li>Priority \u2014\u2014\u8c03\u7528vTaskList()\u65f6\u5206\u914d\u7ed9\u4efb\u52a1\u7684\u4f18\u5148\u7ea7</li> <li>Stack\u2014\u2014\u663e\u793a\u4efb\u52a1\u5806\u6808\u7684\u201c\u9ad8\u6c34\u4f4d\u7ebf\u201d\u3002\u8fd9\u662f\u4efb\u52a1\u751f\u547d\u5468\u671f\u5185\u53ef\u7528\u7684\u6700\u5c0f\u7a7a\u95f2\u5806\u6808\u6570\u91cf\u3002\u8be5\u503c\u8d8a\u63a5\u8fd1\u4e8e\u96f6\uff0c\u5219\u4efb\u52a1\u8d8a\u63a5\u8fd1\u4e8e\u6ea2\u51fa\u5176\u5806\u6808\u3002</li> <li>Num \u2014\u2014\u8fd9\u662f\u5206\u914d\u7ed9\u6bcf\u4e2a\u4efb\u52a1\u7684\u552f\u4e00\u6570\u5b57\u3002\u5f53\u591a\u4e2a\u4efb\u52a1\u88ab\u5206\u914d\u4e86\u76f8\u540c\u7684\u540d\u79f0\u65f6\uff0c\u5b83\u9664\u4e86\u5e2e\u52a9\u8bc6\u522b\u4efb\u52a1\u4e4b\u5916\u6ca1\u6709\u5176\u4ed6\u7528\u9014\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_133","title":"\u53c2\u6570","text":"<p>pcWriteBuffer</p> <ul> <li>\u5c06\u8868\u6587\u672c\u5199\u5165\u5176\u4e2d\u7684\u7f13\u51b2\u533a\u3002\u7531\u4e8e\u4e0d\u6267\u884c\u8fb9\u754c\u68c0\u67e5\uff0c\u56e0\u6b64\u8fd9\u4e2a\u503c\u5fc5\u987b\u5927\u5230\u8db3\u4ee5\u5bb9\u7eb3\u6574\u4e2a\u8868\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_134","title":"\u8fd4\u56de\u503c","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_135","title":"\u63d0\u793a","text":"<p>vTaskList()\u662f\u4e00\u4e2a\u5b9e\u7528\u51fd\u6570\uff0c\u63d0\u4f9b\u5b83\u53ea\u662f\u4e3a\u4e86\u65b9\u4fbf\u3002\u5b83\u4e0d\u88ab\u8ba4\u4e3a\u662f\u5185\u6838\u7684\u4e00\u90e8\u5206\u3002vTaskList()\u4f7f\u7528xTaskGetSystemState() API\u51fd\u6570\u83b7\u53d6\u539f\u59cb\u6570\u636e\u3002</p> <p>vTaskList()\u5c06\u5728\u5176\u6267\u884c\u671f\u95f4\u7981\u7528\u4e2d\u65ad\u3002\u5bf9\u4e8e\u5305\u542b\u786c\u5b9e\u65f6\u529f\u80fd\u7684\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\uff0c\u8fd9\u53ef\u80fd\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\u3002</p> <p>configUSE_TRACE_FACILITY\u548cconfigUSE_STATS_FORMATTING_FUNCTIONS\u90fd\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u4fbfvTaskList()\u53ef\u7528\u3002</p> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cvTaskList()\u4f7f\u7528\u6807\u51c6\u5e93sprintf()\u51fd\u6570\u3002\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u540e\u7684\u6620\u50cf\u5927\u5c0f\u548c\u5806\u6808\u4f7f\u7528\u91cf\u663e\u8457\u589e\u52a0\u3002FreeRTOS\u7684\u4e0b\u8f7d\u5305\u62ec\u4e00\u4e2a\u540d\u4e3aprintf-stdarg.c\u7684\u6587\u4ef6\u4e2dsprintf()\u7684\u5f00\u6e90\u538b\u7f29\u7248\u672c\u3002\u8fd9\u53ef\u4ee5\u7528\u6765\u4ee3\u66ff\u6807\u51c6\u5e93sprintf()\uff0c\u4ee5\u5e2e\u52a9\u6700\u5c0f\u5316\u4ee3\u7801\u5927\u5c0f\u7684\u5f71\u54cd\u3002\u6ce8\u610f\uff0cprintf-stdarg.c\u662f\u5355\u72ec\u6388\u6743\u7ed9FreeRTOS\u7684\u3002\u5b83\u7684\u8bb8\u53ef\u6761\u6b3e\u5305\u542b\u5728\u6587\u4ef6\u4e2d\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_136","title":"\u793a\u4f8b","text":"<pre><code>void vAFunction( void ){/* Define a buffer that is large enough to hold the generated table. In most casesthe buffer will be too large to allocate on the stack, hence in this example it isdeclared static. */    static char cBuffer[ BUFFER_SIZE ];/* Pass the buffer into vTaskList() to generate the table of information. */    vTaskList( cBuffer );/* The generated information can be saved or viewed here. */}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#234-xtasknotify","title":"2.34 xTaskNotify()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dBaseType_t xTaskNotify( TaskHandle_t xTaskToNotify,                        uint32_t ulValue,                        eNotifyAction eAction );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_137","title":"\u6982\u8981","text":"<p>\u6bcf\u4e2a\u4efb\u52a1\u90fd\u6709\u4e00\u4e2a32\u4f4d\u7684\u901a\u77e5\u503c\uff0c\u8be5\u503c\u5728\u521b\u5efa\u4efb\u52a1\u65f6\u521d\u59cb\u5316\u4e3a\u96f6\u3002xTaskNotify()\u7528\u4e8e\u76f4\u63a5\u5411\u4efb\u52a1\u53d1\u9001\u4e8b\u4ef6\uff0c\u5e76\u53ef\u80fd\u89e3\u9664\u963b\u585e\uff0c\u5e76\u53ef\u9009\u5730\u4ee5\u4ee5\u4e0b\u65b9\u5f0f\u4e4b\u4e00\u66f4\u65b0\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c:</p> <ul> <li>\u5c0632\u4f4d\u7684\u6570\u5b57\u5199\u5165\u901a\u77e5\u503c</li> <li>\u589e\u52a0\u4e00\u4e2a\u901a\u77e5\u503c\u3001</li> <li>\u5728\u901a\u77e5\u503c\u4e2d\u8bbe\u7f6e\u4e00\u4e2a\u6216\u591a\u4e2a\u4f4d</li> <li>\u4fdd\u6301\u901a\u77e5\u503c\u4e0d\u53d8</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_138","title":"\u53c2\u6570","text":"<p>xTaskToNotify</p> <ul> <li>\u88ab\u901a\u77e5\u7684RTOS\u4efb\u52a1\u7684\u53e5\u67c4\u3002</li> <li>\u8981\u83b7\u5f97\u4efb\u52a1\u7684\u53e5\u67c4\uff0c\u4f7f\u7528xTaskCreate()\u521b\u5efa\u4efb\u52a1\u5e76\u4f7f\u7528pxCreatedTask\u53c2\u6570\uff0c\u6216\u8005\u4f7f\u7528xTaskCreateStatic()\u521b\u5efa\u4efb\u52a1\u5e76\u5b58\u50a8\u8fd4\u56de\u503c\uff0c\u6216\u8005\u5728\u8c03\u7528xTaskGetHandle()\u65f6\u4f7f\u7528\u4efb\u52a1\u7684\u540d\u79f0\u3002</li> </ul> <p>ulValue</p> <ul> <li>\u7528\u4e8e\u66f4\u65b0\u88ab\u901a\u77e5\u4efb\u52a1\u7684\u901a\u77e5\u503c\u3002\u5982\u4f55\u89e3\u91caulValue\u53d6\u51b3\u4e8eeAction\u53c2\u6570\u7684\u503c\u3002</li> </ul> <p>eAction</p> <ul> <li>\u901a\u77e5\u4efb\u52a1\u65f6\u8981\u6267\u884c\u7684\u64cd\u4f5c\u3002</li> </ul> <p>eAction\u662f\u4e00\u79cd\u679a\u4e3e\u7c7b\u578b\uff0c\u53ef\u4ee5\u53d6\u4ee5\u4e0b\u503c\u4e4b\u4e00:</p> <ul> <li>eNoAction -\u4efb\u52a1\u88ab\u901a\u77e5\uff0c\u4f46\u901a\u77e5\u503c\u6ca1\u6709\u6539\u53d8\u3002\u5728\u672c\u4f8b\u4e2d\u4e0d\u4f7f\u7528ulValue\u3002</li> <li>eSetBits -\u4efb\u52a1\u7684\u901a\u77e5\u503c\u662f\u7528ulValue\u7684\u4f4d\u6216\u8868\u793a\u7684\u3002\u4f8b\u5982\uff0c\u5982\u679culValue\u8bbe\u7f6e\u4e3a0x01\uff0c\u90a3\u4e48\u7b2c0\u4f4d\u5c06\u5728\u4efb\u52a1\u7684\u901a\u77e5\u503c\u5185\u8bbe\u7f6e\u3002\u5982\u679culValue\u662f0x04\uff0c\u90a3\u4e48\u5c06\u5728\u4efb\u52a1\u7684\u901a\u77e5\u503c\u4e2d\u8bbe\u7f6e\u7b2c2\u4f4d\u3002\u4f7f\u7528eSetBits\u5141\u8bb8\u4efb\u52a1\u901a\u77e5\u4f5c\u4e3a\u4e00\u4e2a\u66f4\u5feb\u548c\u8f7b\u91cf\u7ea7\u7684\u66ff\u4ee3\u4e8b\u4ef6\u7ec4\u3002</li> <li>eIncrement -\u4efb\u52a1\u7684\u901a\u77e5\u503c\u589e\u52a01\u3002\u5728\u672c\u4f8b\u4e2d\u4e0d\u4f7f\u7528ulValue\u3002</li> <li>esetvaluewiththoverwrite\u2014\u4efb\u52a1\u7684\u901a\u77e5\u503c\u88ab\u65e0\u6761\u4ef6\u8bbe\u7f6e\u4e3aulValue\u7684\u503c\uff0c\u5373\u4f7f\u5f53\u8c03\u7528xTaskNotify()\u65f6\u4efb\u52a1\u5df2\u7ecf\u6709\u4e00\u4e2a\u901a\u77e5\u6302\u8d77\u3002</li> <li>eSetValueWithoutOverwrite -\u5982\u679c\u4efb\u52a1\u5df2\u7ecf\u6709\u4e00\u4e2a\u901a\u77e5\u6302\u8d77\uff0c\u90a3\u4e48\u5b83\u7684\u901a\u77e5\u503c\u4e0d\u4f1a\u6539\u53d8\uff0cxTaskNotify()\u8fd4\u56depdFAIL\u3002\u5982\u679c\u4efb\u52a1\u8fd8\u6ca1\u6709\u6302\u8d77\u901a\u77e5\uff0c\u5219\u5c06\u5176\u901a\u77e5\u503c\u8bbe\u7f6e\u4e3aulValue\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_139","title":"\u8fd4\u56de\u503c","text":"<p>\u5982\u679ceAction\u8bbe\u7f6e\u4e3aeSetValueWithoutOverwrite\uff0c\u5e76\u4e14\u4efb\u52a1\u7684\u901a\u77e5\u503c\u6ca1\u6709\u66f4\u65b0\uff0c\u5219\u8fd4\u56depdFAIL\u3002\u5728\u6240\u6709\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u8fd4\u56depdPASS\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_140","title":"\u63d0\u793a","text":"<p>\u5982\u679c\u4efb\u52a1\u7684\u901a\u77e5\u503c\u88ab\u7528\u4f5c\u4e8c\u8fdb\u5236\u6216\u8ba1\u6570\u4fe1\u53f7\u91cf\u7684\u8f7b\u91cf\u7ea7\u548c\u66f4\u5feb\u7684\u66ff\u4ee3\uff0c\u90a3\u4e48\u4f7f\u7528\u66f4\u7b80\u5355\u7684xTaskNotifyGive() API\u51fd\u6570\u800c\u4e0d\u662fxTaskNotify()\u3002</p> <p>RTOS\u4efb\u52a1\u901a\u77e5\u529f\u80fd\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u542f\u7528\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728FreeRTOSConfig.h\u4e2d\u5c06configUSE_TASK_NOTIFICATIONS\u8bbe\u7f6e\u4e3a0\u6765\u4ece\u6784\u5efa\u4e2d\u6392\u9664(\u6bcf\u4e2a\u4efb\u52a1\u8282\u77018\u5b57\u8282)\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_141","title":"\u793a\u4f8b","text":"<pre><code>/* Set bit 8 in the notification value of the task referenced by xTask1Handle. */xTaskNotify( xTask1Handle, ( 1UL &lt;&lt; 8UL ), eSetBits );/* Send a notification to the task referenced by xTask2Handle, potentiallyremoving the task from the Blocked state, but without updating the task'snotification value. */xTaskNotify( xTask2Handle, 0, eNoAction );/* Set the notification value of the task referenced by xTask3Handle to 0x50,even if the task had not read its previous notification value. */xTaskNotify( xTask3Handle, 0x50, eSetValueWithOverwrite );/* Set the notification value of the task referenced by xTask4Handle to 0xfff,but only if to do so would not overwrite the task's existing notificationvalue before the task had obtained it (by a call to xTaskNotifyWait()or ulTaskNotifyTake()). */if( xTaskNotify( xTask4Handle, 0xfff, eSetValueWithoutOverwrite ) == pdPASS ){/* The task's notification value was updated. */}else{/* The task's notification value was not updated. */}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#235-xtasknotifyandquery","title":"2.35 xTaskNotifyAndQuery()","text":"<pre><code>include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dBaseType_t xTaskNotifyAndQuery( TaskHandle_t xTaskToNotify,                                uint32_t ulValue,                                eNotifyAction eAction,                                uint32_t *pulPreviousNotifyValue );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_142","title":"\u6982\u8981","text":"<p>xTaskNotifyAndQuery()\u4e0exTaskNotify()\u7c7b\u4f3c\uff0c\u4f46\u5305\u542b\u4e00\u4e2a\u989d\u5916\u7684\u53c2\u6570\uff0c\u5728\u8be5\u53c2\u6570\u4e2d\u8fd4\u56de\u4e3b\u9898\u4efb\u52a1\u4ee5\u524d\u7684\u901a\u77e5\u503c\u3002</p> <p>\u6bcf\u4e2a\u4efb\u52a1\u90fd\u6709\u4e00\u4e2a32\u4f4d\u7684\u901a\u77e5\u503c\uff0c\u8be5\u503c\u5728\u521b\u5efa\u4efb\u52a1\u65f6\u521d\u59cb\u5316\u4e3a\u96f6\u3002xTaskNotifyAndQuery()\u7528\u4e8e\u76f4\u63a5\u5411\u4efb\u52a1\u53d1\u9001\u4e8b\u4ef6\uff0c\u5e76\u6f5c\u5728\u5730\u89e3\u9664\u963b\u585e\uff0c\u5e76\u53ef\u9009\u5730\u4ee5\u4ee5\u4e0b\u65b9\u5f0f\u4e4b\u4e00\u66f4\u65b0\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c:</p> <ul> <li>\u5c0632\u4f4d\u7684\u6570\u5b57\u5199\u5165\u901a\u77e5\u503c</li> <li>\u589e\u52a0\u4e00\u4e2a\u901a\u77e5\u503c\u3001</li> <li>\u5728\u901a\u77e5\u503c\u4e2d\u8bbe\u7f6e\u4e00\u4e2a\u6216\u591a\u4e2a\u4f4d</li> <li>\u4fdd\u6301\u901a\u77e5\u503c\u4e0d\u53d8</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_143","title":"\u53c2\u6570","text":"<p>xTaskToNotify</p> <ul> <li>\u88ab\u901a\u77e5\u7684RTOS\u4efb\u52a1\u7684\u53e5\u67c4\u3002</li> <li>\u8981\u83b7\u5f97\u4efb\u52a1\u7684\u53e5\u67c4\uff0c\u4f7f\u7528xTaskCreate()\u521b\u5efa\u4efb\u52a1\u5e76\u4f7f\u7528pxCreatedTask\u53c2\u6570\uff0c\u6216\u8005\u4f7f\u7528xTaskCreateStatic()\u521b\u5efa\u4efb\u52a1\u5e76\u5b58\u50a8\u8fd4\u56de\u503c\uff0c\u6216\u8005\u5728\u8c03\u7528xTaskGetHandle()\u65f6\u4f7f\u7528\u4efb\u52a1\u7684\u540d\u79f0\u3002</li> </ul> <p>ulValue</p> <ul> <li>\u7528\u4e8e\u66f4\u65b0\u88ab\u901a\u77e5\u4efb\u52a1\u7684\u901a\u77e5\u503c\u3002\u5982\u4f55\u89e3\u91caulValue\u53d6\u51b3\u4e8eeAction\u53c2\u6570\u7684\u503c\u3002</li> </ul> <p>eAction</p> <ul> <li>\u901a\u77e5\u4efb\u52a1\u65f6\u8981\u6267\u884c\u7684\u64cd\u4f5c\u3002</li> </ul> <p>eAction\u662f\u4e00\u79cd\u679a\u4e3e\u7c7b\u578b\uff0c\u53ef\u4ee5\u53d6\u4ee5\u4e0b\u503c\u4e4b\u4e00:</p> <ul> <li>eNoAction -\u4efb\u52a1\u88ab\u901a\u77e5\uff0c\u4f46\u901a\u77e5\u503c\u6ca1\u6709\u6539\u53d8\u3002\u5728\u672c\u4f8b\u4e2d\u4e0d\u4f7f\u7528ulValue\u3002</li> <li>eSetBits -\u4efb\u52a1\u7684\u901a\u77e5\u503c\u662f\u7528ulValue\u7684\u4f4d\u6216\u8868\u793a\u7684\u3002\u4f8b\u5982\uff0c\u5982\u679culValue\u8bbe\u7f6e\u4e3a0x01\uff0c\u90a3\u4e48\u7b2c0\u4f4d\u5c06\u5728\u4efb\u52a1\u7684\u901a\u77e5\u503c\u5185\u8bbe\u7f6e\u3002\u5982\u679culValue\u662f0x04\uff0c\u90a3\u4e48\u5c06\u5728\u4efb\u52a1\u7684\u901a\u77e5\u503c\u4e2d\u8bbe\u7f6e\u7b2c2\u4f4d\u3002\u4f7f\u7528eSetBits\u5141\u8bb8\u4efb\u52a1\u901a\u77e5\u4f5c\u4e3a\u4e00\u4e2a\u66f4\u5feb\u548c\u8f7b\u91cf\u7ea7\u7684\u66ff\u4ee3\u4e8b\u4ef6\u7ec4\u3002</li> <li>eIncrement -\u4efb\u52a1\u7684\u901a\u77e5\u503c\u589e\u52a01\u3002\u5728\u672c\u4f8b\u4e2d\u4e0d\u4f7f\u7528ulValue\u3002</li> <li>esetvaluewiththoverwrite\u2014\u4efb\u52a1\u7684\u901a\u77e5\u503c\u88ab\u65e0\u6761\u4ef6\u8bbe\u7f6e\u4e3aulValue\u7684\u503c\uff0c\u5373\u4f7f\u5f53\u8c03\u7528xTaskNotify()\u65f6\u4efb\u52a1\u5df2\u7ecf\u6709\u4e00\u4e2a\u901a\u77e5\u6302\u8d77\u3002</li> <li>eSetValueWithoutOverwrite -\u5982\u679c\u4efb\u52a1\u5df2\u7ecf\u6709\u4e00\u4e2a\u901a\u77e5\u6302\u8d77\uff0c\u90a3\u4e48\u5b83\u7684\u901a\u77e5\u503c\u4e0d\u4f1a\u6539\u53d8\uff0cxTaskNotify()\u8fd4\u56depdFAIL\u3002\u5982\u679c\u4efb\u52a1\u8fd8\u6ca1\u6709\u6302\u8d77\u901a\u77e5\uff0c\u5219\u5c06\u5176\u901a\u77e5\u503c\u8bbe\u7f6e\u4e3aulValue\u3002</li> </ul> <p>pulPreviousNotifyValue</p> <ul> <li> <p>\u7528\u4e8e\u5728xTaskNotifyAndQuery()\u7684\u64cd\u4f5c\u4fee\u6539\u4efb\u4f55\u4f4d\u4e4b\u524d\u4f20\u9012\u4e3b\u9898\u4efb\u52a1\u7684\u901a\u77e5\u503c\u3002</p> </li> <li> <p>pulPreviousNotifyValue\u662f\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u5982\u679c\u4e0d\u9700\u8981\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3aNULL\u3002\u5982\u679cpulPreviousNotifyValue\u6ca1\u6709\u88ab\u4f7f\u7528\uff0c\u90a3\u4e48\u53ef\u4ee5\u8003\u8651\u4f7f\u7528xTaskNotify()\u6765\u4ee3\u66ffxTaskNotifyAndQuery()\u3002</p> </li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_144","title":"\u8fd4\u56de\u503c","text":"<p>\u5982\u679ceAction\u8bbe\u7f6e\u4e3aeSetValueWithoutOverwrite\uff0c\u5e76\u4e14\u4efb\u52a1\u7684\u901a\u77e5\u503c\u6ca1\u6709\u66f4\u65b0\uff0c\u5219\u8fd4\u56depdFAIL\u3002\u5728\u6240\u6709\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u8fd4\u56depdPASS\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_145","title":"\u63d0\u793a","text":"<p>\u5982\u679c\u4efb\u52a1\u7684\u901a\u77e5\u503c\u88ab\u7528\u4f5c\u4e8c\u8fdb\u5236\u6216\u8ba1\u6570\u4fe1\u53f7\u91cf\u7684\u8f7b\u91cf\u7ea7\u548c\u66f4\u5feb\u7684\u66ff\u4ee3\uff0c\u90a3\u4e48\u4f7f\u7528\u66f4\u7b80\u5355\u7684xTaskNotifyGive() API\u51fd\u6570\u800c\u4e0d\u662fxTaskNotify()\u3002</p> <p>RTOS\u4efb\u52a1\u901a\u77e5\u529f\u80fd\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u542f\u7528\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728FreeRTOSConfig.h\u4e2d\u5c06configUSE_TASK_NOTIFICATIONS\u8bbe\u7f6e\u4e3a0\u6765\u4ece\u6784\u5efa\u4e2d\u6392\u9664(\u6bcf\u4e2a\u4efb\u52a1\u8282\u77018\u5b57\u8282)\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_146","title":"\u793a\u4f8b","text":"<pre><code>uint32_t ulPreviousValue;/* Set bit 8 in the notification value of the task referenced by xTask1Handle. The task\u2019s previous notification value is not needed, so the last pulPreviousNotifyValue parameter is set to NULL. */xTaskNotifyAndQuery( xTask1Handle, ( 1UL &lt;&lt; 8UL ), eSetBits, NULL );/* Send a notification to the task referenced by xTask2Handle, potentially removing the task from the Blocked state, but without updating the task's notification value. The task\u2019s current notification value is saved in ulPreviousValue. */xTaskNotifyAndQuery( xTask2Handle, 0, eNoAction, &amp;ulPreviousValue );/* Set the notification value of the task referenced by xTask3Handle to 0x50, even if the task had not read its previous notification value. Save the task\u2019s previous notification value (before it was set to 0x50) in ulPreviousValue. */xTaskNotifyAndQuery( xTask3Handle, 0x50, eSetValueWithOverwrite, &amp;ulPreviousValue );/* Set the notification value of the task referenced by xTask4Handle to 0xfff, but only if to do so would not overwrite the task's existing notification value before the task had obtained it (by a call to xTaskNotifyWait() or ulTaskNotifyTake()). Save the task\u2019s previous notification value (before it was set to 0xfff) in ulPreviousValue. */if( xTaskNotifyAndQuery( xTask4Handle,                        0xfff,                        eSetValueWithoutOverwrite,                        &amp;ulPreviousValue ) == pdPASS ){/* The task's notification value was updated. */}else{/* The task's notification value was not updated. */}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#236-xtasknotifyandqueryfromisr","title":"2.36 xTaskNotifyAndQueryFromISR()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dBaseType_t xTaskNotifyAndQuery( TaskHandle_t xTaskToNotify,                                uint32_t ulValue,                                eNotifyAction eAction,                                uint32_t *pulPreviousNotifyValue,                                BaseType_t *pxHigherPriorityTaskWoken );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_147","title":"\u6982\u8981","text":"<p>xTaskNotifyAndQuery()\u4e0exTaskNotify()\u7c7b\u4f3c\uff0c\u4f46\u5305\u542b\u4e00\u4e2a\u989d\u5916\u7684\u53c2\u6570\uff0c\u5728\u8be5\u53c2\u6570\u4e2d\u8fd4\u56de\u4e3b\u9898\u4efb\u52a1\u4ee5\u524d\u7684\u901a\u77e5\u503c\u3002xTaskNotifyAndQueryFromISR()\u662fxTaskNotifyAndQuery()\u7684\u4e00\u4e2a\u7248\u672c\uff0c\u53ef\u4ee5\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b(ISR)\u8c03\u7528\u3002</p> <p>\u6bcf\u4e2a\u4efb\u52a1\u90fd\u6709\u4e00\u4e2a32\u4f4d\u7684\u901a\u77e5\u503c\uff0c\u8be5\u503c\u5728\u521b\u5efa\u4efb\u52a1\u65f6\u521d\u59cb\u5316\u4e3a\u96f6\u3002xTaskNotifyAndQueryFromISR()\u7528\u4e8e\u76f4\u63a5\u5411\u4efb\u52a1\u53d1\u9001\u4e8b\u4ef6\uff0c\u5e76\u6f5c\u5728\u5730\u89e3\u9664\u963b\u585e\uff0c\u5e76\u53ef\u9009\u5730\u4ee5\u4ee5\u4e0b\u65b9\u5f0f\u4e4b\u4e00\u66f4\u65b0\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c:</p> <ul> <li>\u5c0632\u4f4d\u7684\u6570\u5b57\u5199\u5165\u901a\u77e5\u503c</li> <li>\u589e\u52a0\u4e00\u4e2a\u901a\u77e5\u503c\u3001</li> <li>\u5728\u901a\u77e5\u503c\u4e2d\u8bbe\u7f6e\u4e00\u4e2a\u6216\u591a\u4e2a\u4f4d</li> <li>\u4fdd\u6301\u901a\u77e5\u503c\u4e0d\u53d8</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_148","title":"\u53c2\u6570","text":"<p>xTaskToNotify</p> <ul> <li>\u88ab\u901a\u77e5\u7684RTOS\u4efb\u52a1\u7684\u53e5\u67c4\u3002</li> <li>\u8981\u83b7\u5f97\u4efb\u52a1\u7684\u53e5\u67c4\uff0c\u4f7f\u7528xTaskCreate()\u521b\u5efa\u4efb\u52a1\u5e76\u4f7f\u7528pxCreatedTask\u53c2\u6570\uff0c\u6216\u8005\u4f7f\u7528xTaskCreateStatic()\u521b\u5efa\u4efb\u52a1\u5e76\u5b58\u50a8\u8fd4\u56de\u503c\uff0c\u6216\u8005\u5728\u8c03\u7528xTaskGetHandle()\u65f6\u4f7f\u7528\u4efb\u52a1\u7684\u540d\u79f0\u3002</li> </ul> <p>ulValue</p> <ul> <li>\u7528\u4e8e\u66f4\u65b0\u88ab\u901a\u77e5\u4efb\u52a1\u7684\u901a\u77e5\u503c\u3002\u5982\u4f55\u89e3\u91caulValue\u53d6\u51b3\u4e8eeAction\u53c2\u6570\u7684\u503c\u3002</li> </ul> <p>eAction</p> <ul> <li>\u901a\u77e5\u4efb\u52a1\u65f6\u8981\u6267\u884c\u7684\u64cd\u4f5c\u3002</li> </ul> <p>eAction\u662f\u4e00\u79cd\u679a\u4e3e\u7c7b\u578b\uff0c\u53ef\u4ee5\u53d6\u4ee5\u4e0b\u503c\u4e4b\u4e00:</p> <ul> <li>eNoAction -\u4efb\u52a1\u88ab\u901a\u77e5\uff0c\u4f46\u901a\u77e5\u503c\u6ca1\u6709\u6539\u53d8\u3002\u5728\u672c\u4f8b\u4e2d\u4e0d\u4f7f\u7528ulValue\u3002</li> <li>eSetBits -\u4efb\u52a1\u7684\u901a\u77e5\u503c\u662f\u7528ulValue\u7684\u4f4d\u6216\u8868\u793a\u7684\u3002\u4f8b\u5982\uff0c\u5982\u679culValue\u8bbe\u7f6e\u4e3a0x01\uff0c\u90a3\u4e48\u7b2c0\u4f4d\u5c06\u5728\u4efb\u52a1\u7684\u901a\u77e5\u503c\u5185\u8bbe\u7f6e\u3002\u5982\u679culValue\u662f0x04\uff0c\u90a3\u4e48\u5c06\u5728\u4efb\u52a1\u7684\u901a\u77e5\u503c\u4e2d\u8bbe\u7f6e\u7b2c2\u4f4d\u3002\u4f7f\u7528eSetBits\u5141\u8bb8\u4efb\u52a1\u901a\u77e5\u4f5c\u4e3a\u4e00\u4e2a\u66f4\u5feb\u548c\u8f7b\u91cf\u7ea7\u7684\u66ff\u4ee3\u4e8b\u4ef6\u7ec4\u3002</li> <li>eIncrement -\u4efb\u52a1\u7684\u901a\u77e5\u503c\u589e\u52a01\u3002\u5728\u672c\u4f8b\u4e2d\u4e0d\u4f7f\u7528ulValue\u3002</li> <li>esetvaluewiththoverwrite\u2014\u4efb\u52a1\u7684\u901a\u77e5\u503c\u88ab\u65e0\u6761\u4ef6\u8bbe\u7f6e\u4e3aulValue\u7684\u503c\uff0c\u5373\u4f7f\u5f53\u8c03\u7528xTaskNotify()\u65f6\u4efb\u52a1\u5df2\u7ecf\u6709\u4e00\u4e2a\u901a\u77e5\u6302\u8d77\u3002</li> <li>eSetValueWithoutOverwrite -\u5982\u679c\u4efb\u52a1\u5df2\u7ecf\u6709\u4e00\u4e2a\u901a\u77e5\u6302\u8d77\uff0c\u90a3\u4e48\u5b83\u7684\u901a\u77e5\u503c\u4e0d\u4f1a\u6539\u53d8\uff0cxTaskNotify()\u8fd4\u56depdFAIL\u3002\u5982\u679c\u4efb\u52a1\u8fd8\u6ca1\u6709\u6302\u8d77\u901a\u77e5\uff0c\u5219\u5c06\u5176\u901a\u77e5\u503c\u8bbe\u7f6e\u4e3aulValue\u3002</li> </ul> <p>pulPreviousNotifyValue</p> <ul> <li> <p>\u7528\u4e8e\u5728xTaskNotifyAndQuery()\u7684\u64cd\u4f5c\u4fee\u6539\u4efb\u4f55\u4f4d\u4e4b\u524d\u4f20\u9012\u4e3b\u9898\u4efb\u52a1\u7684\u901a\u77e5\u503c\u3002</p> </li> <li> <p>pulPreviousNotifyValue\u662f\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u5982\u679c\u4e0d\u9700\u8981\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3aNULL\u3002\u5982\u679cpulPreviousNotifyValue\u6ca1\u6709\u88ab\u4f7f\u7528\uff0c\u90a3\u4e48\u53ef\u4ee5\u8003\u8651\u4f7f\u7528xTaskNotify()\u6765\u4ee3\u66ffxTaskNotifyAndQuery()\u3002</p> </li> </ul> <p>pxHigherPriorityTaskWoken</p> <ul> <li>*pxHigherPriorityTaskWoken\u5fc5\u987b\u521d\u59cb\u5316\u4e3apdFALSE\u3002\u5982\u679c\u53d1\u9001\u901a\u77e5\u5bfc\u81f4\u88ab\u901a\u77e5\u7684\u4efb\u52a1\u79bb\u5f00Blocked\u72b6\u6001\uff0c\u5e76\u4e14\u88ab\u901a\u77e5\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u4efb\u52a1\uff0c\u5219xTaskNotifyAndQueryFromISR()\u5c06\u8bbe\u7f6e*pxHigherPriorityTaskWoken\u4e3apdTRUE\u3002</li> <li>\u5982\u679cxTaskNotifyAndQueryFromISR()\u5c06\u8fd9\u4e2a\u503c\u8bbe\u7f6e\u4e3apdTRUE\uff0c\u90a3\u4e48\u5e94\u8be5\u5728\u4e2d\u65ad\u9000\u51fa\u4e4b\u524d\u8bf7\u6c42\u4e00\u4e2a\u4e0a\u4e0b\u6587\u5207\u6362\u3002\u4e0b\u6587\u7ed9\u51fa\u4e86\u4e00\u4e2a\u793a\u4f8b\u3002</li> <li>pxHigherPriorityTaskWoken\u662f\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3aNULL\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_149","title":"\u8fd4\u56de\u503c","text":"<p>\u5982\u679ceAction\u8bbe\u7f6e\u4e3aeSetValueWithoutOverwrite\uff0c\u5e76\u4e14\u4efb\u52a1\u7684\u901a\u77e5\u503c\u6ca1\u6709\u66f4\u65b0\uff0c\u5219\u8fd4\u56depdFAIL\u3002\u5728\u6240\u6709\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u8fd4\u56depdPASS\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_150","title":"\u63d0\u793a","text":"<p>RTOS\u4efb\u52a1\u901a\u77e5\u529f\u80fd\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u542f\u7528\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728FreeRTOSConfig.h\u4e2d\u5c06configUSE_TASK_NOTIFICATIONS\u8bbe\u7f6e\u4e3a0\u6765\u4ece\u6784\u5efa\u4e2d\u6392\u9664(\u6bcf\u4e2a\u4efb\u52a1\u8282\u77018\u5b57\u8282)\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_151","title":"\u793a\u4f8b","text":"<pre><code>uint32_t ulPreviousValue;/* xHigherPriorityTaskWoken must be set to pdFALSE so it can later be detected if it was set to pdTRUE by any of the functions called within the interrupt. */BaseType_t xHigherPriorityTaskWoken = pdFALSE;/* Set bit 8 in the notification value of the task referenced by xTask1Handle. The task\u2019s previous notification value is not needed, so the last pulPreviousNotifyValue parameter is set to NULL. */xTaskNotifyAndQueryFromISR( xTask1Handle,                            ( 1UL &lt;&lt; 8UL ),                            eSetBits,                            NULL,                            &amp;xHigherPriorityTaskWoken );/* Send a notification to the task referenced by xTask2Handle, potentially removing the task from the Blocked state, but without updating the task's notification value. The task\u2019s current notification value is saved in ulPreviousValue. */                            xTaskNotifyAndQueryFromISR( xTask2Handle,                            0,                            eNoAction,                            &amp;ulPreviousValue,                            &amp;xHigherPriorityTaskWoken );/* If xHigherPriorityTaskWoken is now set to pdTRUE then a context switch should be performed to ensure the interrupt returns directly to the highest priority task. The macro used for this purpose is dependent on the port in use and may be called portEND_SWITCHING_ISR(). */portYIELD_FROM_ISR( xHigherPriorityTaskWoken );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#237-xtasknotifyfromisr","title":"2.37 xTaskNotifyFromISR()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dBaseType_t xTaskNotifyFromISR( TaskHandle_t xTaskToNotify,                                uint32_t ulValue,                                eNotifyAction eAction                                BaseType_t *pxHigherPriorityTaskWoken );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_152","title":"\u6982\u8981","text":"<p>xTaskNotify()\u7684\u4e00\u4e2a\u7248\u672c\uff0c\u53ef\u4ee5\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b(ISR)\u8c03\u7528\u3002</p> <p>\u6bcf\u4e2a\u4efb\u52a1\u90fd\u6709\u4e00\u4e2a32\u4f4d\u7684\u901a\u77e5\u503c\uff0c\u8be5\u503c\u5728\u521b\u5efa\u4efb\u52a1\u65f6\u521d\u59cb\u5316\u4e3a\u96f6\u3002xTaskNotifyFromISR()\u7528\u4e8e\u76f4\u63a5\u5411\u4efb\u52a1\u53d1\u9001\u4e8b\u4ef6\uff0c\u5e76\u6f5c\u5728\u5730\u89e3\u9664\u963b\u585e\uff0c\u5e76\u53ef\u9009\u5730\u4ee5\u4ee5\u4e0b\u65b9\u5f0f\u4e4b\u4e00\u66f4\u65b0\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c:</p> <ul> <li>\u5c0632\u4f4d\u7684\u6570\u5b57\u5199\u5165\u901a\u77e5\u503c</li> <li>\u589e\u52a0\u4e00\u4e2a\u901a\u77e5\u503c\u3001</li> <li>\u5728\u901a\u77e5\u503c\u4e2d\u8bbe\u7f6e\u4e00\u4e2a\u6216\u591a\u4e2a\u4f4d</li> <li>\u4fdd\u6301\u901a\u77e5\u503c\u4e0d\u53d8</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_153","title":"\u53c2\u6570","text":"<p>xTaskToNotify</p> <ul> <li>\u88ab\u901a\u77e5\u7684RTOS\u4efb\u52a1\u7684\u53e5\u67c4\u3002</li> <li>\u8981\u83b7\u5f97\u4efb\u52a1\u7684\u53e5\u67c4\uff0c\u4f7f\u7528xTaskCreate()\u521b\u5efa\u4efb\u52a1\u5e76\u4f7f\u7528pxCreatedTask\u53c2\u6570\uff0c\u6216\u8005\u4f7f\u7528xTaskCreateStatic()\u521b\u5efa\u4efb\u52a1\u5e76\u5b58\u50a8\u8fd4\u56de\u503c\uff0c\u6216\u8005\u5728\u8c03\u7528xTaskGetHandle()\u65f6\u4f7f\u7528\u4efb\u52a1\u7684\u540d\u79f0\u3002</li> </ul> <p>ulValue</p> <ul> <li>\u7528\u4e8e\u66f4\u65b0\u88ab\u901a\u77e5\u4efb\u52a1\u7684\u901a\u77e5\u503c\u3002\u5982\u4f55\u89e3\u91caulValue\u53d6\u51b3\u4e8eeAction\u53c2\u6570\u7684\u503c\u3002</li> </ul> <p>eAction</p> <ul> <li>\u901a\u77e5\u4efb\u52a1\u65f6\u8981\u6267\u884c\u7684\u64cd\u4f5c\u3002</li> </ul> <p>eAction\u662f\u4e00\u79cd\u679a\u4e3e\u7c7b\u578b\uff0c\u53ef\u4ee5\u53d6\u4ee5\u4e0b\u503c\u4e4b\u4e00:</p> <ul> <li>eNoAction -\u4efb\u52a1\u88ab\u901a\u77e5\uff0c\u4f46\u901a\u77e5\u503c\u6ca1\u6709\u6539\u53d8\u3002\u5728\u672c\u4f8b\u4e2d\u4e0d\u4f7f\u7528ulValue\u3002</li> <li>eSetBits -\u4efb\u52a1\u7684\u901a\u77e5\u503c\u662f\u7528ulValue\u7684\u4f4d\u6216\u8868\u793a\u7684\u3002\u4f8b\u5982\uff0c\u5982\u679culValue\u8bbe\u7f6e\u4e3a0x01\uff0c\u90a3\u4e48\u7b2c0\u4f4d\u5c06\u5728\u4efb\u52a1\u7684\u901a\u77e5\u503c\u5185\u8bbe\u7f6e\u3002\u5982\u679culValue\u662f0x04\uff0c\u90a3\u4e48\u5c06\u5728\u4efb\u52a1\u7684\u901a\u77e5\u503c\u4e2d\u8bbe\u7f6e\u7b2c2\u4f4d\u3002\u4f7f\u7528eSetBits\u5141\u8bb8\u4efb\u52a1\u901a\u77e5\u4f5c\u4e3a\u4e00\u4e2a\u66f4\u5feb\u548c\u8f7b\u91cf\u7ea7\u7684\u66ff\u4ee3\u4e8b\u4ef6\u7ec4\u3002</li> <li>eIncrement -\u4efb\u52a1\u7684\u901a\u77e5\u503c\u589e\u52a01\u3002\u5728\u672c\u4f8b\u4e2d\u4e0d\u4f7f\u7528ulValue\u3002</li> <li>esetvaluewiththoverwrite\u2014\u4efb\u52a1\u7684\u901a\u77e5\u503c\u88ab\u65e0\u6761\u4ef6\u8bbe\u7f6e\u4e3aulValue\u7684\u503c\uff0c\u5373\u4f7f\u5f53\u8c03\u7528xTaskNotify()\u65f6\u4efb\u52a1\u5df2\u7ecf\u6709\u4e00\u4e2a\u901a\u77e5\u6302\u8d77\u3002</li> <li>eSetValueWithoutOverwrite -\u5982\u679c\u4efb\u52a1\u5df2\u7ecf\u6709\u4e00\u4e2a\u901a\u77e5\u6302\u8d77\uff0c\u90a3\u4e48\u5b83\u7684\u901a\u77e5\u503c\u4e0d\u4f1a\u6539\u53d8\uff0cxTaskNotify()\u8fd4\u56depdFAIL\u3002\u5982\u679c\u4efb\u52a1\u8fd8\u6ca1\u6709\u6302\u8d77\u901a\u77e5\uff0c\u5219\u5c06\u5176\u901a\u77e5\u503c\u8bbe\u7f6e\u4e3aulValue\u3002</li> </ul> <p>pxHigherPriorityTaskWoken</p> <ul> <li>*pxHigherPriorityTaskWoken\u5fc5\u987b\u521d\u59cb\u5316\u4e3apdFALSE\u3002\u5982\u679c\u53d1\u9001\u901a\u77e5\u5bfc\u81f4\u88ab\u901a\u77e5\u7684\u4efb\u52a1\u79bb\u5f00Blocked\u72b6\u6001\uff0c\u5e76\u4e14\u88ab\u901a\u77e5\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u4efb\u52a1\uff0c\u90a3\u4e48xTaskNotifyFromISR()\u5c06\u628a*pxHigherPriorityTaskWoken\u8bbe\u7f6e\u4e3apdTRUE\u3002</li> <li>\u5982\u679cxTaskNotifyFromISR()\u5c06\u8fd9\u4e2a\u503c\u8bbe\u7f6e\u4e3apdTRUE\uff0c\u90a3\u4e48\u5e94\u8be5\u5728\u4e2d\u65ad\u9000\u51fa\u4e4b\u524d\u8bf7\u6c42\u4e00\u4e2a\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u4e0b\u6587\u7ed9\u51fa\u4e86\u4e00\u4e2a\u793a\u4f8b\u3002</li> <li>pxHigherPriorityTaskWoken\u662f\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3aNULL\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_154","title":"\u8fd4\u56de\u503c","text":"<p>\u5982\u679ceAction\u8bbe\u7f6e\u4e3aeSetValueWithoutOverwrite\uff0c\u5e76\u4e14\u4efb\u52a1\u7684\u901a\u77e5\u503c\u6ca1\u6709\u66f4\u65b0\uff0c\u5219\u8fd4\u56depdFAIL\u3002\u5728\u6240\u6709\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u8fd4\u56depdPASS\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_155","title":"\u63d0\u793a","text":"<p>\u5982\u679c\u4efb\u52a1\u7684\u901a\u77e5\u503c\u88ab\u7528\u4f5c\u4e8c\u8fdb\u5236\u6216\u8ba1\u6570\u4fe1\u53f7\u91cf\u7684\u8f7b\u91cf\u7ea7\u548c\u66f4\u5feb\u7684\u66ff\u4ee3\uff0c\u90a3\u4e48\u4f7f\u7528\u66f4\u7b80\u5355\u7684vTaskNotifyGiveFromISR() API\u51fd\u6570\u800c\u4e0d\u662fxTaskNotifyFromISR()\u3002</p> <p>RTOS\u4efb\u52a1\u901a\u77e5\u529f\u80fd\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u542f\u7528\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728FreeRTOSConfig.h\u4e2d\u5c06configUSE_TASK_NOTIFICATIONS\u8bbe\u7f6e\u4e3a0\u6765\u4ece\u6784\u5efa\u4e2d\u6392\u9664(\u6bcf\u4e2a\u4efb\u52a1\u8282\u77018\u5b57\u8282)\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_156","title":"\u793a\u4f8b","text":"<p>\u8fd9\u4e2a\u4f8b\u5b50\u6f14\u793a\u4e86\u4e00\u4e2a\u5355\u72ec\u7684RTOS\u4efb\u52a1\u7528\u6765\u5904\u7406\u4e24\u4e2a\u72ec\u7acb\u7684\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u4ea7\u751f\u7684\u4e8b\u4ef6\u2014\u2014\u4e00\u4e2a\u53d1\u9001\u4e2d\u65ad\u548c\u4e00\u4e2a\u63a5\u6536\u4e2d\u65ad\u3002\u8bb8\u591a\u5916\u56f4\u8bbe\u5907\u5c06\u4f7f\u7528\u76f8\u540c\u7684\u5904\u7406\u7a0b\u5e8f\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5916\u56f4\u8bbe\u5907\u7684\u4e2d\u65ad\u72b6\u6001\u5bc4\u5b58\u5668\u53ef\u4ee5\u7b80\u5355\u5730\u6309\u4f4d\u6216\u4e0e\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\u3002</p> <pre><code>/* First bits are defined to represent each interrupt source. */#define TX_BIT 0x01#define RX_BIT 0x02/* The handle of the task that will receive notifications from the interrupts. The handle was obtained when the task was created. */static TaskHandle_t xHandlingTask;/* The implementation of the transmit interrupt service routine. */void vTxISR( void ){    BaseType_t xHigherPriorityTaskWoken = pdFALSE;/* Clear the interrupt source. */    prvClearInterrupt();/* Notify the task that the transmission is complete by setting the TX_BIT in thetask's notification value. */    xTaskNotifyFromISR( xHandlingTask, TX_BIT, eSetBits, &amp;xHigherPriorityTaskWoken );/* If xHigherPriorityTaskWoken is now set to pdTRUE then a context switch shouldbe performed to ensure the interrupt returns directly to the highest prioritytask. The macro used for this purpose is dependent on the port in use and may becalled portEND_SWITCHING_ISR(). */    portYIELD_FROM_ISR( xHigherPriorityTaskWoken );}/*-----------------------------------------------------------*//* The implementation of the receive interrupt service routine is identical except for the bit that gets set in the receiving task's notification value. */void vRxISR( void ){    BaseType_t xHigherPriorityTaskWoken = pdFALSE;/* Clear the interrupt source. */    prvClearInterrupt();/* Notify the task that the reception is complete by setting the RX_BIT in thetask's notification value. */    xTaskNotifyFromISR( xHandlingTask, RX_BIT, eSetBits, &amp;xHigherPriorityTaskWoken );/* If xHigherPriorityTaskWoken is now set to pdTRUE then a context switch shouldbe performed to ensure the interrupt returns directly to the highest prioritytask. The macro used for this purpose is dependent on the port in use and may becalled portEND_SWITCHING_ISR(). */    portYIELD_FROM_ISR( xHigherPriorityTaskWoken );}/* The implementation of the task that is notified by the interrupt serviceroutines. */static void prvHandlingTask( void *pvParameter ){    const TickType_t xMaxBlockTime = pdMS_TO_TICKS( 500 );    BaseType_t xResult;    for( ;; )    {/* Wait to be notified of an interrupt. */        xResult = xTaskNotifyWait( pdFALSE, /* Don't clear bits on entry. */            ULONG_MAX, /* Clear all bits on exit. */            &amp;ulNotifiedValue, /* Stores the notified value. */            xMaxBlockTime );        if( xResult == pdPASS )        {/* A notification was received. See which bits were set. */            if( ( ulNotifiedValue &amp; TX_BIT ) != 0 )            {/* The TX ISR has set a bit. */                prvProcessTx();            }            if( ( ulNotifiedValue &amp; RX_BIT ) != 0 )            {/* The RX ISR has set a bit. */                prvProcessRx();            }          }        else        {/* Did not receive a notification within the expected time. */            prvCheckForErrors();        }    }}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#238-xtasknotifygive","title":"2.38 xTaskNotifyGive()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dBaseType_t xTaskNotifyGive( TaskHandle_t xTaskToNotify );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_157","title":"\u6982\u8981","text":"<p>\u6bcf\u4e2a\u4efb\u52a1\u90fd\u6709\u4e00\u4e2a32\u4f4d\u7684\u901a\u77e5\u503c\uff0c\u8be5\u503c\u5728\u521b\u5efa\u4efb\u52a1\u65f6\u521d\u59cb\u5316\u4e3a\u96f6\u3002\u4efb\u52a1\u901a\u77e5\u662f\u76f4\u63a5\u53d1\u9001\u7ed9\u4efb\u52a1\u7684\u4e8b\u4ef6\uff0c\u53ef\u4ee5\u89e3\u9664\u5bf9\u63a5\u6536\u4efb\u52a1\u7684\u963b\u585e\uff0c\u5e76\u53ef\u9009\u5730\u66f4\u65b0\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\u3002</p> <p>xTaskNotifyGive()\u662f\u4e00\u4e2a\u5b8f\uff0c\u7528\u4e8e\u5f53\u4efb\u52a1\u901a\u77e5\u503c\u88ab\u7528\u4f5c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u6216\u8ba1\u6570\u4fe1\u53f7\u91cf\u7684\u8f7b\u91cf\u7ea7\u548c\u66f4\u5feb\u7684\u66ff\u4ee3\u65f6\u4f7f\u7528\u3002FreeRTOS\u4fe1\u53f7\u91cf\u662f\u4f7f\u7528xsemaphoregve () API\u51fd\u6570\u7ed9\u51fa\u7684\uff0c\u800cxTaskNotifyGive()\u662f\u7b49\u6548\u7684\uff0c\u5b83\u4f7f\u7528\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\u800c\u4e0d\u662f\u5355\u72ec\u7684\u4fe1\u53f7\u91cf\u5bf9\u8c61\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_158","title":"\u53c2\u6570","text":"<p>xTaskToNotify</p> <ul> <li>\u6b63\u5728\u88ab\u901a\u77e5\u5e76\u4f7f\u5176\u901a\u77e5\u503c\u589e\u52a0\u7684\u4efb\u52a1\u7684\u53e5\u67c4\u3002</li> </ul> <p>\u8981\u83b7\u5f97\u4efb\u52a1\u7684\u53e5\u67c4\uff0c\u4f7f\u7528xTaskCreate()\u521b\u5efa\u4efb\u52a1\u5e76\u4f7f\u7528pxCreatedTask\u53c2\u6570\uff0c\u6216\u8005\u4f7f\u7528xTaskCreateStatic()\u521b\u5efa\u4efb\u52a1\u5e76\u5b58\u50a8\u8fd4\u56de\u503c\uff0c\u6216\u8005\u5728\u8c03\u7528xTaskGetHandle()\u65f6\u4f7f\u7528\u4efb\u52a1\u7684\u540d\u79f0\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_159","title":"\u8fd4\u56de\u503c","text":"<p>xTaskNotifyGive()\u662f\u4e00\u4e2a\u5b8f\uff0c\u5b83\u8c03\u7528\u5c06eAction\u53c2\u6570\u8bbe\u7f6e\u4e3aeIncrement\u7684xTaskNotify()\u3002\u56e0\u6b64\uff0c\u603b\u662f\u8fd4\u56depdPASS\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_160","title":"\u63d0\u793a","text":"<p>\u5f53\u4efb\u52a1\u901a\u77e5\u503c\u88ab\u7528\u4f5c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u6216\u8ba1\u6570\u4fe1\u53f7\u91cf\u65f6\uff0c\u88ab\u901a\u77e5\u7684\u4efb\u52a1\u5e94\u8be5\u4f7f\u7528\u66f4\u7b80\u5355\u7684ulTaskNotifyTake() API\u51fd\u6570\u800c\u4e0d\u662fxTaskNotifyWait() API\u51fd\u6570\u7b49\u5f85\u901a\u77e5\u3002</p> <p>RTOS\u4efb\u52a1\u901a\u77e5\u529f\u80fd\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u542f\u7528\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728FreeRTOSConfig.h\u4e2d\u5c06configUSE_TASK_NOTIFICATIONS\u8bbe\u7f6e\u4e3a0\u6765\u4ece\u6784\u5efa\u4e2d\u6392\u9664(\u6bcf\u4e2a\u4efb\u52a1\u8282\u77018\u5b57\u8282)\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_161","title":"\u793a\u4f8b","text":"<pre><code>/* Prototypes of the two tasks created by main(). */static void prvTask1( void *pvParameters );static void prvTask2( void *pvParameters );/* Handles for the tasks create by main(). */static TaskHandle_t xTask1 = NULL, xTask2 = NULL;/* Create two tasks that send notifications back and forth to each other, thenstart the RTOS scheduler. */void main( void ){xTaskCreate( prvTask1, \"Task1\", 200, NULL, tskIDLE_PRIORITY, &amp;xTask1 );xTaskCreate( prvTask2, \"Task2\", 200, NULL, tskIDLE_PRIORITY, &amp;xTask2 );vTaskStartScheduler();}/*-----------------------------------------------------------*/static void prvTask1( void *pvParameters ){for( ;; ){/* Send a notification to prvTask2(), bringing it out of the Blockedstate. */xTaskNotifyGive( xTask2 );/* Block to wait for prvTask2() to notify this task. */ulTaskNotifyTake( pdTRUE, portMAX_DELAY );}}/*-----------------------------------------------------------*/static void prvTask2( void *pvParameters ){for( ;; ){/* Block to wait for prvTask1() to notify this task. */ulTaskNotifyTake( pdTRUE, portMAX_DELAY );/* Send a notification to prvTask1(), bringing it out of the Blockedstate. */xTaskNotifyGive( xTask1 );}}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#239-vtasknotifygivefromisr","title":"2.39 vTaskNotifyGiveFromISR()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dvoid vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify,BaseType_t *pxHigherPriorityTaskWoken );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_162","title":"\u6982\u8981","text":"<p>\u53ef\u4ee5\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b(ISR)\u8c03\u7528\u7684xTaskNotifyGive()\u7684\u4e00\u4e2a\u7248\u672c\u3002</p> <p>\u6bcf\u4e2a\u4efb\u52a1\u90fd\u6709\u4e00\u4e2a32\u4f4d\u7684\u901a\u77e5\u503c\uff0c\u8be5\u503c\u5728\u521b\u5efa\u4efb\u52a1\u65f6\u521d\u59cb\u5316\u4e3a\u96f6\u3002\u4efb\u52a1\u901a\u77e5\u662f\u76f4\u63a5\u53d1\u9001\u7ed9\u4efb\u52a1\u7684\u4e8b\u4ef6\uff0c\u53ef\u4ee5\u89e3\u9664\u5bf9\u63a5\u6536\u4efb\u52a1\u7684\u963b\u585e\uff0c\u5e76\u53ef\u9009\u5730\u66f4\u65b0\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\u3002</p> <p>vTaskNotifyGiveFromISR()\u7528\u4e8e\u5f53\u4efb\u52a1\u901a\u77e5\u503c\u88ab\u7528\u4f5c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u6216\u8ba1\u6570\u4fe1\u53f7\u91cf\u7684\u8f7b\u91cf\u7ea7\u548c\u66f4\u5feb\u7684\u66ff\u4ee3\u65b9\u6cd5\u65f6\u3002FreeRTOS\u4fe1\u53f7\u91cf\u662f\u4f7f\u7528xSemaphoreGiveFromISR() API\u51fd\u6570\u7ed9\u51fa\u7684\uff0c\u800cvTaskNotifyGiveFromISR()\u662f\u7b49\u6548\u7684\uff0c\u5b83\u4f7f\u7528\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\u800c\u4e0d\u662f\u5355\u72ec\u7684\u4fe1\u53f7\u91cf\u5bf9\u8c61\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_163","title":"\u53c2\u6570","text":"<p>xTaskToNotify</p> <ul> <li>RTOS\u4efb\u52a1\u7684\u53e5\u67c4\u88ab\u901a\u77e5\u5e76\u4f7f\u5176\u901a\u77e5\u503c\u589e\u52a0\u3002</li> <li>\u8981\u83b7\u5f97\u4efb\u52a1\u7684\u53e5\u67c4\uff0c\u4f7f\u7528xTaskCreate()\u521b\u5efa\u4efb\u52a1\u5e76\u4f7f\u7528pxCreatedTask\u53c2\u6570\uff0c\u6216\u8005\u4f7f\u7528xTaskCreateStatic()\u521b\u5efa\u4efb\u52a1\u5e76\u5b58\u50a8\u8fd4\u56de\u503c\uff0c\u6216\u8005\u5728\u8c03\u7528xTaskGetHandle()\u65f6\u4f7f\u7528\u4efb\u52a1\u7684\u540d\u79f0\u3002</li> </ul> <p>pxHigherPriorityTaskWoken</p> <ul> <li>pxHigherPriorityTaskWoken\u5fc5\u987b\u521d\u59cb\u5316\u4e3apdFALSE\u3002\u5982\u679c\u53d1\u9001\u901a\u77e5\u5bfc\u81f4\u6b63\u5728\u88ab\u901a\u77e5\u7684\u4efb\u52a1\u79bb\u5f00Blocked\u72b6\u6001\uff0c\u5e76\u4e14\u672a\u88ab\u963b\u585e\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u4efb\u52a1\uff0c\u5219vTaskNotifyGiveFromISR()\u4f1a\u5c06 pxhigherprioritytaskkoken\u8bbe\u7f6e\u4e3apdTRUE\u3002</li> <li>\u5982\u679cvTaskNotifyGiveFromISR()\u5c06\u8fd9\u4e2a\u503c\u8bbe\u7f6e\u4e3apdTRUE\uff0c\u90a3\u4e48\u5e94\u8be5\u5728\u4e2d\u65ad\u9000\u51fa\u4e4b\u524d\u8bf7\u6c42\u4e00\u4e2a\u4e0a\u4e0b\u6587\u5207\u6362\u3002\u4e0b\u6587\u7ed9\u51fa\u4e86\u4e00\u4e2a\u793a\u4f8b\u3002</li> <li>pxHigherPriorityTaskWoken\u662f\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3aNULL\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_164","title":"\u63d0\u793a","text":"<p>\u5f53\u4efb\u52a1\u901a\u77e5\u503c\u88ab\u7528\u4f5c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u6216\u8ba1\u6570\u4fe1\u53f7\u91cf\u65f6\uff0c\u88ab\u901a\u77e5\u7684\u4efb\u52a1\u5e94\u8be5\u4f7f\u7528ulTaskNotifyTake() API\u51fd\u6570\u800c\u4e0d\u662fxTaskNotifyWait() API\u51fd\u6570\u7b49\u5f85\u901a\u77e5\u3002</p> <p>RTOS\u4efb\u52a1\u901a\u77e5\u529f\u80fd\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u542f\u7528\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728FreeRTOSConfig.h\u4e2d\u5c06configUSE_TASK_NOTIFICATIONS\u8bbe\u7f6e\u4e3a0\u6765\u4ece\u6784\u5efa\u4e2d\u6392\u9664(\u6bcf\u4e2a\u4efb\u52a1\u8282\u77018\u5b57\u8282)\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_165","title":"\u793a\u4f8b","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u901a\u7528\u5916\u8bbe\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u7684\u4f20\u8f93\u51fd\u6570\u7684\u793a\u4f8b\u3002\u4efb\u52a1\u8c03\u7528\u4f20\u8f93\u51fd\u6570\uff0c\u7136\u540e\u5728Blocked\u72b6\u6001\u4e2d\u7b49\u5f85(\u56e0\u6b64\u4e0d\u4f7f\u7528CPU\u65f6\u95f4)\uff0c\u76f4\u5230\u6536\u5230\u4f20\u8f93\u5b8c\u6210\u7684\u901a\u77e5\u3002\u4f20\u8f93\u7531DMA\u6267\u884c\uff0cDMA\u7ed3\u675f\u4e2d\u65ad\u7528\u4e8e\u901a\u77e5\u4efb\u52a1\u3002</p> <pre><code>static TaskHandle_t xTaskToNotify = NULL;/* The peripheral driver's transmit function. */void StartTransmission( uint8_t *pcData, size_t xDataLength ){/* At this point xTaskToNotify should be NULL as no transmission is in progress.A mutex can be used to guard access to the peripheral if necessary. */configASSERT( xTaskToNotify == NULL );/* Store the handle of the calling task. */xTaskToNotify = xTaskGetCurrentTaskHandle();/* Start the transmission - an interrupt is generated when the transmissionis complete. */vStartTransmit( pcData, xDataLength );}/*-----------------------------------------------------------*//* The transmit end interrupt. */void vTransmitEndISR( void ){BaseType_t xHigherPriorityTaskWoken = pdFALSE;/* At this point xTaskToNotify should not be NULL as a transmission was inprogress. */configASSERT( xTaskToNotify != NULL );/* Notify the task that the transmission is complete. */vTaskNotifyGiveFromISR( xTaskToNotify, &amp;xHigherPriorityTaskWoken );/* There are no transmissions in progress, so no tasks to notify. */xTaskToNotify = NULL;/* If xHigherPriorityTaskWoken is now set to pdTRUE then a context switchshould be performed to ensure the interrupt returns directly to the highestpriority task. The macro used for this purpose is dependent on the port inuse and may be called portEND_SWITCHING_ISR(). */portYIELD_FROM_ISR( xHigherPriorityTaskWoken );}/*-----------------------------------------------------------*//* The task that initiates the transmission, then enters the Blocked state (sonot consuming any CPU time) to wait for it to complete. */void vAFunctionCalledFromATask( uint8_t ucDataToTransmit, size_t xDataLength ){uint32_t ulNotificationValue;const TickType_t xMaxBlockTime = pdMS_TO_TICKS( 200 );/* Start the transmission by calling the function shown above. */StartTransmission( ucDataToTransmit, xDataLength );/* Wait for the transmission to complete. */ulNotificationValue = ulTaskNotifyTake( pdFALSE, xMaxBlockTime );if( ulNotificationValue == 1 ){/* The transmission ended as expected. */}else{/* The call to ulTaskNotifyTake() timed out. */}}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#240-xtasknotifystateclear","title":"2.40 xTaskNotifyStateClear()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dBaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_166","title":"\u6982\u8981","text":"<p>\u6bcf\u4e2a\u4efb\u52a1\u90fd\u6709\u4e00\u4e2a32\u4f4d\u7684\u901a\u77e5\u503c\uff0c\u8be5\u503c\u5728\u521b\u5efa\u4efb\u52a1\u65f6\u521d\u59cb\u5316\u4e3a\u96f6\u3002\u4efb\u52a1\u901a\u77e5\u662f\u76f4\u63a5\u53d1\u9001\u7ed9\u4efb\u52a1\u7684\u4e8b\u4ef6\uff0c\u53ef\u4ee5\u89e3\u9664\u5bf9\u63a5\u6536\u4efb\u52a1\u7684\u963b\u585e\uff0c\u5e76\u53ef\u9009\u5730\u66f4\u65b0\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\u3002</p> <p>\u5982\u679c\u4efb\u52a1\u5904\u4e8e\u201c\u963b\u585e\u201d\u72b6\u6001\u7b49\u5f85\u901a\u77e5\u5230\u8fbe\uff0c\u5219\u8be5\u4efb\u52a1\u7acb\u5373\u9000\u51fa\u201c\u963b\u585e\u201d\u72b6\u6001\uff0c\u901a\u77e5\u4e0d\u518d\u4fdd\u6301\u6302\u8d77\u3002\u5982\u679c\u4efb\u52a1\u5728\u6536\u5230\u901a\u77e5\u65f6\u6ca1\u6709\u7b49\u5f85\u901a\u77e5\uff0c\u90a3\u4e48\u901a\u77e5\u5c06\u4e00\u76f4\u6302\u8d77\uff0c\u76f4\u5230:</p> <ul> <li>\u63a5\u6536\u4efb\u52a1\u8bfb\u53d6\u901a\u77e5\u503c\u3002</li> <li>\u63a5\u6536\u4efb\u52a1\u662f\u8c03\u7528xTaskNotifyStateClear()\u4e2d\u7684\u4e3b\u9898\u4efb\u52a1\u3002</li> </ul> <p>xTaskNotifyStateClear()\u5c06\u6e05\u9664\u6302\u8d77\u7684\u901a\u77e5\uff0c\u4f46\u4e0d\u66f4\u6539\u901a\u77e5\u503c\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_167","title":"\u53c2\u6570","text":"<p>xTask</p> <ul> <li>\u5c06\u6e05\u9664\u6302\u8d77\u901a\u77e5\u7684\u4efb\u52a1\u7684\u53e5\u67c4\u3002\u5c06xTask\u8bbe\u7f6e\u4e3aNULL\u5c06\u6e05\u9664\u8c03\u7528xTaskNotifyStateClear()\u7684\u4efb\u52a1\u4e2d\u4e00\u4e2a\u6302\u8d77\u7684\u901a\u77e5\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_168","title":"\u8fd4\u56de\u503c","text":"<p>\u5982\u679cxTask\u5f15\u7528\u7684\u4efb\u52a1\u6709\u4e00\u4e2a\u901a\u77e5\u6302\u8d77\uff0c\u5219\u8fd4\u56depdPASS\u3002\u5982\u679cxTask\u5f15\u7528\u7684\u4efb\u52a1\u6ca1\u6709\u6302\u8d77\u901a\u77e5\uff0c\u5219\u8fd4\u56depdFAIL\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_169","title":"\u793a\u4f8b","text":"<pre><code>/* An example UART transmit function. The function starts a UART transmission then waits to be notified that the transmission is complete. The transmission complete notification is sent from the UART interrupt. The calling task\u2019s notification state is cleared before the transmission is started to ensure it is not co-incidentally already pending before the task attempts to block on its notification state. */void vSerialPutString( const signed char * const pcStringToSend,uint16_t usStringLength ){const TickType_t xMaxBlockTime = pdMS_TO_TICKS( 5000 );/* xSendingTask holds the handle of the task waiting for the transmission tocomplete. If xSendingTask is NULL then a transmission is not in progress.Don't start to send a new string unless transmission of the previous stringis complete. */if( ( xSendingTask == NULL ) &amp;&amp; ( usStringLength &gt; 0 ) ){/* Ensure the calling task\u2019s notification state is not already pending. */xTaskNotifyStateClear( NULL );/* Store the handle of the transmitting task. This is used to unblockthe task when the transmission has completed. */xSendingTask = xTaskGetCurrentTaskHandle();/* Start sending the string - the transmission is then controlled by aninterrupt. */UARTSendString( pcStringToSend, usStringLength );/* Wait in the Blocked state (so not using any CPU time) until the UARTISR sends a notification to xSendingTask to notify (and unblock) the taskwhen the transmission is complete. */ulTaskNotifyTake( pdTRUE, xMaxBlockTime );}}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#241-ultasknotifytake","title":"2.41 ulTaskNotifyTake()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201duint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_170","title":"\u6982\u8981","text":"<p>\u6bcf\u4e2a\u4efb\u52a1\u90fd\u6709\u4e00\u4e2a32\u4f4d\u7684\u901a\u77e5\u503c\uff0c\u8be5\u503c\u5728\u521b\u5efa\u4efb\u52a1\u65f6\u521d\u59cb\u5316\u4e3a\u96f6\u3002\u4efb\u52a1\u901a\u77e5\u662f\u76f4\u63a5\u53d1\u9001\u7ed9\u4efb\u52a1\u7684\u4e8b\u4ef6\uff0c\u53ef\u4ee5\u89e3\u9664\u5bf9\u63a5\u6536\u4efb\u52a1\u7684\u963b\u585e\uff0c\u5e76\u53ef\u9009\u5730\u66f4\u65b0\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\u3002</p> <p>ulTaskNotifyTake()\u7528\u4e8e\u5f53\u4efb\u52a1\u901a\u77e5\u88ab\u7528\u4f5c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u6216\u8ba1\u6570\u4fe1\u53f7\u91cf\u7684\u66f4\u5feb\u548c\u66f4\u8f7b\u7684\u66ff\u4ee3\u65b9\u6cd5\u65f6\u3002FreeRTOS\u4fe1\u53f7\u91cf\u662f\u4f7f\u7528xSemaphoreTake() API\u51fd\u6570\u83b7\u53d6\u7684\uff0culTaskNotifyTake()\u76f8\u5f53\u4e8e\u4f7f\u7528\u4efb\u52a1\u901a\u77e5\u503c\u800c\u4e0d\u662f\u5355\u72ec\u7684\u4fe1\u53f7\u91cf\u5bf9\u8c61\u3002</p> <p>\u6b63\u5982xTaskNotifyWait()\u5c06\u5728\u901a\u77e5\u6302\u8d77\u65f6\u8fd4\u56de\uff0culTaskNotifyTake()\u5c06\u5728\u4efb\u52a1\u7684\u901a\u77e5\u503c\u4e0d\u4e3a\u96f6\u65f6\u8fd4\u56de\uff0c\u5728\u5b83\u8fd4\u56de\u4e4b\u524d\u9012\u51cf\u4efb\u52a1\u7684\u901a\u77e5\u503c\u3002</p> <p>\u4efb\u52a1\u53ef\u4ee5\u4f7f\u7528ulTaskNotifyTake()\u6765\u9009\u62e9\u6027\u5730\u963b\u585e\u4ee5\u7b49\u5f85\u4efb\u52a1\u7684\u901a\u77e5\u503c\u4e3a\u975e\u96f6\u3002\u4efb\u52a1\u5904\u4e8e\u963b\u585e\u72b6\u6001\u65f6\u4e0d\u5360\u7528CPU\u65f6\u95f4\u3002</p> <p>ulTaskNotifyTake()\u53ef\u4ee5\u5728\u9000\u51fa\u65f6\u5c06\u4efb\u52a1\u7684\u901a\u77e5\u503c\u6e05\u9664\u4e3a\u96f6\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u901a\u77e5\u503c\u7684\u4f5c\u7528\u7c7b\u4f3c\u4e8e\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf;\u4e5f\u53ef\u4ee5\u5728\u9000\u51fa\u65f6\u51cf\u5c11\u4efb\u52a1\u7684\u901a\u77e5\u503c\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u901a\u77e5\u503c\u7684\u4f5c\u7528\u66f4\u7c7b\u4f3c\u4e8e\u8ba1\u6570\u4fe1\u53f7\u91cf\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_171","title":"\u53c2\u6570","text":"<p>xClearCountOnExit</p> <ul> <li>\u5982\u679cxClearCountOnExit\u8bbe\u7f6e\u4e3apdFALSE\uff0c\u90a3\u4e48\u4efb\u52a1\u7684\u901a\u77e5\u503c\u5728ulTaskNotifyTake()\u9000\u51fa\u4e4b\u524d\u9012\u51cf\u3002\u8fd9\u76f8\u5f53\u4e8e\u901a\u8fc7\u6210\u529f\u8c03\u7528xSemaphoreTake()\u6765\u51cf\u5c11\u4e00\u4e2a\u8ba1\u6570\u4fe1\u53f7\u91cf\u7684\u503c\u3002</li> <li>\u5982\u679cxClearCountOnExit\u8bbe\u7f6e\u4e3apdTRUE\uff0c\u90a3\u4e48\u5728ulTaskNotifyTake()\u9000\u51fa\u4e4b\u524d\uff0c\u4efb\u52a1\u7684\u901a\u77e5\u503c\u5c06\u91cd\u7f6e\u4e3a0\u3002\u8fd9\u76f8\u5f53\u4e8e\u5728\u6210\u529f\u8c03\u7528xSemaphoreTake()\u4e4b\u540e\uff0c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u7684\u503c\u88ab\u4fdd\u7559\u4e3a\u96f6(\u6216\u7a7a\uff0c\u6216'\u4e0d\u53ef\u7528')\u3002</li> </ul> <p>xTicksToWait</p> <ul> <li>\u5f53\u8c03\u7528ulTaskNotifyTake()\u65f6\uff0c\u5982\u679c\u901a\u77e5\u5c1a\u672a\u6302\u8d77\uff0c\u5219\u5728Blocked\u72b6\u6001\u4e0b\u7b49\u5f85\u63a5\u6536\u901a\u77e5\u7684\u6700\u5927\u65f6\u95f4\u3002</li> <li>RTOS\u4efb\u52a1\u5904\u4e8eBlocked\u72b6\u6001\u65f6\u4e0d\u5360\u7528CPU\u65f6\u95f4\u3002</li> <li>\u65f6\u95f4\u4ee5RTOS\u7684\u65f6\u95f4\u5468\u671f\u6307\u5b9a\u3002\u53ef\u4ee5\u4f7f\u7528pdMS_TO_TICKS()\u5b8f\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5\u8282\u62cd\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_172","title":"\u8fd4\u56de\u503c","text":"<p>\u4efb\u52a1\u7684\u901a\u77e5\u503c\u5728\u51cf\u5c11\u6216\u6e05\u9664\u4e4b\u524d\u7684\u503c(\u53c2\u89c1xClearCountOnExit\u7684\u63cf\u8ff0)\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_173","title":"\u63d0\u793a","text":"<p>\u5f53\u4e00\u4e2a\u4efb\u52a1\u4f7f\u7528\u5b83\u7684\u901a\u77e5\u503c\u4f5c\u4e3a\u4e8c\u8fdb\u5236\u4fe1\u53f7\u6216\u8ba1\u6570\u4fe1\u53f7\u91cf\u65f6\uff0c\u5176\u4ed6\u4efb\u52a1\u548c\u4e2d\u65ad\u5e94\u8be5\u4f7f\u7528xTaskNotifyGive()\u5b8f\u6216xTaskNotify()\u51fd\u6570(\u51fd\u6570\u7684eAction\u53c2\u6570\u8bbe\u7f6e\u4e3aeIncrement)\u5411\u5b83\u53d1\u9001\u901a\u77e5(\u8fd9\u4e24\u8005\u662f\u7b49\u4ef7\u7684)\u3002</p> <p>RTOS\u4efb\u52a1\u901a\u77e5\u529f\u80fd\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u542f\u7528\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728FreeRTOSConfig.h\u4e2d\u5c06configUSE_TASK_NOTIFICATIONS\u8bbe\u7f6e\u4e3a0\u6765\u4ece\u6784\u5efa\u4e2d\u6392\u9664(\u6bcf\u4e2a\u4efb\u52a1\u8282\u77018\u5b57\u8282)\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_174","title":"\u793a\u4f8b","text":"<pre><code>/* An interrupt handler that unblocks a high priority task in which the event that generated the interrupt is processed. If the priority of the task is high enough then the interrupt will return directly to the task (so it will interrupt one task then return to a different task), so the processing will occur contiguously in time - just as if all the processing had been done in the interrupt handler itself. */void vANInterruptHandler( void ){BaseType_t xHigherPriorityTaskWoken = pdFALSE;/* Clear the interrupt. */prvClearInterruptSource();/* Unblock the handling task so the task can perform any processing necessitatedby the interrupt. xHandlingTask is the task's handle, which was obtainedwhen the task was created. */vTaskNotifyGiveFromISR( xHandlingTask, &amp;xHigherPriorityTaskWoken );/* Force a context switch if xHigherPriorityTaskWoken is now set to pdTRUE.The macro used to do this is dependent on the port and may be calledportEND_SWITCHING_ISR(). */portYIELD_FROM_ISR( xHigherPriorityTaskWoken );}/*-----------------------------------------------------------*//* Task that blocks waiting to be notified that the peripheral needs servicing. */void vHandlingTask( void *pvParameters ){BaseType_t xEvent;for( ;; ){/* Block indefinitely (without a timeout, so no need to check the function'sreturn value) to wait for a notification. Here the RTOS task notificationis being used as a binary semaphore, so the notification value is clearedto zero on exit. NOTE! Real applications should not block indefinitely,but instead time out occasionally in order to handle error conditionsthat may prevent the interrupt from sending any more notifications. */ulTaskNotifyTake( pdTRUE, /* Clear the notification value on exit. */portMAX_DELAY );/* Block indefinitely. *//* The RTOS task notification is used as a binary (as opposed to a counting)semaphore, so only go back to wait for further notifications when all eventspending in the peripheral have been processed. */do{xEvent = xQueryPeripheral();if( xEvent != NO_MORE_EVENTS ){vProcessPeripheralEvent( xEvent );}} while( xEvent != NO_MORE_EVENTS );}}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#242-xtasknotifywait","title":"2.42 xTaskNotifyWait()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dBaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry,uint32_t ulBitsToClearOnExit,uint32_t *pulNotificationValue,TickType_t xTicksToWait );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_175","title":"\u6982\u8981","text":"<p>\u6bcf\u4e2a\u4efb\u52a1\u90fd\u6709\u4e00\u4e2a32\u4f4d\u7684\u901a\u77e5\u503c\uff0c\u8be5\u503c\u5728\u521b\u5efa\u4efb\u52a1\u65f6\u521d\u59cb\u5316\u4e3a\u96f6\u3002\u4efb\u52a1\u901a\u77e5\u662f\u76f4\u63a5\u53d1\u9001\u7ed9\u4efb\u52a1\u7684\u4e8b\u4ef6\uff0c\u5b83\u53ef\u4ee5\u89e3\u9664\u5bf9\u63a5\u6536\u4efb\u52a1\u7684\u963b\u585e\uff0c\u5e76\u53ef\u4ee5\u901a\u8fc7\u591a\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u66f4\u65b0\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\u3002\u4f8b\u5982\uff0c\u901a\u77e5\u53ef\u4ee5\u8986\u76d6\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\uff0c\u6216\u8005\u53ea\u5728\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\u4e2d\u8bbe\u7f6e\u4e00\u4e2a\u6216\u591a\u4e2a\u6bd4\u7279\u3002\u6709\u5173\u793a\u4f8b\uff0c\u8bf7\u53c2\u9605xTaskNotify() API\u6587\u6863\u3002</p> <p>xTaskNotifyWait()\u4f7f\u7528\u53ef\u9009\u8d85\u65f6\u7b49\u5f85\u8c03\u7528\u4efb\u52a1\u63a5\u6536\u901a\u77e5\u3002</p> <p>\u5982\u679c\u63a5\u6536\u4efb\u52a1\u5df2\u7ecf\u88ab\u963b\u585e\uff0c\u7b49\u5f85\u901a\u77e5\uff0c\u5f53\u6536\u5230\u901a\u77e5\u65f6\uff0c\u63a5\u6536\u4efb\u52a1\u5c06\u4ece\u963b\u585e\u72b6\u6001\u4e2d\u79fb\u9664\uff0c\u901a\u77e5\u5c06\u88ab\u6e05\u9664\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_176","title":"\u53c2\u6570","text":"<p>ulBitsToClearOnEntry</p> <ul> <li>\u5728ulBitsToClearOnEntry\u4e2d\u8bbe\u7f6e\u7684\u4efb\u4f55\u4f4d\u90fd\u5c06\u5728\u8fdb\u5165xTaskNotifyWait()\u51fd\u6570\u65f6\u5728\u8c03\u7528\u4efb\u52a1\u7684\u901a\u77e5\u503c\u4e2d\u88ab\u6e05\u9664(\u5728\u4efb\u52a1\u7b49\u5f85\u4e00\u4e2a\u65b0\u7684\u901a\u77e5\u4e4b\u524d)\uff0c\u524d\u63d0\u662f\u5f53xTaskNotifyWait()\u88ab\u8c03\u7528\u65f6\uff0c\u901a\u77e5\u8fd8\u6ca1\u6709\u6302\u8d77\u3002</li> <li>\u4f8b\u5982\uff0c\u5982\u679culBitsToClearOnEntry\u662f0x01\uff0c\u90a3\u4e48\u4efb\u52a1\u7684\u901a\u77e5\u503c\u7684\u7b2c0\u4f4d\u5c06\u5728\u8fdb\u5165\u51fd\u6570\u65f6\u88ab\u6e05\u9664\u3002</li> <li>\u5c06ulBitsToClearOnEntry\u8bbe\u7f6e\u4e3a0xffffffff (ULONG_MAX)\u5c06\u6e05\u9664\u4efb\u52a1\u901a\u77e5\u503c\u4e2d\u7684\u6240\u6709\u4f4d\uff0c\u6709\u6548\u5730\u5c06\u8be5\u503c\u6e05\u9664\u4e3a0\u3002</li> </ul> <p>ulBitsToClearOnExit</p> <ul> <li>\u5982\u679c\u6536\u5230\u901a\u77e5\uff0c\u5728ulBitsToClearOnExit\u4e2d\u8bbe\u7f6e\u7684\u4efb\u4f55\u4f4d\u90fd\u5c06\u5728xTaskNotifyWait()\u51fd\u6570\u9000\u51fa\u4e4b\u524d\u5728\u8c03\u7528\u4efb\u52a1\u7684\u901a\u77e5\u503c\u4e2d\u6e05\u9664\u3002</li> <li>\u5f53\u4efb\u52a1\u7684\u901a\u77e5\u503c\u4fdd\u5b58\u5728*pulNotificationValue\u4e2d(\u53c2\u89c1\u4e0b\u9762pulNotificationValue\u7684\u63cf\u8ff0)\u540e\uff0c\u8fd9\u4e9b\u4f4d\u5c06\u88ab\u6e05\u9664\u3002</li> <li>\u4f8b\u5982\uff0c\u5982\u679culBitsToClearOnExit\u4e3a0x03\uff0c\u90a3\u4e48\u5728\u51fd\u6570\u9000\u51fa\u4e4b\u524d\uff0c\u4efb\u52a1\u901a\u77e5\u503c\u7684\u7b2c0\u4f4d\u548c\u7b2c1\u4f4d\u5c06\u88ab\u6e05\u9664\u3002</li> <li>\u8bbe\u7f6eulBitsToClearOnExit\u4e3a0xffffffff (ULONG_MAX)\u5c06\u6e05\u9664\u4efb\u52a1\u901a\u77e5\u503c\u4e2d\u7684\u6240\u6709\u4f4d\uff0c\u6709\u6548\u5730\u5c06\u8be5\u503c\u6e05\u9664\u4e3a0\u3002</li> </ul> <p>pulNotificationValue</p> <ul> <li>\u7528\u4e8e\u4f20\u9012\u4efb\u52a1\u7684\u901a\u77e5\u503c\u3002\u590d\u5236\u5230*pulNotificationValue\u7684\u503c\u662f\u4efb\u52a1\u7684\u901a\u77e5\u503c\uff0c\u56e0\u4e3aulBitsToClearOnExit\u8bbe\u7f6e\u5bfc\u81f4\u4efb\u4f55\u4f4d\u88ab\u6e05\u9664\u4e4b\u524d\u7684\u503c\u3002</li> <li>pulNotificationValue\u662f\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u5982\u679c\u4e0d\u9700\u8981\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3aNULL\u3002</li> </ul> <p>xTicksToWait</p> <ul> <li>\u5f53\u8c03\u7528xTaskNotifyWait()\u65f6\uff0c\u5982\u679c\u901a\u77e5\u5c1a\u672a\u6302\u8d77\uff0c\u5219\u5728Blocked\u72b6\u6001\u4e0b\u7b49\u5f85\u63a5\u6536\u901a\u77e5\u7684\u6700\u5927\u65f6\u95f4\u3002</li> <li>\u4efb\u52a1\u5904\u4e8e\u963b\u585e\u72b6\u6001\u65f6\u4e0d\u5360\u7528CPU\u65f6\u95f4\u3002</li> <li>\u65f6\u95f4\u4ee5RTOS\u7684\u65f6\u95f4\u5468\u671f\u6307\u5b9a\u3002\u53ef\u4ee5\u4f7f\u7528pdMS_TO_TICKS()\u5b8f\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5\u8282\u62cd\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_177","title":"\u8fd4\u56de\u503c","text":"<p>\u5982\u679c\u6536\u5230\u4e86\u901a\u77e5\uff0c\u6216\u8005\u5f53\u8c03\u7528xTaskNotifyWait()\u65f6\u901a\u77e5\u5df2\u7ecf\u6302\u8d77\uff0c\u5219\u8fd4\u56depdTRUE\u3002</p> <p>\u5982\u679c\u5728\u6536\u5230\u901a\u77e5\u4e4b\u524d\u5bf9xTaskNotifyWait()\u7684\u8c03\u7528\u8d85\u65f6\uff0c\u5219\u8fd4\u56depdFALSE\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_178","title":"\u63d0\u793a","text":"<p>\u5982\u679c\u60a8\u4f7f\u7528\u4efb\u52a1\u901a\u77e5\u6765\u5b9e\u73b0\u4e8c\u8fdb\u5236\u6216\u8ba1\u6570\u4fe1\u53f7\u91cf\u7c7b\u578b\u7684\u884c\u4e3a\uff0c\u90a3\u4e48\u4f7f\u7528\u66f4\u7b80\u5355\u7684ulTaskNotifyTake() API\u51fd\u6570\u800c\u4e0d\u662fxTaskNotifyWait()\u3002</p> <p>RTOS\u4efb\u52a1\u901a\u77e5\u529f\u80fd\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u542f\u7528\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728FreeRTOSConfig.h\u4e2d\u5c06configUSE_TASK_NOTIFICATIONS\u8bbe\u7f6e\u4e3a0\u6765\u4ece\u6784\u5efa\u4e2d\u6392\u9664(\u6bcf\u4e2a\u4efb\u52a1\u8282\u77018\u5b57\u8282)\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_179","title":"\u793a\u4f8b","text":"<pre><code>/* This task shows bits within the RTOS task notification value being used to pass different events to the task in the same way that flags in an event group might be used for the same purpose. */void vAnEventProcessingTask( void *pvParameters ){uint32_t ulNotifiedValue;for( ;; ){/* Block indefinitely (without a timeout, so no need to check the function'sreturn value) to wait for a notification.Bits in this RTOS task's notification value are set by the notifyingtasks and interrupts to indicate which events have occurred. */xTaskNotifyWait( 0x00, /* Don't clear any notification bits on entry. */ULONG_MAX, /* Reset the notification value to 0 on exit. */&amp;ulNotifiedValue, /* Notified value pass out in ulNotifiedValue. */portMAX_DELAY ); /* Block indefinitely. *//* Process any events that have been latched in the notified value. */if( ( ulNotifiedValue &amp; 0x01 ) != 0 ){/* Bit 0 was set - process whichever event is represented by bit 0. */prvProcessBit0Event();}if( ( ulNotifiedValue &amp; 0x02 ) != 0 ){/* Bit 1 was set - process whichever event is represented by bit 1. */prvProcessBit1Event();}if( ( ulNotifiedValue &amp; 0x04 ) != 0 ){/* Bit 2 was set - process whichever event is represented by bit 2. */prvProcessBit2Event();}/* Etc. */}}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#243-uxtaskpriorityget","title":"2.43 uxTaskPriorityGet()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dUBaseType_t uxTaskPriorityGet( TaskHandle_t pxTask );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_180","title":"\u6982\u8981","text":"<p>\u67e5\u8be2\u5728\u8c03\u7528uxTaskPriorityGet()\u65f6\u5206\u914d\u7ed9\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_181","title":"\u53c2\u6570","text":"<p>pxTask</p> <ul> <li>\u6b63\u5728\u67e5\u8be2\u7684\u4efb\u52a1\u7684\u53e5\u67c4(\u4e3b\u9898\u4efb\u52a1)\u3002</li> <li>\u8981\u83b7\u5f97\u4efb\u52a1\u7684\u53e5\u67c4\uff0c\u4f7f\u7528xTaskCreate()\u521b\u5efa\u4efb\u52a1\u5e76\u4f7f\u7528pxCreatedTask\u53c2\u6570\uff0c\u6216\u8005\u4f7f\u7528xTaskCreateStatic()\u521b\u5efa\u4efb\u52a1\u5e76\u5b58\u50a8\u8fd4\u56de\u503c\uff0c\u6216\u8005\u5728\u8c03\u7528xTaskGetHandle()\u65f6\u4f7f\u7528\u4efb\u52a1\u7684\u540d\u79f0\u3002</li> <li>\u4efb\u52a1\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012NULL\u6765\u4ee3\u66ff\u6709\u6548\u7684\u4efb\u52a1\u53e5\u67c4\u6765\u67e5\u8be2\u81ea\u5df1\u7684\u4f18\u5148\u7ea7\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_182","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u7684\u503c\u662f\u8c03\u7528uxTaskPriorityGet()\u65f6\u67e5\u8be2\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_183","title":"\u793a\u4f8b","text":"<pre><code>void vAFunction( void ){TaskHandle_t xHandle;UBaseType_t uxCreatedPriority, uxOurPriority;/* Create a task, storing the handle of the created task in xHandle. */if( xTaskCreate( vTaskCode,\"Demo task\",STACK_SIZE, NULL, PRIORITY,&amp;xHandle) != pdPASS ){/* The task was not created successfully. */}else{/* Use the handle to query the priority of the created task. */uxCreatedPriority = uxTaskPriorityGet( xHandle );/* Query the priority of the calling task by using NULL in place ofa valid task handle. */uxOurPriority = uxTaskPriorityGet( NULL );/* Is the priority of this task higher than the priority of the taskjust created? */if( uxOurPriority &gt; uxCreatedPriority ){/* Yes. */}}}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#244-vtaskpriorityset","title":"2.44 vTaskPrioritySet()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dvoid vTaskPrioritySet( TaskHandle_t pxTask, UBaseType_t uxNewPriority );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_184","title":"\u6982\u8981","text":"<p>\u4fee\u6539\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_185","title":"\u53c2\u6570","text":"<p>pxTask</p> <ul> <li>\u6b63\u5728\u4fee\u6539\u7684\u4efb\u52a1(\u4e3b\u9898\u4efb\u52a1)\u7684\u53e5\u67c4\u3002</li> <li>\u8981\u83b7\u5f97\u4efb\u52a1\u7684\u53e5\u67c4\uff0c\u4f7f\u7528xTaskCreate()\u521b\u5efa\u4efb\u52a1\u5e76\u4f7f\u7528pxCreatedTask\u53c2\u6570\uff0c\u6216\u8005\u4f7f\u7528xTaskCreateStatic()\u521b\u5efa\u4efb\u52a1\u5e76\u5b58\u50a8\u8fd4\u56de\u503c\uff0c\u6216\u8005\u5728\u8c03\u7528xTaskGetHandle()\u65f6\u4f7f\u7528\u4efb\u52a1\u7684\u540d\u79f0\u3002</li> <li>\u4efb\u52a1\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012NULL\u6765\u4ee3\u66ff\u6709\u6548\u7684\u4efb\u52a1\u53e5\u67c4\u6765\u6539\u53d8\u81ea\u5df1\u7684\u4f18\u5148\u7ea7\u3002</li> </ul> <p>uxNewPriority</p> <ul> <li>\u4e3b\u9898\u4efb\u52a1\u5c06\u88ab\u8bbe\u7f6e\u7684\u4f18\u5148\u7ea7\u3002\u4f18\u5148\u7ea7\u53ef\u4ee5\u4ece0(\u6700\u4f4e\u4f18\u5148\u7ea7)\u5206\u914d\u5230(configMAX_PRIORITIES - 1)(\u6700\u9ad8\u4f18\u5148\u7ea7)\u3002</li> <li>configMAX_PRIORITIES\u5728FreeRTOSConfig.h\u4e2d\u5b9a\u4e49\u3002\u4f20\u9012\u4e00\u4e2a\u4ee5\u4e0a\u7684\u503c(configMAX_PRIORITIES - 1)\u5c06\u5bfc\u81f4\u5206\u914d\u7ed9\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u4e0a\u9650\u4e3a\u6700\u5927\u5408\u6cd5\u503c\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_186","title":"\u8fd4\u56de\u503c","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_187","title":"\u63d0\u793a","text":"<p>vTaskPrioritySet()\u53ea\u80fd\u4ece\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1\u4e2d\u8c03\u7528\uff0c\u56e0\u6b64\u4e0d\u80fd\u5728\u8c03\u5ea6\u5668\u5904\u4e8e\u521d\u59cb\u5316\u72b6\u6001(\u5728\u542f\u52a8\u8c03\u5ea6\u5668\u4e4b\u524d)\u65f6\u8c03\u7528\u3002</p> <p>\u53ef\u80fd\u6709\u4e00\u7ec4\u4efb\u52a1\u90fd\u88ab\u963b\u585e\uff0c\u7b49\u5f85\u540c\u4e00\u4e2a\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u4e8b\u4ef6\u3002\u8fd9\u4e9b\u4efb\u52a1\u5c06\u6839\u636e\u5b83\u4eec\u7684\u4f18\u5148\u7ea7\u6392\u5e8f\u2014\u2014\u4f8b\u5982\uff0c\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u5c06\u89e3\u9664\u963b\u585e\u6b63\u5728\u7b49\u5f85\u4e8b\u4ef6\u7684\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u4efb\u52a1\uff0c\u7b2c\u4e8c\u4e2a\u4e8b\u4ef6\u5c06\u89e3\u9664\u963b\u585e\u6700\u521d\u6b63\u5728\u7b49\u5f85\u4e8b\u4ef6\u7684\u4f18\u5148\u7ea7\u7b2c\u4e8c\u9ad8\u7684\u4efb\u52a1\uff0c\u7b49\u7b49\u3002\u4f7f\u7528vTaskPrioritySet()\u66f4\u6539\u8fd9\u6837\u4e00\u4e2a\u88ab\u963b\u585e\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u4e0d\u4f1a\u5bfc\u81f4\u88ab\u963b\u585e\u4efb\u52a1\u7684\u8bc4\u4f30\u987a\u5e8f\u88ab\u91cd\u65b0\u8bc4\u4f30\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_188","title":"\u793a\u4f8b","text":"<pre><code>void vAFunction( void ){TaskHandle_t xHandle;/* Create a task, storing the handle of the created task in xHandle. */if( xTaskCreate( vTaskCode,\"Demo task\",STACK_SIZE,NULL,PRIORITY,&amp;xHandle) != pdPASS ){/* The task was not created successfully. */}else{/* Use the handle to raise the priority of the created task. */vTaskPrioritySet( xHandle, PRIORITY + 1 );/* Use NULL in place of a valid task handle to set the priority of thecalling task to 1. */vTaskPrioritySet( NULL, 1 );}}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#245-vtaskresume","title":"2.45 vTaskResume()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dvoid vTaskResume( TaskHandle_t pxTaskToResume );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_189","title":"\u6982\u8981","text":"<p>\u5c06\u4efb\u52a1\u4ece\u6302\u8d77\u72b6\u6001\u8f6c\u79fb\u5230\u5c31\u7eea\u72b6\u6001\u3002\u4e4b\u524d\u5fc5\u987b\u4f7f\u7528vTaskSuspend()\u8c03\u7528\u5c06\u4efb\u52a1\u7f6e\u4e8eSuspended\u72b6\u6001\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_190","title":"\u53c2\u6570","text":"<p>pxTaskToResume</p> <ul> <li>\u6b63\u5728\u6062\u590d\u7684\u4efb\u52a1\u7684\u53e5\u67c4(\u4ece\u6302\u8d77\u72b6\u6001\u8f6c\u6362\u51fa\u6765)\u3002\u8fd9\u662f\u4e3b\u9898\u4efb\u52a1\u3002</li> <li>\u8981\u83b7\u5f97\u4efb\u52a1\u7684\u53e5\u67c4\uff0c\u4f7f\u7528xTaskCreate()\u521b\u5efa\u4efb\u52a1\u5e76\u4f7f\u7528pxCreatedTask\u53c2\u6570\uff0c\u6216\u8005\u4f7f\u7528xTaskCreateStatic()\u521b\u5efa\u4efb\u52a1\u5e76\u5b58\u50a8\u8fd4\u56de\u503c\uff0c\u6216\u8005\u5728\u8c03\u7528xTaskGetHandle()\u65f6\u4f7f\u7528\u4efb\u52a1\u7684\u540d\u79f0\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_191","title":"\u8fd4\u56de\u503c","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_192","title":"\u63d0\u793a","text":"<p>\u53ef\u4ee5\u901a\u8fc7\u963b\u585e\u4efb\u52a1\u6765\u7b49\u5f85\u961f\u5217\u4e8b\u4ef6\uff0c\u6307\u5b9a\u8d85\u65f6\u65f6\u95f4\u3002\u901a\u8fc7\u8c03\u7528vTaskSuspend()\u5c06\u8fd9\u6837\u7684Blocked\u4efb\u52a1\u79fb\u5230Suspended\u72b6\u6001\uff0c\u7136\u540e\u901a\u8fc7\u8c03\u7528vTaskResume()\u5c06\u5176\u79fb\u51faSuspended\u72b6\u6001\u5e76\u79fb\u5230Ready\u72b6\u6001\u662f\u5408\u6cd5\u7684\u3002\u5728\u6b64\u573a\u666f\u4e0b\uff0c\u4e0b\u4e00\u6b21\u4efb\u52a1\u8fdb\u5165Running\u72b6\u6001\u65f6\uff0c\u5b83\u5c06\u68c0\u67e5\u5176\u8d85\u65f6\u65f6\u95f4\u662f\u5426\u5df2\u7ecf(\u540c\u65f6)\u8fc7\u671f\u3002\u5982\u679c\u8d85\u65f6\u65f6\u95f4\u8fd8\u672a\u5230\u671f\uff0c\u4efb\u52a1\u5c06\u518d\u6b21\u8fdb\u5165Blocked\u72b6\u6001\uff0c\u7b49\u5f85\u961f\u5217\u4e8b\u4ef6\u76f4\u5230\u6700\u521d\u6307\u5b9a\u7684\u8d85\u65f6\u65f6\u95f4\u7684\u5269\u4f59\u65f6\u95f4\u3002</p> <p>\u4e5f\u53ef\u4ee5\u4f7f\u7528vTaskDelay()\u6216vTaskDelayUntil() API\u51fd\u6570\u963b\u585e\u4efb\u52a1\u4ee5\u7b49\u5f85\u4e34\u65f6\u4e8b\u4ef6\u3002\u901a\u8fc7\u8c03\u7528vTaskSuspend()\u5c06\u8fd9\u6837\u7684Blocked\u4efb\u52a1\u79fb\u5230Suspended\u72b6\u6001\uff0c\u7136\u540e\u901a\u8fc7\u8c03\u7528vTaskResume()\u5c06\u5176\u79fb\u51faSuspended\u72b6\u6001\u5e76\u79fb\u5230Ready\u72b6\u6001\u662f\u5408\u6cd5\u7684\u3002\u6309\u7167\u8fd9\u4e2a\u573a\u666f\uff0c\u4e0b\u4e00\u6b21\u4efb\u52a1\u8fdb\u5165Running\u72b6\u6001\u65f6\uff0c\u5b83\u5c06\u9000\u51favTaskDelay()\u6216vTaskDelayUntil()\u51fd\u6570\uff0c\u5c31\u50cf\u6307\u5b9a\u7684\u5ef6\u8fdf\u65f6\u95f4\u5df2\u7ecf\u8fc7\u671f\u4e00\u6837\uff0c\u5373\u4f7f\u5b9e\u9645\u60c5\u51b5\u5e76\u975e\u5982\u6b64\u3002</p> <p>vTaskResume()\u53ea\u80fd\u4ece\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1\u4e2d\u8c03\u7528\uff0c\u56e0\u6b64\u4e0d\u80fd\u5728\u8c03\u5ea6\u5668\u5904\u4e8e\u521d\u59cb\u5316\u72b6\u6001(\u5728\u542f\u52a8\u8c03\u5ea6\u5668\u4e4b\u524d)\u65f6\u8c03\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_193","title":"\u793a\u4f8b","text":"<pre><code>void vAFunction( void ){TaskHandle_t xHandle;/* Create a task, storing the handle to the created task in xHandle. */if( xTaskCreate( vTaskCode,\"Demo task\",STACK_SIZE,NULL,PRIORITY,&amp;xHandle) != pdPASS ){/* The task was not created successfully. */}else{/* Use the handle to suspend the created task. */vTaskSuspend( xHandle );/* The suspended task will not run during this period, unless another taskcalls vTaskResume( xHandle ). *//* Resume the suspended task again. */vTaskResume( xHandle );/* The created task is again available to the scheduler and can enterThe Running state. */}}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#246-xtaskresumeall","title":"2.46  xTaskResumeAll()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dBaseType_t xTaskResumeAll( void );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_194","title":"\u6982\u8981","text":"<p>\u5728\u5148\u524d\u8c03\u7528vTaskSuspendAll()\u4e4b\u540e\uff0c\u901a\u8fc7\u5c06\u8c03\u5ea6\u5668\u4ece\u6302\u8d77\u72b6\u6001\u8f6c\u6362\u4e3a\u6d3b\u52a8\u72b6\u6001\uff0c\u6062\u590d\u8c03\u5ea6\u5668\u6d3b\u52a8\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_195","title":"\u53c2\u6570","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_196","title":"\u8fd4\u56de\u503c","text":"<p>pdTRUE</p> <ul> <li>\u8c03\u5ea6\u7a0b\u5e8f\u5df2\u8f6c\u6362\u4e3a\u6d3b\u52a8\u72b6\u6001\u3002\u8be5\u8f6c\u6362\u5bfc\u81f4\u53d1\u751f\u6302\u8d77\u7684\u4e0a\u4e0b\u6587\u5207\u6362\u3002</li> </ul> <p>pdFALSE</p> <ul> <li>\u8c03\u5ea6\u7a0b\u5e8f\u88ab\u8f6c\u6362\u5230Active\u72b6\u6001\u4e14\u8f6c\u6362\u6ca1\u6709\u5bfc\u81f4\u53d1\u751f\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u6216\u8005\u7531\u4e8e\u5bf9vTaskSuspendAll()\u7684\u5d4c\u5957\u8c03\u7528\uff0c\u8c03\u5ea6\u7a0b\u5e8f\u5904\u4e8eSuspended\u72b6\u6001\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_197","title":"\u63d0\u793a","text":"<p>\u8c03\u5ea6\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528vTaskSuspendAll()\u6765\u6302\u8d77\u3002\u5f53\u8c03\u5ea6\u7a0b\u5e8f\u88ab\u6302\u8d77\u65f6\uff0c\u4e2d\u65ad\u4ecd\u7136\u662f\u542f\u7528\u7684\uff0c\u4f46\u662f\u4e0d\u4f1a\u53d1\u751f\u4e0a\u4e0b\u6587\u5207\u6362\u3002\u5982\u679c\u5728\u8c03\u5ea6\u5668\u6302\u8d77\u65f6\u8bf7\u6c42\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u5219\u8bf7\u6c42\u5c06\u88ab\u6302\u8d77\uff0c\u76f4\u5230\u8c03\u5ea6\u5668\u6062\u590d(\u53d6\u6d88\u6302\u8d77)\u3002</p> <p>\u5bf9vTaskSuspendAll()\u7684\u8c03\u7528\u53ef\u4ee5\u5d4c\u5957\u3002\u5728\u8c03\u5ea6\u5668\u5c06\u79bb\u5f00Suspended\u72b6\u6001\u5e76\u91cd\u65b0\u8fdb\u5165Active\u72b6\u6001\u4e4b\u524d\uff0c\u5fc5\u987b\u5bf9xTaskResumeAll()\u8fdb\u884c\u4e0e\u4e4b\u524d\u5bf9vTaskSuspendAll()\u76f8\u540c\u6570\u91cf\u7684\u8c03\u7528\u3002</p> <p>xTaskResumeAll()\u53ea\u80fd\u4ece\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1\u4e2d\u8c03\u7528\uff0c\u56e0\u6b64\u4e0d\u80fd\u5728\u8c03\u5ea6\u5668\u5904\u4e8e\u521d\u59cb\u5316\u72b6\u6001(\u5728\u542f\u52a8\u8c03\u5ea6\u5668\u4e4b\u524d)\u65f6\u8c03\u7528\u3002</p> <p>\u5f53\u8c03\u5ea6\u5668\u6302\u8d77\u65f6\uff0c\u4e0d\u5e94\u8be5\u8c03\u7528\u5176\u4ed6FreeRTOS API\u51fd\u6570\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_198","title":"\u793a\u4f8b","text":"<pre><code>/* A function that suspends then resumes the scheduler. */void vDemoFunction( void ){/* This function suspends the scheduler. When it is called from vTask1 thescheduler is already suspended, so this call creates a nesting depth of 2. */vTaskSuspendAll();/* Perform an action here. *//* As calls to vTaskSuspendAll() are now nested, resuming the scheduler heredoes not cause the scheduler to re-enter the active state. */xTaskResumeAll();}void vTask1( void * pvParameters ){for( ;; ){/* Perform some actions here. *//* At some point the task wants to perform an operation during which itdoes not want to get swapped out, or it wants to access data which is alsoaccessed from another task (but not from an interrupt). It cannot usetaskENTER_CRITICAL()/taskEXIT_CRITICAL() as the length of the operation maycause interrupts to be missed. *//* Prevent the scheduler from performing a context switch. */vTaskSuspendAll();/* Perform the operation here. There is no need to use critical sectionsas the task has all the processing time other than that utilized by interruptservice routines.*//* Calls to vTaskSuspendAll() can be nested, so it is safe to call a (nonAPI) function that also calls vTaskSuspendAll(). API functions should notbe called while the scheduler is suspended. */vDemoFunction();/* The operation is complete. Set the scheduler back into the Activestate. */if( xTaskResumeAll() == pdTRUE ){/* A context switch occurred within xTaskResumeAll(). */}else{/* A context switch did not occur within xTaskResumeAll(). */}}}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#247-xtaskresumefromisr","title":"2.47  xTaskResumeFromISR()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dBaseType_t xTaskResumeFromISR( TaskHandle_t pxTaskToResume );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_199","title":"\u6982\u8981","text":"<p>vTaskResume()\u7684\u4e00\u4e2a\u7248\u672c\uff0c\u53ef\u4ee5\u4ece\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u4e2d\u8c03\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_200","title":"\u53c2\u6570","text":"<p>pxTaskToResume</p> <ul> <li>\u6b63\u5728\u6062\u590d\u7684\u4efb\u52a1\u7684\u53e5\u67c4(\u4ece\u6302\u8d77\u72b6\u6001\u8f6c\u6362\u51fa\u6765)\u3002\u8fd9\u662f\u4e3b\u9898\u4efb\u52a1\u3002</li> <li>\u8981\u83b7\u5f97\u4efb\u52a1\u7684\u53e5\u67c4\uff0c\u4f7f\u7528xTaskCreate()\u521b\u5efa\u4efb\u52a1\u5e76\u4f7f\u7528pxCreatedTask\u53c2\u6570\uff0c\u6216\u8005\u4f7f\u7528xTaskCreateStatic()\u521b\u5efa\u4efb\u52a1\u5e76\u5b58\u50a8\u8fd4\u56de\u503c\uff0c\u6216\u8005\u5728\u8c03\u7528xTaskGetHandle()\u65f6\u4f7f\u7528\u4efb\u52a1\u7684\u540d\u79f0\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_201","title":"\u8fd4\u56de\u503c","text":"<p>pdTRUE</p> <ul> <li>\u5982\u679c\u6b63\u5728\u6062\u590d(\u672a\u963b\u585e)\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u5927\u4e8e\u6216\u7b49\u4e8e\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1(\u88ab\u4e2d\u65ad\u7684\u4efb\u52a1)\uff0c\u5219\u8fd4\u56de\u2014\u2014\u8fd9\u610f\u5473\u7740\u5728\u9000\u51fa\u4e2d\u65ad\u4e4b\u524d\u5e94\u8be5\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u3002</li> </ul> <p>pdFALSE</p> <ul> <li>\u5982\u679c\u6b63\u5728\u6062\u590d\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u4f4e\u4e8e\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1(\u88ab\u4e2d\u65ad\u7684\u4efb\u52a1)\uff0c\u5219\u8fd4\u56de-\u8fd9\u610f\u5473\u7740\u5728\u9000\u51fa\u4e2d\u65ad\u4e4b\u524d\u4e0d\u9700\u8981\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_202","title":"\u63d0\u793a","text":"<p>\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528vTaskSuspend()\u6765\u6302\u8d77\u4efb\u52a1\u3002\u5f53\u5904\u4e8e\u6302\u8d77\u72b6\u6001\u65f6\uff0c\u5c06\u4e0d\u4f1a\u9009\u62e9\u4efb\u52a1\u4ee5\u8fdb\u5165\u8fd0\u884c\u72b6\u6001\u3002vTaskResume()\u548cxTaskResumeFromISR()\u53ef\u4ee5\u7528\u6765\u6062\u590d(\u53d6\u6d88\u6302\u8d77)\u6302\u8d77\u7684\u4efb\u52a1\u3002\u53ef\u4ee5\u4ece\u4e2d\u65ad\u4e2d\u8c03\u7528xtaskresume()\uff0c\u4f46vTaskResume()\u4e0d\u80fd\u3002</p> <p>\u5bf9vTaskSuspend()\u7684\u8c03\u7528\u4e0d\u7ef4\u62a4\u5d4c\u5957\u8ba1\u6570\u3002\u4e00\u4e2a\u88ab\u591a\u4e2avTaskSuspend()\u8c03\u7528\u6302\u8d77\u7684\u4efb\u52a1\u603b\u662f\u4f1a\u88ab\u4e00\u4e2avTaskResume()\u6216xTaskResumeFromISR()\u8c03\u7528\u53d6\u6d88\u6302\u8d77\u3002</p> <p>xTaskResumeFromISR()\u4e0d\u80fd\u7528\u4e8e\u5c06\u4efb\u52a1\u4e0e\u4e2d\u65ad\u540c\u6b65\u3002\u5982\u679c\u4e2d\u65ad\u4e8b\u4ef6\u53d1\u751f\u7684\u901f\u5ea6\u5feb\u4e8e\u76f8\u5173\u4efb\u52a1\u7ea7\u5904\u7406\u51fd\u6570\u7684\u6267\u884c\uff0c\u90a3\u4e48\u8fd9\u6837\u505a\u5c06\u5bfc\u81f4\u4e2d\u65ad\u4e8b\u4ef6\u88ab\u9057\u6f0f\u3002\u4efb\u52a1\u548c\u4e2d\u65ad\u540c\u6b65\u53ef\u4ee5\u4f7f\u7528\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u6216\u8ba1\u6570\u4fe1\u53f7\u91cf\u5b89\u5168\u5730\u5b9e\u73b0\uff0c\u56e0\u4e3a\u4fe1\u53f7\u91cf\u5c06\u9501\u5b58\u4e8b\u4ef6\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_203","title":"\u793a\u4f8b","text":"<pre><code>TaskHandle_t xHandle;void vAFunction( void ){/* Create a task, storing the handle of the created task in xHandle. */xTaskCreate( vTaskCode, \"NAME\", STACK_SIZE, NULL, tskIDLE_PRIORITY, &amp;xHandle );/* ... Rest of code. */}void vTaskCode( void *pvParameters ){/* The task being suspended and resumed. */for( ;; ){/* ... Perform some function here. *//* The task suspends itself by using NULL as the parameter to vTaskSuspend()in place of a valid task handle. */vTaskSuspend( NULL );/* The task is now suspended, so will not reach here until the ISR resumes(un-suspends) it. */}}void vAnExampleISR( void ){BaseType_t xYieldRequired;/* Resume the suspended task. */xYieldRequired = xTaskResumeFromISR( xHandle );if( xYieldRequired == pdTRUE ){/* A context switch should now be performed so the ISR returns directly tothe resumed task. This is because the resumed task had a priority that wasequal to or higher than the task that is currently in the Running state.NOTE: The syntax required to perform a context switch from an ISR variesfrom port to port, and from compiler to compiler. Check the documentation andexamples for the port being used to find the syntax required by yourapplication. It is likely that this if() statement can be replaced by asingle call to portYIELD_FROM_ISR() [or portEND_SWITCHING_ISR()] usingxYieldRequired as the macro parameter:portYIELD_FROM_ISR( xYieldRequired );*/portYIELD_FROM_ISR();}}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#248-vtasksetapplicationtasktag","title":"2.48 vTaskSetApplicationTaskTag()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dvoid vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxTagValue );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_204","title":"\u6982\u8981","text":"<p>\u672c\u529f\u80fd\u4ec5\u4f9b\u9ad8\u7ea7\u7528\u6237\u4f7f\u7528\u3002</p> <p>API\u51fd\u6570vTaskSetApplicationTaskTag()\u53ef\u7528\u4e8e\u4e3a\u4efb\u52a1\u5206\u914d\u4e00\u4e2a' tag '\u503c\u3002\u6807\u8bb0\u503c\u7684\u542b\u4e49\u548c\u4f7f\u7528\u7531\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u4eba\u5458\u5b9a\u4e49\u3002\u5185\u6838\u672c\u8eab\u901a\u5e38\u4e0d\u4f1a\u8bbf\u95ee\u6807\u8bb0\u503c\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_205","title":"\u53c2\u6570","text":"<p>xTask</p> <ul> <li>\u8981\u4e3a\u5176\u5206\u914d\u6807\u8bb0\u503c\u7684\u4efb\u52a1\u7684\u53e5\u67c4\u3002\u8fd9\u662f\u4e3b\u9898\u4efb\u52a1\u3002</li> <li>\u4efb\u52a1\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u81ea\u5df1\u7684\u4efb\u52a1\u53e5\u67c4\u6216\u4f7f\u7528NULL\u4ee3\u66ff\u6709\u6548\u7684\u4efb\u52a1\u53e5\u67c4\u6765\u4e3a\u81ea\u5df1\u5206\u914d\u6807\u8bb0\u503c\u3002</li> </ul> <p>pxTagValue</p> <ul> <li>\u6307\u5b9a\u4e3a\u4e3b\u9898\u4efb\u52a1\u6807\u8bb0\u503c\u7684\u503c\u3002\u5b83\u7684\u7c7b\u578b\u662fTaskHookFunction_t\uff0c\u5141\u8bb8\u5c06\u51fd\u6570\u6307\u9488\u8d4b\u7ed9\u6807\u8bb0\uff0c\u5c3d\u7ba1\u901a\u8fc7\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u6807\u8bb0\u503c\u53ef\u4ee5\u662f\u4efb\u4f55\u7c7b\u578b\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_206","title":"\u8fd4\u56de\u503c","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_207","title":"\u63d0\u793a","text":"<p>\u6807\u8bb0\u503c\u53ef\u4ee5\u7528\u6765\u4fdd\u5b58\u51fd\u6570\u6307\u9488\u3002\u5b8c\u6210\u4e4b\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528xTaskCallApplicationTaskHook() API\u51fd\u6570\u8c03\u7528\u5206\u914d\u7ed9\u6807\u7b7e\u503c\u7684\u51fd\u6570\u3002\u8fd9\u79cd\u6280\u672f\u5b9e\u9645\u4e0a\u662f\u7ed9\u4efb\u52a1\u5206\u914d\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u3002\u8fd9\u6837\u7684\u56de\u8c03\u901a\u5e38\u4e0etraceTASK_SWITCHED_IN()\u5b8f\u4e00\u8d77\u4f7f\u7528\uff0c\u4ee5\u5b9e\u73b0\u6267\u884c\u8ddf\u8e2a\u7279\u6027\u3002</p> <p>configUSE_APPLICATION_TASK_TAG\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u4fbfvTaskSetApplicationTaskTag()\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_208","title":"\u793a\u4f8b","text":"<pre><code>/* In this example, an integer is set as the task tag value. */void vATask( void *pvParameters ){/* Assign a tag value of 1 to the currently executing task. The (void *) castis used to prevent compiler warnings. */vTaskSetApplicationTaskTag( NULL, ( void * ) 1 );for( ;; ){/* Rest of task code goes here. */}}/* In this example a callback function is assigned as the task tag. First define thecallback function - this must have type TaskHookFunction_t, as per this example. */static BaseType_t prvExampleTaskHook( void * pvParameter ){/* Perform some action - this could be anything from logging a value, updatingthe task state, outputting a value, etc. */return 0;}/* Now define the task that sets prvExampleTaskHook() as its hook/tag value. This isin effect registering the task callback function. */void vAnotherTask( void *pvParameters ){/* Register a callback function for the currently running (calling) task. */vTaskSetApplicationTaskTag( NULL, prvExampleTaskHook );for( ;; ){/* Rest of task code goes here. */}}/* [As an example use of the hook (callback)] Define the traceTASK_SWITCHED_OUT()macro to call the hook function. The kernel will then automatically call the taskhook each time the task is switched out. This technique can be used to generatean execution trace. pxCurrentTCB references the currently executing task. */#define traceTASK_SWITCHED_OUT() xTaskCallApplicationTaskHook( pxCurrentTCB, 0 )\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#249-vtasksetthreadlocalstoragepointer","title":"2.49  vTaskSetThreadLocalStoragePointer()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dvoid vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet,BaseType_t xIndex,void *pvValue );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_209","title":"\u6982\u8981","text":"<p>\u7ebf\u7a0b\u672c\u5730\u5b58\u50a8(\u6216TLS)\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u5c06\u503c\u5b58\u50a8\u5728\u4efb\u52a1\u7684\u63a7\u5236\u5757\u4e2d\uff0c\u4f7f\u503c\u7279\u5b9a\u4e8e\u4efb\u52a1\u672c\u8eab(\u5c40\u90e8\u4e8e\u4efb\u52a1)\uff0c\u5e76\u5141\u8bb8\u6bcf\u4e2a\u4efb\u52a1\u62e5\u6709\u81ea\u5df1\u7684\u552f\u4e00\u503c\u3002</p> <p>\u6bcf\u4e2a\u4efb\u52a1\u90fd\u6709\u81ea\u5df1\u7684\u6307\u9488\u6570\u7ec4\uff0c\u53ef\u4ee5\u7528\u4f5c\u7ebf\u7a0b\u672c\u5730\u5b58\u50a8\u3002\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15\u6570\u7531FreeRTOSConfig.h\u4e2d\u7684configignum_thread_local_storage_pointer\u7f16\u8bd1\u65f6\u914d\u7f6e\u5e38\u91cf\u8bbe\u7f6e\u3002</p> <p>vTaskSetThreadLocalStoragePointer()\u8bbe\u7f6e\u6570\u7ec4\u4e2d\u7d22\u5f15\u7684\u503c\uff0c\u6709\u6548\u5730\u5b58\u50a8\u7ebf\u7a0b\u672c\u5730\u503c\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_210","title":"\u53c2\u6570","text":"<p>xTaskToSet</p> <ul> <li>\u6b63\u5728\u5411\u5176\u5199\u5165\u7ebf\u7a0b\u672c\u5730\u6570\u636e\u7684\u4efb\u52a1\u7684\u53e5\u67c4\u3002</li> <li>\u4e00\u4e2a\u4efb\u52a1\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528NULL\u4f5c\u4e3a\u53c2\u6570\u503c\u5199\u5165\u5b83\u81ea\u5df1\u7684\u7ebf\u7a0b\u672c\u5730\u6570\u636e\u3002</li> </ul> <p>xIndex</p> <ul> <li>\u8981\u5199\u5165\u6570\u636e\u7684\u7ebf\u7a0b\u672c\u5730\u5b58\u50a8\u9635\u5217\u7684\u7d22\u5f15\u3002</li> </ul> <p>pvValue</p> <ul> <li>\u8981\u5199\u5165\u5230xIndex\u6307\u5b9a\u7684\u7d22\u5f15\u4e2d\u7684\u503c\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_211","title":"\u8fd4\u56de\u503c","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_212","title":"\u793a\u4f8b","text":"<pre><code>uint32_t ulVariable;/* Write the 32-bit 0x12345678 value directly into index 1 of the thread localstorage array. Passing NULL as the task handle has the effect of writing to thecalling task's thread local storage array. */vTaskSetThreadLocalStoragePointer( NULL, /* Task handle. */1, /* Index into the array. */( void * ) 0x12345678 );/* Store the value of the 32-bit variable ulVariable to index 0 of the callingtask's thread local storage array. */ulVariable = ERROR_CODE;vTaskSetThreadLocalStoragePointer( NULL, /* Task handle. */0, /* Index into the array. */( void * ) &amp;ulVariable );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#250-vtasksettimeoutstate","title":"2.50 vTaskSetTimeOutState()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dvoid vTaskSetTimeOutState( TimeOut_t * const pxTimeOut );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_213","title":"\u6982\u8981","text":"<p>\u672c\u529f\u80fd\u4ec5\u4f9b\u9ad8\u7ea7\u7528\u6237\u4f7f\u7528\u3002</p> <p>\u4efb\u52a1\u53ef\u4ee5\u8fdb\u5165\u201cBlocked\u201d\u72b6\u6001\uff0c\u7b49\u5f85\u4e8b\u4ef6\u53d1\u751f\u3002\u901a\u5e38\uff0c\u4efb\u52a1\u4e0d\u4f1a\u5728Blocked\u72b6\u6001\u4e0b\u65e0\u9650\u671f\u7b49\u5f85\uff0c\u800c\u662f\u6307\u5b9a\u4e00\u4e2a\u8d85\u65f6\u65f6\u95f4\u3002\u5982\u679c\u5728\u4efb\u52a1\u7b49\u5f85\u7684\u4e8b\u4ef6\u53d1\u751f\u4e4b\u524d\u8d85\u65f6\uff0c\u5219\u4efb\u52a1\u5c06\u4ece\u963b\u585e\u72b6\u6001\u4e2d\u79fb\u9664\u3002</p> <p>\u5982\u679c\u4e00\u4e2a\u4efb\u52a1\u8fdb\u5165\u548c\u9000\u51fa\u963b\u585e\u72b6\u6001\u65f6\u4e0d\u6b62\u4e00\u6b21\u7b49\u5f85\u4e8b\u4ef6\u53d1\u751f,\u90a3\u4e48\u6bcf\u4e00\u6b21\u4f7f\u7528\u7684\u8d85\u65f6\u4efb\u52a1\u8fdb\u5165\u963b\u585e\u72b6\u6001\u5fc5\u987b\u8fdb\u884c\u8c03\u6574,\u4ee5\u786e\u4fdd\u6240\u6709\u963b\u585e\u72b6\u6001\u7684\u65f6\u95f4\u4e0d\u8d85\u8fc7\u539f\u6307\u5b9a\u7684\u8d85\u65f6\u65f6\u95f4\u3002xTaskCheckForTimeOut()\u6267\u884c\u8c03\u6574\uff0c\u8003\u8651\u5230\u5076\u5c14\u53d1\u751f\u7684\u60c5\u51b5\uff0c\u5982tick\u8ba1\u6570\u6ea2\u51fa\uff0c\u5426\u5219\u624b\u52a8\u8c03\u6574\u5bb9\u6613\u51fa\u9519\u3002</p> <p>vTaskSetTimeOutState()\u4e0exTaskCheckForTimeOut()\u4e00\u8d77\u4f7f\u7528\u3002\u8c03\u7528vTaskSetTimeOutState()\u6765\u8bbe\u7f6e\u521d\u59cb\u6761\u4ef6\uff0c\u4e4b\u540e\u53ef\u4ee5\u8c03\u7528xTaskCheckForTimeOut()\u6765\u68c0\u67e5\u8d85\u65f6\u6761\u4ef6\uff0c\u5982\u679c\u6ca1\u6709\u8d85\u65f6\u5219\u8c03\u6574\u5269\u4f59\u7684\u5757\u65f6\u95f4\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_214","title":"\u53c2\u6570","text":"<p>pxTimeOut </p> <ul> <li>\u4e00\u4e2a\u6307\u5411\u7ed3\u6784\u4f53\u7684\u6307\u9488\uff0c\u8be5\u7ed3\u6784\u4f53\u5c06\u88ab\u521d\u59cb\u5316\u4ee5\u4fdd\u5b58\u786e\u5b9a\u662f\u5426\u53d1\u751f\u8d85\u65f6\u6240\u5fc5\u9700\u7684\u4fe1\u606f\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_215","title":"\u793a\u4f8b","text":"<pre><code>/* Driver library function used to receive uxWantedBytes from an Rx buffer that is filled by a UART interrupt. If there are not enough bytes in the Rx buffer then the task enters the Blocked state until it is notified that more data has been placed into the buffer. If there is still not enough data then the task re-enters the Blocked state, and xTaskCheckForTimeOut() is used to re-calculate the Block time to ensure the total amount of time spent in the Blocked state does not exceed MAX_TIME_TO_WAIT. This continues until either the buffer contains at least uxWantedBytes bytes, or the total amount of time spent in the Blocked state reaches MAX_TIME_TO_WAIT \u2013 at which point the task reads however many bytes are available up to a maximum of uxWantedBytes. */size_t xUART_Receive( uint8_t *pucBuffer, size_t uxWantedBytes ){size_t uxReceived = 0;TickType_t xTicksToWait = MAX_TIME_TO_WAIT;TimeOut_t xTimeOut;/* Initialize xTimeOut. This records the time at which this function was entered. */vTaskSetTimeOutState( &amp;xTimeOut );/* Loop until the buffer contains the wanted number of bytes, or a timeout occurs. */while( UART_bytes_in_rx_buffer( pxUARTInstance ) &lt; uxWantedBytes ){/* The buffer didn\u2019t contain enough data so this task is going to enter the Blockedstate. Adjusting xTicksToWait to account for any time that has been spent in theBlocked state within this function so far to ensure the total amount of time spentin the Blocked state does not exceed MAX_TIME_TO_WAIT. */if( xTaskCheckForTimeOut( &amp;xTimeOut, &amp;xTicksToWait ) != pdFALSE ){/* Timed out before the wanted number of bytes were available, exit the loop. */break;}/* Wait for a maximum of xTicksToWait ticks to be notified that the receiveinterrupt has placed more data into the buffer. */ulTaskNotifyTake( pdTRUE, xTicksToWait );}/* Attempt to read uxWantedBytes from the receive buffer into pucBuffer. The actualnumber of bytes read (which might be less than uxWantedBytes) is returned. */uxReceived = UART_read_from_receive_buffer( pxUARTInstance, pucBuffer, uxWantedBytes );return uxReceived;}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#251-vtaskstartscheduler","title":"2.51 vTaskStartScheduler()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dvoid vTaskStartScheduler( void );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_216","title":"\u6982\u8981","text":"<p>\u542f\u52a8FreeRTOS\u8c03\u5ea6\u5668\u8fd0\u884c\u3002</p> <p>\u901a\u5e38\uff0c\u5728\u8c03\u5ea6\u7a0b\u5e8f\u542f\u52a8\u4e4b\u524d\uff0cmain()(\u6216main()\u8c03\u7528\u7684\u51fd\u6570)\u5c06\u88ab\u6267\u884c\u3002\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u540e\uff0c\u53ea\u6709\u4efb\u52a1\u548c\u4e2d\u65ad\u624d\u4f1a\u6267\u884c\u3002</p> <p>\u542f\u52a8\u8c03\u5ea6\u5668\u4f1a\u5bfc\u81f4\u5728\u8c03\u5ea6\u5668\u5904\u4e8e\u521d\u59cb\u5316\u72b6\u6001\u65f6\u521b\u5efa\u7684\u6700\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u8fdb\u5165\u8fd0\u884c\u72b6\u6001\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_217","title":"\u53c2\u6570","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_218","title":"\u8fd4\u56de\u503c","text":"<p>Idle\u4efb\u52a1\u5728\u8c03\u5ea6\u7a0b\u5e8f\u542f\u52a8\u65f6\u81ea\u52a8\u521b\u5efa\u3002vTaskStartScheduler()\u53ea\u4f1a\u5728\u6ca1\u6709\u8db3\u591f\u7684FreeRTOS\u5806\u5185\u5b58\u53ef\u7528\u6765\u521b\u5efa\u7a7a\u95f2\u4efb\u52a1\u65f6\u8fd4\u56de\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_219","title":"\u63d0\u793a","text":"<p>\u5728ARM7\u548cARM9\u5fae\u63a7\u5236\u5668\u4e0a\u6267\u884c\u7684\u7aef\u53e3\u8981\u6c42\u5904\u7406\u5668\u5728vTaskStartScheduler()\u88ab\u8c03\u7528\u4e4b\u524d\u5904\u4e8eSupervisor\u6a21\u5f0f\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_220","title":"\u793a\u4f8b","text":"<pre><code>TaskHandle_t xHandle;/* Define a task function. */void vATask( void ){for( ;; ){/* Task code goes here. */}}void main( void ){/* Create at least one task, in this case the task function defined above iscreated. Calling vTaskStartScheduler() before any tasks have been createdwill cause the idle task to enter the Running state. */xTaskCreate( vTaskCode, \"task name\", STACK_SIZE, NULL, TASK_PRIORITY, NULL );/* Start the scheduler. */vTaskStartScheduler();/* This code will only be reached if the idle task could not be created insidevTaskStartScheduler(). An infinite loop is used to assist debugging byensuring this scenario does not result in main() exiting. */for( ;; );}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#252-vtasksteptick","title":"2.52 vTaskStepTick()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dvoid vTaskStepTick( TickType_t xTicksToJump );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_221","title":"\u6982\u8981","text":"<p>\u5982\u679cRTOS\u88ab\u914d\u7f6e\u4e3a\u4f7f\u7528\u65e0tick\u7a7a\u95f2\u529f\u80fd\uff0c\u90a3\u4e48tick\u4e2d\u65ad\u5c06\u88ab\u505c\u6b62\uff0c\u5f53idle\u4efb\u52a1\u662f\u552f\u4e00\u80fd\u591f\u6267\u884c\u7684\u4efb\u52a1\u65f6\uff0c\u5fae\u63a7\u5236\u5668\u5c06\u5904\u4e8e\u4f4e\u529f\u8017\u72b6\u6001\u3002\u5728\u9000\u51fa\u4f4e\u529f\u7387\u72b6\u6001\u65f6\uff0c\u5fc5\u987b\u4fee\u6b63\u6ef4\u7b54\u8ba1\u6570\u503c\uff0c\u4ee5\u53cd\u6620\u505c\u6b62\u65f6\u6240\u7ecf\u8fc7\u7684\u65f6\u95f4\u3002</p> <p>\u5982\u679cFreeRTOS\u7aef\u53e3\u5305\u542b\u9ed8\u8ba4\u7684portSUPPRESS_TICKS_AND_SLEEP()\u5b9e\u73b0\uff0c\u5219\u5728\u5185\u90e8\u4f7f\u7528vTaskStepTick()\u4ee5\u786e\u4fdd\u7ef4\u62a4\u6b63\u786e\u7684tick\u8ba1\u6570\u503c\u3002vTaskStepTick()\u662f\u4e00\u4e2a\u516c\u5171API\u51fd\u6570\uff0c\u5141\u8bb8\u91cd\u5199\u9ed8\u8ba4\u7684portSUPPRESS_TICKS_AND_SLEEP()\u5b9e\u73b0\uff0c\u5982\u679c\u4f7f\u7528\u7684\u7aef\u53e3\u6ca1\u6709\u63d0\u4f9b\u9ed8\u8ba4\u503c\uff0c\u5219\u63d0\u4f9b\u4e00\u4e2aportSUPPRESS_TICKS_AND_SLEEP()\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_222","title":"\u53c2\u6570","text":"<p>xTicksToJump</p> <ul> <li>\u5728\u65f6\u949f\u4e2d\u65ad\u505c\u6b62\u548c\u91cd\u65b0\u542f\u52a8\u4e4b\u95f4\u7ecf\u8fc7\u7684RTOS\u65f6\u949f\u5468\u671f\u7684\u6570\u91cf(\u65f6\u949f\u4e2d\u65ad\u88ab\u6291\u5236\u7684\u65f6\u95f4)\u3002\u4e3a\u4e86\u6b63\u786e\u64cd\u4f5c\uff0c\u53c2\u6570\u5fc5\u987b\u5c0f\u4e8e\u6216\u7b49\u4e8eportSUPPRESS_TICKS_AND_SLEEP()\u53c2\u6570\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_223","title":"\u8fd4\u56de\u503c","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_224","title":"\u63d0\u793a","text":"<p>configUSE_TICKLESS_IDLE\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u4fbfvTaskStepTick()\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_225","title":"\u793a\u4f8b","text":"<pre><code>/* This is an example of how portSUPPRESS_TICKS_AND_SLEEP() might be implemented by an application writer. This basic implementation will introduce inaccuracies in the tracking of the time maintained by the kernel in relation to calendar time. Official FreeRTOS implementations account for these inaccuracies as much as possible.Only vTaskStepTick() is part of the FreeRTOS API. The other function calls are for demonstration only. *//* First define the portSUPPRESS_TICKS_AND_SLEEP() macro. The parameter is the time, in ticks, until the kernel next needs to execute. */#define portSUPPRESS_TICKS_AND_SLEEP( xIdleTime ) vApplicationSleep( xIdleTime )/* Define the function that is called by portSUPPRESS_TICKS_AND_SLEEP(). */void vApplicationSleep( TickType_t xExpectedIdleTime ){unsigned long ulLowPowerTimeBeforeSleep, ulLowPowerTimeAfterSleep;/* Read the current time from a time source that will remain operational whenthe microcontroller is in a low power state. */ulLowPowerTimeBeforeSleep = ulGetExternalTime();/* Stop the timer that is generating the tick interrupt. */prvStopTickInterruptTimer();/* Configure an interrupt to bring the microcontroller out of its low power stateat the time the kernel next needs to execute. The interrupt must be generatedfrom a source that remains operational when the microcontroller is in a lowpower state. */vSetWakeTimeInterrupt( xExpectedIdleTime );/* Enter the low power state. */prvSleep();/* Determine how long the microcontroller was actually in a low power state for,which will be less than xExpectedIdleTime if the microcontroller was brought outof low power mode by an interrupt other than that configured by thevSetWakeTimeInterrupt() call. Note that the scheduler is suspended beforeportSUPPRESS_TICKS_AND_SLEEP() is called, and resumed whenportSUPPRESS_TICKS_AND_SLEEP() returns. Therefore no other tasks will executeuntil this function completes. */ulLowPowerTimeAfterSleep = ulGetExternalTime();/* Correct the kernels tick count to account for the time the microcontrollerspent in its low power state. */vTaskStepTick( ulLowPowerTimeAfterSleep \u2013 ulLowPowerTimeBeforeSleep );/* Restart the timer that is generating the tick interrupt. */prvStartTickInterruptTimer();}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#253-vtasksuspend","title":"2.53 vTaskSuspend()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dvoid vTaskSuspend( TaskHandle_t pxTaskToSuspend );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_226","title":"\u6982\u8981","text":"<p>\u5c06\u4efb\u52a1\u7f6e\u4e8e\u6302\u8d77\u72b6\u6001\u3002\u5904\u4e8e\u6302\u8d77\u72b6\u6001\u7684\u4efb\u52a1\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u9009\u62e9\u8fdb\u5165\u8fd0\u884c\u72b6\u6001\u3002</p> <p>\u4eceSuspended\u72b6\u6001\u5220\u9664\u4efb\u52a1\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u4f7f\u5176\u6210\u4e3avTaskResume()\u8c03\u7528\u7684\u4e3b\u9898\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_227","title":"\u53c2\u6570","text":"<p>pxTaskToSuspend</p> <ul> <li>\u88ab\u6302\u8d77\u7684\u4efb\u52a1\u7684\u53e5\u67c4\u3002</li> <li>\u8981\u83b7\u5f97\u4efb\u52a1\u7684\u53e5\u67c4\uff0c\u4f7f\u7528xTaskCreate()\u521b\u5efa\u4efb\u52a1\u5e76\u4f7f\u7528pxCreatedTask\u53c2\u6570\uff0c\u6216\u8005\u4f7f\u7528xTaskCreateStatic()\u521b\u5efa\u4efb\u52a1\u5e76\u5b58\u50a8\u8fd4\u56de\u503c\uff0c\u6216\u8005\u5728\u8c03\u7528xTaskGetHandle()\u65f6\u4f7f\u7528\u4efb\u52a1\u7684\u540d\u79f0\u3002</li> <li>\u4efb\u52a1\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012NULL\u6765\u4ee3\u66ff\u6709\u6548\u7684\u4efb\u52a1\u53e5\u67c4\u6765\u6302\u8d77\u81ea\u5df1\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_228","title":"\u8fd4\u56de\u503c","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_229","title":"\u63d0\u793a","text":"<p>\u5982\u679c\u4f7f\u7528\u7684\u662fFreeRTOS\u7248\u672c6.1.0\u6216\u66f4\u9ad8\u7248\u672c\uff0c\u90a3\u4e48\u5728\u8c03\u5ea6\u7a0b\u5e8f\u542f\u52a8\u4e4b\u524d(\u5728\u8c03\u7528vTaskStartScheduler()\u4e4b\u524d)\uff0c\u53ef\u4ee5\u8c03\u7528vTaskSuspend()\u5c06\u4efb\u52a1\u7f6e\u4e8eSuspended\u72b6\u6001\u3002\u8fd9\u5c06\u5bfc\u81f4\u4efb\u52a1(\u6709\u6548\u5730)\u4ee5\u6302\u8d77\u72b6\u6001\u542f\u52a8\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_230","title":"\u793a\u4f8b","text":"<pre><code>void vAFunction( void ){TaskHandle_t xHandle;/* Create a task, storing the handle of the created task in xHandle. */if( xTaskCreate( vTaskCode,\"Demo task\",STACK_SIZE,NULL,PRIORITY,&amp;xHandle) != pdPASS ){/* The task was not created successfully. */}else{/* Use the handle of the created task to place the task in the Suspendedstate. From FreeRTOS version 6.1.0, this can be done before the Schedulerhas been started. */vTaskSuspend( xHandle );/* The created task will not run during this period, unless another taskcalls vTaskResume( xHandle ). *//* Use a NULL parameter to suspend the calling task. */vTaskSuspend( NULL );/* This task can only execute past the call to vTaskSuspend( NULL ) ifanother task has resumed (un-suspended) it using a call to vTaskResume(). */}}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#254-vtasksuspendall","title":"2.54 vTaskSuspendAll()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dvoid vTaskSuspendAll( void );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_231","title":"\u6982\u8981","text":"<p>\u6682\u505c\u8c03\u5ea6\u5668\u3002\u6682\u505c\u8c03\u5ea6\u7a0b\u5e8f\u53ef\u4ee5\u9632\u6b62\u53d1\u751f\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u4f46\u4fdd\u7559\u4e2d\u65ad\u3002\u5982\u679c\u4e00\u4e2a\u4e2d\u65ad\u8bf7\u6c42\u5728\u8c03\u5ea6\u5668\u6302\u8d77\u65f6\u8fdb\u884c\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u90a3\u4e48\u8be5\u8bf7\u6c42\u5c06\u88ab\u6302\u8d77\u5e76\u4ec5\u5728\u8c03\u5ea6\u5668\u6062\u590d(\u672a\u6302\u8d77)\u65f6\u6267\u884c\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_232","title":"\u53c2\u6570","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_233","title":"\u8fd4\u56de\u503c","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_234","title":"\u63d0\u793a","text":"<p>\u5728\u4e4b\u524d\u8c03\u7528vTaskSuspendAll()\u4e4b\u540e\uff0c\u5bf9xTaskResumeAll()\u7684\u8c03\u7528\u5c06\u8c03\u5ea6\u5668\u4eceSuspended\u72b6\u6001\u8f6c\u79fb\u51fa\u6765\u3002</p> <p>\u5bf9vTaskSuspendAll()\u7684\u8c03\u7528\u53ef\u4ee5\u5d4c\u5957\u3002\u5728\u8c03\u5ea6\u5668\u5c06\u79bb\u5f00Suspended\u72b6\u6001\u5e76\u91cd\u65b0\u8fdb\u5165Active\u72b6\u6001\u4e4b\u524d\uff0c\u5fc5\u987b\u5bf9xTaskResumeAll()\u8fdb\u884c\u4e0e\u4e4b\u524d\u5bf9vTaskSuspendAll()\u76f8\u540c\u6570\u91cf\u7684\u8c03\u7528\u3002</p> <p>xTaskResumeAll()\u53ea\u80fd\u4ece\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1\u4e2d\u8c03\u7528\uff0c\u56e0\u6b64\u4e0d\u80fd\u5728\u8c03\u5ea6\u5668\u5904\u4e8e\u521d\u59cb\u5316\u72b6\u6001(\u5728\u542f\u52a8\u8c03\u5ea6\u5668\u4e4b\u524d)\u65f6\u8c03\u7528\u3002</p> <p>\u5f53\u8c03\u5ea6\u5668\u6302\u8d77\u65f6\uff0c\u4e0d\u80fd\u8c03\u7528\u5176\u4ed6\u7684FreeRTOS API\u51fd\u6570\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_235","title":"\u793a\u4f8b","text":"<pre><code>/* A function that suspends then resumes the scheduler. */void vDemoFunction( void ){/* This function suspends the scheduler. When it is called from vTask1 thescheduler is already suspended, so this call creates a nesting depth of 2. */vTaskSuspendAll();/* Perform an action here. *//* As calls to vTaskSuspendAll() are nested, resuming the scheduler here willnot cause the scheduler to re-enter the active state. */xTaskResumeAll();}void vTask1( void * pvParameters ){for( ;; ){/* Perform some actions here. *//* At some point the task wants to perform an operation during which it doesnot want to get swapped out, or it wants to access data which is alsoaccessed from another task (but not from an interrupt). It cannot usetaskENTER_CRITICAL()/taskEXIT_CRITICAL() as the length of the operation maycause interrupts to be missed. *//* Prevent the scheduler from performing a context switch. */vTaskSuspendAll();/* Perform the operation here. There is no need to use critical sections asthe task has all the processing time other than that utilized by interruptservice routines.*//* Calls to vTaskSuspendAll() can be nested so it is safe to call a (non API)function which also contains calls to vTaskSuspendAll(). API functionsshould not be called while the scheduler is suspended. */vDemoFunction();/* The operation is complete. Set the scheduler back into the Activestate. */if( xTaskResumeAll() == pdTRUE ){/* A context switch occurred within xTaskResumeAll(). */}else{/* A context switch did not occur within xTaskResumeAll(). */}}}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#255-taskyield","title":"2.55  taskYIELD()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctask.h\u201dvoid taskYIELD( void );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_236","title":"\u6982\u8981","text":"<p>\u8ba9\u4f4d\u4e8e\u53e6\u4e00\u4e2a\u540c\u7b49\u91cd\u8981\u7684\u4efb\u52a1\u3002</p> <p>\u8ba9\u6b65\u662f\u6307\u4efb\u52a1\u81ea\u613f\u79bb\u5f00Running\u72b6\u6001\uff0c\u800c\u4e0d\u88ab\u62a2\u5360\uff0c\u5e76\u4e14\u5728\u5b83\u7684\u65f6\u95f4\u7247\u88ab\u5145\u5206\u5229\u7528\u4e4b\u524d\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_237","title":"\u53c2\u6570","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_238","title":"\u8fd4\u56de\u503c","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_239","title":"\u63d0\u793a","text":"<p>taskYIELD()\u53ea\u80fd\u4ece\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1\u4e2d\u8c03\u7528\uff0c\u56e0\u6b64\u4e0d\u80fd\u5728\u8c03\u5ea6\u5668\u5904\u4e8e\u521d\u59cb\u5316\u72b6\u6001(\u5728\u542f\u52a8\u8c03\u5ea6\u5668\u4e4b\u524d)\u65f6\u8c03\u7528\u3002</p> <p>\u5f53\u4e00\u4e2a\u4efb\u52a1\u8c03\u7528taskYIELD()\u65f6\uff0c\u8c03\u5ea6\u7a0b\u5e8f\u5c06\u9009\u62e9\u53e6\u4e00\u4e2a\u540c\u7b49\u4f18\u5148\u7ea7\u7684Ready\u72b6\u6001\u4efb\u52a1\uff0c\u4ee5\u8fdb\u5165Running\u72b6\u6001\u3002\u5982\u679c\u6ca1\u6709\u5176\u4ed6\u540c\u7b49\u4f18\u5148\u7ea7\u7684Ready\u72b6\u6001\u4efb\u52a1\uff0c\u90a3\u4e48\u8c03\u7528taskYIELD()\u7684\u4efb\u52a1\u672c\u8eab\u5c06\u76f4\u63a5\u8f6c\u6362\u56deRunning\u72b6\u6001\u3002</p> <p>\u8c03\u5ea6\u5668\u53ea\u4f1a\u9009\u62e9\u4e00\u4e2a\u4e0e\u8c03\u7528taskYIELD()\u7684\u4efb\u52a1\u540c\u7b49\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\uff0c\u56e0\u4e3a\u5982\u679c\u6709\u4efb\u4f55\u4f18\u5148\u7ea7\u66f4\u9ad8\u7684\u4efb\u52a1\u5904\u4e8eReady\u72b6\u6001\uff0c\u8c03\u7528taskYIELD()\u7684\u4efb\u52a1\u5c31\u4e0d\u4f1a\u9996\u5148\u6267\u884c\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_240","title":"\u793a\u4f8b","text":"<pre><code>void vATask( void * pvParameters){for( ;; ){/* Perform some actions. *//* If there are any tasks of equal priority to this task that are in theReady state then let them execute now - even though this task has not usedall of its time slice. */taskYIELD();/* If there were any tasks of equal priority to this task in the Ready state,then they will have executed before this task reaches here. */}}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#3","title":"\u7ae0\u82823 \u961f\u5217","text":""},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#31-vqueueaddtoregistry","title":"3.1 vQueueAddToRegistry()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cqueue.h\u201dvoid vQueueAddToRegistry( QueueHandle_t xQueue, char *pcQueueName );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_241","title":"\u6982\u8981","text":"<p>\u961f\u5217\u5206\u914d\u4e00\u4e2a\u53ef\u8bfb\u7684\u540d\u79f0\uff0c\u5e76\u5c06\u8be5\u961f\u5217\u6dfb\u52a0\u5230\u961f\u5217\u6ce8\u518c\u8868\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_242","title":"\u53c2\u6570","text":"<p>xQueue</p> <ul> <li>\u5c06\u88ab\u6dfb\u52a0\u5230\u6ce8\u518c\u8868\u4e2d\u7684\u961f\u5217\u53e5\u67c4\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4fe1\u53f7\u91cf\u53e5\u67c4\u3002</li> </ul> <p>pcQueueName</p> <ul> <li>\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u7684\u63cf\u8ff0\u6027\u540d\u79f0\u3002\u8fd9\u4e0d\u662fFreeRTOS\u4ee5\u4efb\u4f55\u65b9\u5f0f\u4f7f\u7528\u7684\u3002\u5b83\u7eaf\u7cb9\u662f\u4f5c\u4e3a\u8c03\u8bd5\u8f85\u52a9\u800c\u5305\u542b\u7684\u3002\u901a\u8fc7\u4eba\u7c7b\u53ef\u8bfb\u7684\u540d\u79f0\u6807\u8bc6\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u6bd4\u5c1d\u8bd5\u901a\u8fc7\u5176\u53e5\u67c4\u6807\u8bc6\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u7b80\u5355\u5f97\u591a\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_243","title":"\u8fd4\u56de\u503c","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_244","title":"\u63d0\u793a","text":"<p>\u961f\u5217\u6ce8\u518c\u8868\u88ab\u5185\u6838\u611f\u77e5\u8c03\u8bd5\u5668\u4f7f\u7528:</p> <ol> <li>\u5b83\u5141\u8bb8\u5c06\u6587\u672c\u540d\u79f0\u4e0e\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u5173\u8054\u8d77\u6765\uff0c\u4ee5\u4fbf\u5728\u8c03\u8bd5\u63a5\u53e3\u4e2d\u8f7b\u677e\u8bc6\u522b\u961f\u5217\u548c\u4fe1\u53f7\u91cf\u3002</li> <li>\u5b83\u4e3a\u8c03\u8bd5\u5668\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b9\u6cd5\u6765\u5b9a\u4f4d\u961f\u5217\u548c\u4fe1\u53f7\u91cf\u7ed3\u6784\u3002</li> </ol> <p>configQUEUE_REGISTRY_SIZE\u5185\u6838\u914d\u7f6e\u5e38\u91cf\u5b9a\u4e49\u4e86\u4e00\u6b21\u53ef\u4ee5\u6ce8\u518c\u7684\u961f\u5217\u548c\u4fe1\u53f7\u91cf\u7684\u6700\u5927\u6570\u91cf\u3002\u53ea\u6709\u9700\u8981\u5728\u5185\u6838\u611f\u77e5\u8c03\u8bd5\u63a5\u53e3\u4e2d\u67e5\u770b\u7684\u961f\u5217\u548c\u4fe1\u53f7\u91cf\u624d\u9700\u8981\u6ce8\u518c\u3002</p> <p>\u53ea\u6709\u5728\u4f7f\u7528\u5185\u6838\u611f\u77e5\u8c03\u8bd5\u5668\u65f6\u624d\u9700\u8981\u961f\u5217\u6ce8\u518c\u8868\u3002\u5728\u5176\u4ed6\u4efb\u4f55\u65f6\u5019\uff0c\u5b83\u90fd\u6ca1\u6709\u4f5c\u7528\uff0c\u53ef\u4ee5\u901a\u8fc7\u5c06configQUEUE_REGISTRY_SIZE\u8bbe\u7f6e\u4e3a0\u6765\u7701\u7565\u5b83\uff0c\u6216\u8005\u5b8c\u5168\u7701\u7565configQUEUE_REGISTRY_SIZE\u914d\u7f6e\u5e38\u91cf\u5b9a\u4e49\u3002</p> <p>\u5220\u9664\u5df2\u6ce8\u518c\u961f\u5217\u5c06\u81ea\u52a8\u5c06\u5176\u4ece\u6ce8\u518c\u8868\u4e2d\u5220\u9664\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_245","title":"\u793a\u4f8b","text":"<pre><code>void vAFunction( void ){QueueHandle_t xQueue;/* Create a queue big enough to hold 10 chars. */xQueue = xQueueCreate( 10, sizeof( char ) );/* The created queue needs to be viewable in a kernel aware debugger, soadd it to the registry. */vQueueAddToRegistry( xQueue, \"AMeaningfulName\" );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#32-xqueueaddtoset","title":"3.2 xQueueAddToSet()","text":"<pre><code>include \u201cFreeRTOS.h\u201d#include \u201cqueue.h\u201dBaseType_t xQueueAddToSet( QueueSetMemberHandle_t xQueueOrSemaphore,QueueSetHandle_t xQueueSet );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_246","title":"\u6982\u8981","text":"<p>\u5c06\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u6dfb\u52a0\u5230\u4ee5\u524d\u7531\u8c03\u7528xQueueCreateSet()\u521b\u5efa\u7684\u961f\u5217\u96c6\u3002</p> <p>\u63a5\u6536(\u5728\u961f\u5217\u4e2d)\u6216\u63a5\u53d7(\u5728\u4fe1\u53f7\u91cf\u4e2d)\u64cd\u4f5c\u4e0d\u80fd\u5728\u961f\u5217\u96c6\u5408\u7684\u6210\u5458\u4e0a\u6267\u884c\uff0c\u9664\u975e\u5bf9xQueueSelectFromSet()\u7684\u8c03\u7528\u9996\u5148\u8fd4\u56de\u4e86\u8be5\u96c6\u5408\u6210\u5458\u7684\u53e5\u67c4\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_247","title":"\u53c2\u6570","text":"<p>xQueueOrSemaphore</p> <ul> <li>\u6dfb\u52a0\u5230\u961f\u5217\u96c6\u7684\u961f\u5217\u53e5\u67c4\u6216\u4fe1\u53f7\u91cf(\u8f6c\u6362\u4e3aQueueSetMemberHandle_t\u7c7b\u578b)\u3002</li> </ul> <p>xQueueSet</p> <ul> <li>\u8981\u5411\u5176\u6dfb\u52a0\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u7684\u961f\u5217\u8bbe\u7f6e\u7684\u53e5\u67c4\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_248","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS</p> <ul> <li>\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u6210\u529f\u6dfb\u52a0\u5230\u961f\u5217\u96c6\u3002</li> </ul> <p>pdFAIL</p> <ul> <li>\u65e0\u6cd5\u5c06\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u6dfb\u52a0\u5230\u961f\u5217\u96c6\u4e2d\uff0c\u56e0\u4e3a\u5b83\u5df2\u7ecf\u662f\u4e0d\u540c\u96c6\u5408\u7684\u6210\u5458\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_249","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86\u4f7fxQueueAddToSet() API\u51fd\u6570\u53ef\u7528\uff0c\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u5c06configUSE_QUEUE_SETS\u8bbe\u7f6e\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_250","title":"\u793a\u4f8b","text":"<p>\u8bf7\u53c2\u9605\u672c\u624b\u518c\u4e2d\u4e3axQueueCreateSet()\u51fd\u6570\u63d0\u4f9b\u7684\u793a\u4f8b\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#33-xqueuecreate","title":"3.3 xQueueCreate()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cqueue.h\u201dQueueHandle_t xQueueCreate( UBaseType_t uxQueueLength,UBaseType_t uxItemSize );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_251","title":"\u6982\u8981","text":"<p>\u521b\u5efa\u4e00\u4e2a\u65b0\u961f\u5217\u5e76\u8fd4\u56de\u4e00\u4e2a\u53e5\u67c4\uff0c\u8be5\u53e5\u67c4\u53ef\u7528\u4e8e\u5f15\u7528\u8be5\u961f\u5217\u3002</p> <p>\u6bcf\u4e2a\u961f\u5217\u90fd\u9700\u8981RAM, RAM\u7528\u4e8e\u4fdd\u5b58\u961f\u5217\u72b6\u6001\uff0c\u5e76\u4fdd\u5b58\u961f\u5217\u4e2d\u5305\u542b\u7684\u9879(\u961f\u5217\u5b58\u50a8\u533a\u57df)\u3002\u5982\u679c\u4f7f\u7528xQueueCreate()\u521b\u5efa\u961f\u5217\uff0c\u5219\u4eceFreeRTOS\u5806\u4e2d\u81ea\u52a8\u5206\u914d\u6240\u9700\u7684RAM\u3002\u5982\u679c\u4f7f\u7528xQueueCreateStatic()\u521b\u5efa\u961f\u5217\uff0c\u5219\u7531\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u63d0\u4f9bRAM\uff0c\u8fd9\u5c06\u5bfc\u81f4\u66f4\u591a\u7684\u53c2\u6570\uff0c\u4f46\u5141\u8bb8\u5728\u7f16\u8bd1\u65f6\u9759\u6001\u5206\u914dRAM\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_252","title":"\u53c2\u6570","text":"<p>uxQueueLength</p> <ul> <li>\u6b63\u5728\u521b\u5efa\u7684\u961f\u5217\u5728\u4efb\u4f55\u65f6\u5019\u53ef\u4ee5\u5bb9\u7eb3\u7684\u6700\u5927\u9879\u6570\u3002</li> </ul> <p>uxItemSize</p> <ul> <li>\u53ef\u5b58\u50a8\u5728\u961f\u5217\u4e2d\u7684\u6bcf\u4e2a\u6570\u636e\u9879\u7684\u5927\u5c0f\uff0c\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_253","title":"\u8fd4\u56de\u503c","text":"<p>NULL</p> <ul> <li>\u65e0\u6cd5\u521b\u5efa\u961f\u5217\uff0c\u56e0\u4e3a\u6ca1\u6709\u8db3\u591f\u7684\u5806\u5185\u5b58\u4f9bFreeRTOS\u5206\u914d\u961f\u5217\u6570\u636e\u7ed3\u6784\u548c\u5b58\u50a8\u533a\u57df\u3002</li> </ul> <p>\u4efb\u4f55\u5176\u4ed6\u503c</p> <ul> <li>\u961f\u5217\u521b\u5efa\u6210\u529f\u3002\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u53e5\u67c4\uff0c\u53ef\u901a\u8fc7\u8be5\u53e5\u67c4\u5f15\u7528\u521b\u5efa\u7684\u961f\u5217\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_254","title":"\u63d0\u793a","text":"<p>\u961f\u5217\u7528\u4e8e\u5728\u4efb\u52a1\u4e4b\u95f4\u3001\u4efb\u52a1\u548c\u4e2d\u65ad\u4e4b\u95f4\u4f20\u9012\u6570\u636e\u3002</p> <p>\u53ef\u4ee5\u5728\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u4e4b\u524d\u6216\u4e4b\u540e\u521b\u5efa\u961f\u5217\u3002</p> <p>configSUPPORT_DYNAMIC_ALLOCATION\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u8bbe\u7f6e\u4e3a1\uff0c\u6216\u8005\u4e0d\u8bbe\u7f6e\u4e3a\u672a\u5b9a\u4e49\uff0c\u4ee5\u4f7f\u8be5\u51fd\u6570\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_255","title":"\u793a\u4f8b","text":"<pre><code>/* Define the data type that will be queued. */typedef struct A_Message{char ucMessageID;char ucData[ 20 ];} AMessage;/* Define the queue parameters. */#define QUEUE_LENGTH 5#define QUEUE_ITEM_SIZE sizeof( AMessage )int main( void ){QueueHandle_t xQueue;/* Create the queue, storing the returned handle in the xQueue variable. */xQueue = xQueueCreate( QUEUE_LENGTH, QUEUE_ITEM_SIZE );if( xQueue == NULL ){/* The queue could not be created. */}/* Rest of code goes here. */}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#34-xqueuecreateset","title":"3.4  xQueueCreateSet()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cqueue.h\u201dQueueSetHandle_t xQueueCreateSet( const UBaseType_t uxEventQueueLength );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_256","title":"\u6982\u8981","text":"<p>\u961f\u5217\u96c6\u63d0\u4f9b\u4e86\u4e00\u79cd\u673a\u5236\uff0c\u5141\u8bb8RTOS\u4efb\u52a1\u963b\u585e(pend)\u6765\u81ea\u591a\u4e2aRTOS\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u7684\u8bfb\u64cd\u4f5c\u3002\u8bf7\u6ce8\u610f\uff0c\u9664\u4e86\u4f7f\u7528\u961f\u5217\u96c6\uff0c\u8fd8\u6709\u66f4\u7b80\u5355\u7684\u66ff\u4ee3\u65b9\u6cd5\u3002\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u89c1FreeRTOS.org\u7f51\u7ad9\u4e0a\u7684\u201c\u5c4f\u853d\u591a\u5bf9\u8c61\u201d\u9875\u9762\u3002</p> <p>\u5728\u4f7f\u7528\u961f\u5217\u96c6\u4e4b\u524d\uff0c\u5fc5\u987b\u901a\u8fc7\u8c03\u7528xQueueCreateSet()\u663e\u5f0f\u521b\u5efa\u961f\u5217\u96c6\u3002\u4e00\u65e6\u521b\u5efa\uff0c\u6807\u51c6\u7684FreeRTOS\u961f\u5217\u548c\u4fe1\u53f7\u91cf\u5c31\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528xQueueAddToSet()\u6dfb\u52a0\u5230\u96c6\u5408\u4e2d\u3002\u7136\u540e\u4f7f\u7528xQueueSelectFromSet()\u6765\u786e\u5b9a\u96c6\u5408\u4e2d\u5305\u542b\u7684\u54ea\u4e2a\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u5904\u4e8e\u8bfb\u53d6\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u64cd\u4f5c\u5c06\u6210\u529f\u7684\u72b6\u6001(\u5982\u679c\u6709\u7684\u8bdd)\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_257","title":"\u53c2\u6570","text":"<p>uxEventQueueLength</p> <ul> <li>\u961f\u5217\u96c6\u5b58\u50a8\u53d1\u751f\u5728\u961f\u5217\u548c\u96c6\u5408\u4e2d\u5305\u542b\u7684\u4fe1\u53f7\u91cf\u4e0a\u7684\u4e8b\u4ef6\u3002uxEventQueueLength\u6307\u5b9a\u4e00\u6b21\u53ef\u4ee5\u6392\u961f\u7684\u6700\u5927\u4e8b\u4ef6\u6570\u3002</li> </ul> <p>\u4e3a\u4e86\u7edd\u5bf9\u786e\u4fdd\u4e8b\u4ef6\u4e0d\u4f1a\u4e22\u5931\uff0c\u5fc5\u987b\u5c06uxEventQueueLength\u8bbe\u7f6e\u4e3a\u6dfb\u52a0\u5230\u96c6\u5408\u4e2d\u7684\u961f\u5217\u957f\u5ea6\u7684\u603b\u548c\uff0c\u5176\u4e2d\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u548c\u4e92\u65a5\u91cf\u7684\u957f\u5ea6\u4e3a1\uff0c\u8ba1\u6570\u4fe1\u53f7\u91cf\u7684\u957f\u5ea6\u7531\u5176\u6700\u5927\u8ba1\u6570\u503c\u8bbe\u7f6e\u3002\u4f8b\u5982:</p> <ul> <li>\u5982\u679c\u4e00\u4e2a\u961f\u5217\u96c6\u5bb9\u7eb3\u4e00\u4e2a\u957f\u5ea6\u4e3a5\u7684\u961f\u5217\uff0c\u53e6\u4e00\u4e2a\u957f\u5ea6\u4e3a12\u7684\u961f\u5217\uff0c\u4ee5\u53ca\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\uff0c\u90a3\u4e48uxEventQueueLength\u5e94\u8be5\u8bbe\u7f6e\u4e3a(5 + 12 + 1)\u621618\u3002</li> <li>\u5982\u679c\u4e00\u4e2a\u961f\u5217\u8bbe\u7f6e\u4e3a\u5bb9\u7eb3\u4e09\u4e2a\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\uff0c\u90a3\u4e48uxeventqueuellength\u5e94\u8be5\u8bbe\u7f6e\u4e3a(1 + 1 + 1)\u62163\u3002</li> <li>\u5982\u679c\u4e00\u4e2a\u961f\u5217\u96c6\u8981\u4fdd\u5b58\u4e00\u4e2a\u6700\u5927\u8ba1\u6570\u91cf\u4e3a5\u7684\u8ba1\u6570\u4fe1\u53f7\u91cf\u548c\u4e00\u4e2a\u6700\u5927\u8ba1\u6570\u91cf\u4e3a3\u7684\u8ba1\u6570\u4fe1\u53f7\u91cf\uff0c\u90a3\u4e48uxEventQueueLength\u5e94\u8be5\u8bbe\u7f6e\u4e3a(5 + 3)\u62168\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_258","title":"\u8fd4\u56de\u503c","text":"<p>NULL</p> <ul> <li>\u65e0\u6cd5\u521b\u5efa\u961f\u5217\u96c6\u3002</li> </ul> <p>\u5176\u4ed6\u4efb\u4f55\u503c</p> <ul> <li>\u6210\u529f\u521b\u5efa\u961f\u5217\u96c6\u3002\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u53e5\u67c4\uff0c\u53ef\u901a\u8fc7\u8be5\u53e5\u67c4\u5f15\u7528\u521b\u5efa\u7684\u961f\u5217\u96c6\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_259","title":"\u63d0\u793a","text":"<p>\u5728\u5305\u542b\u4e92\u65a5\u9501\u7684\u961f\u5217\u96c6\u4e2d\u963b\u585e\u4e0d\u4f1a\u5bfc\u81f4\u4e92\u65a5\u9501\u6301\u6709\u8005\u7ee7\u627f\u963b\u585e\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002</p> <p>\u6dfb\u52a0\u5230\u961f\u5217\u96c6\u7684\u6bcf\u4e2a\u961f\u5217\u4e2d\u7684\u6bcf\u4e2a\u7a7a\u95f4\u90fd\u9700\u8981\u989d\u5916\u76844\u5b57\u8282RAM\u3002\u56e0\u6b64\uff0c\u5177\u6709\u8f83\u9ad8\u7684\u6700\u5927\u8ba1\u6570\u503c\u7684\u8ba1\u6570\u4fe1\u53f7\u91cf\u4e0d\u5e94\u8be5\u88ab\u6dfb\u52a0\u5230\u961f\u5217\u96c6\u4e2d\u3002</p> <p>\u63a5\u6536(\u5728\u961f\u5217\u4e2d)\u6216\u63a5\u53d7(\u5728\u4fe1\u53f7\u91cf\u4e2d)\u64cd\u4f5c\u4e0d\u80fd\u5728\u961f\u5217\u96c6\u5408\u7684\u6210\u5458\u4e0a\u6267\u884c\uff0c\u9664\u975e\u5bf9xQueueSelectFromSet()\u7684\u8c03\u7528\u9996\u5148\u8fd4\u56de\u4e86\u8be5\u96c6\u5408\u6210\u5458\u7684\u53e5\u67c4\u3002</p> <p>\u4e3a\u4e86\u4f7fxQueueCreateSet() API\u51fd\u6570\u53ef\u7528\uff0c\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u5c06configUSE_QUEUE_SETS\u8bbe\u7f6e\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_260","title":"\u793a\u4f8b","text":"<pre><code>/* Define the lengths of the queues that will be added to the queue set. */#define QUEUE_LENGTH_1 10#define QUEUE_LENGTH_2 10/* Binary semaphores have an effective length of 1. */#define BINARY_SEMAPHORE_LENGTH 1/* Define the size of the item to be held by queue 1 and queue 2 respectively. The values used here are just for demonstration purposes. */#define ITEM_SIZE_QUEUE_1 sizeof( uint32_t )#define ITEM_SIZE_QUEUE_2 sizeof( something_else_t )/* The combined length of the two queues and binary semaphore that will be added to the queue set. */#define COMBINED_LENGTH ( QUEUE_LENGTH_1 + QUEUE_LENGTH_2 + BINARY_SEMAPHORE_LENGTH )void vAFunction( void ){static QueueSetHandle_t xQueueSet;QueueHandle_t xQueue1, xQueue2, xSemaphore;QueueSetMemberHandle_t xActivatedMember;uint32_t xReceivedFromQueue1;something_else_t xReceivedFromQueue2;/* Create a queue set large enough to hold an event for every space in everyqueue and semaphore that is to be added to the set. */xQueueSet = xQueueCreateSet( COMBINED_LENGTH );/* Create the queues and semaphores that will be contained in the set. */xQueue1 = xQueueCreate( QUEUE_LENGTH_1, ITEM_SIZE_QUEUE_1 );xQueue2 = xQueueCreate( QUEUE_LENGTH_2, ITEM_SIZE_QUEUE_2 );/* Create the semaphore that is being added to the set. */xSemaphore = xSemaphoreCreateBinary();/* Take the semaphore, so it starts empty. A block time of zero can be usedas the semaphore is guaranteed to be available - it has just been created. */xSemaphoreTake( xSemaphore, 0 );/* Add the queues and semaphores to the set. Reading from these queues andsemaphore can only be performed after a call to xQueueSelectFromSet() hasreturned the queue or semaphore handle from this point on. */xQueueAddToSet( xQueue1, xQueueSet );xQueueAddToSet( xQueue2, xQueueSet );xQueueAddToSet( xSemaphore, xQueueSet );/* CONTINUED ON NEXT PAGE */\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#35-xqueuecreatestatic","title":"3.5 xQueueCreateStatic()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cqueue.h\u201dQueueHandle_t xQueueCreateStatic( UBaseType_t uxQueueLength,UBaseType_t uxItemSize,uint8_t *pucQueueStorageBuffer,StaticQueue_t *pxQueueBuffer );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_261","title":"\u6982\u8981","text":"<p>\u521b\u5efa\u4e00\u4e2a\u65b0\u961f\u5217\u5e76\u8fd4\u56de\u4e00\u4e2a\u53e5\u67c4\uff0c\u8be5\u53e5\u67c4\u53ef\u7528\u4e8e\u5f15\u7528\u8be5\u961f\u5217\u3002</p> <p>\u6bcf\u4e2a\u961f\u5217\u90fd\u9700\u8981RAM, RAM\u7528\u4e8e\u4fdd\u5b58\u961f\u5217\u72b6\u6001\uff0c\u5e76\u4fdd\u5b58\u961f\u5217\u4e2d\u5305\u542b\u7684\u9879(\u961f\u5217\u5b58\u50a8\u533a\u57df)\u3002\u5982\u679c\u4f7f\u7528xQueueCreate()\u521b\u5efa\u961f\u5217\uff0c\u5219\u4eceFreeRTOS\u5806\u4e2d\u81ea\u52a8\u5206\u914d\u6240\u9700\u7684RAM\u3002\u5982\u679c\u4f7f\u7528xQueueCreateStatic()\u521b\u5efa\u961f\u5217\uff0c\u5219\u7531\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u63d0\u4f9bRAM\uff0c\u8fd9\u5c06\u5bfc\u81f4\u66f4\u591a\u7684\u53c2\u6570\uff0c\u4f46\u5141\u8bb8\u5728\u7f16\u8bd1\u65f6\u9759\u6001\u5206\u914dRAM\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_262","title":"\u53c2\u6570","text":"<p>uxQueueLength</p> <ul> <li>\u6b63\u5728\u521b\u5efa\u7684\u961f\u5217\u5728\u4efb\u4f55\u65f6\u5019\u53ef\u4ee5\u5bb9\u7eb3\u7684\u6700\u5927\u9879\u6570\u3002</li> </ul> <p>uxItemSize</p> <ul> <li>\u53ef\u5b58\u50a8\u5728\u961f\u5217\u4e2d\u7684\u6bcf\u4e2a\u6570\u636e\u9879\u7684\u5927\u5c0f\uff0c\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u3002</li> </ul> <p>pucQueueStorageBuffer</p> <ul> <li>\u5982\u679cuxItemSize\u4e0d\u4e3a\u96f6\uff0c\u90a3\u4e48pucQueueStorageBuffer\u5fc5\u987b\u6307\u5411\u4e00\u4e2auint8_t\u6570\u7ec4\uff0c\u8be5\u6570\u7ec4\u81f3\u5c11\u5927\u5230\u8db3\u4ee5\u5728\u4efb\u4f55\u65f6\u95f4\u5bb9\u7eb3\u961f\u5217\u4e2d\u6700\u5927\u7684\u9879\u76ee\u6570\u91cf-\u5373(uxQueueLength * uxItemSize)\u5b57\u8282\u3002</li> <li>\u5982\u679cuxItemSize\u4e3a0\uff0c\u5219pucQueueStorageBuffer\u53ef\u4ee5\u4e3aNULL\uff0c\u56e0\u4e3a\u6ca1\u6709\u65e5\u671f\u5c06\u88ab\u590d\u5236\u5230\u961f\u5217\u5b58\u50a8\u533a\u57df\u3002</li> </ul> <p>pxQueueBuffer</p> <ul> <li>\u5fc5\u987b\u6307\u5411StaticQueue_t\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u5c06\u7528\u4e8e\u4fdd\u5b58\u961f\u5217\u7684\u6570\u636e\u7ed3\u6784\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_263","title":"\u8fd4\u56de\u503c","text":"<p>NULL</p> <ul> <li>\u56e0\u4e3apxQueueBuffer\u4e3aNULL\uff0c\u6240\u4ee5\u6ca1\u6709\u521b\u5efa\u961f\u5217\u3002</li> </ul> <p>\u5176\u4ed6\u4efb\u4f55\u503c</p> <ul> <li>\u5df2\u521b\u5efa\u961f\u5217\uff0c\u8fd4\u56de\u7684\u503c\u662f\u5df2\u521b\u5efa\u961f\u5217\u7684\u53e5\u67c4\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_264","title":"\u63d0\u793a","text":"<p>\u961f\u5217\u7528\u4e8e\u5728\u4efb\u52a1\u4e4b\u95f4\u3001\u4efb\u52a1\u548c\u4e2d\u65ad\u4e4b\u95f4\u4f20\u9012\u6570\u636e\u3002</p> <p>\u53ef\u4ee5\u5728\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u4e4b\u524d\u6216\u4e4b\u540e\u521b\u5efa\u961f\u5217\u3002</p> <p>configSUPPORT_STATIC_ALLOCATION\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u8bbe\u7f6e\u4e3a1\uff0c\u624d\u80fd\u4f7f\u7528\u8be5\u51fd\u6570\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_265","title":"\u793a\u4f8b","text":"<pre><code>/* The queue is to be created to hold a maximum of 10 uint64_t variables. */#define QUEUE_LENGTH 10#define ITEM_SIZE sizeof( uint64_t )/* The variable used to hold the queue's data structure. */static StaticQueue_t xStaticQueue;/* The array to use as the queue's storage area. This must be at least(uxQueueLength * uxItemSize) bytes. */uint8_t ucQueueStorageArea[ QUEUE_LENGTH * ITEM_SIZE ];void vATask( void *pvParameters ){QueueHandle_t xQueue;/* Create a queue capable of containing 10 uint64_t values. */xQueue = xQueueCreateStatic( QUEUE_LENGTH,ITEM_SIZE,ucQueueStorageArea,&amp;xStaticQueue );/* pxQueueBuffer was not NULL so xQueue should not be NULL. */configASSERT( xQueue );}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#36-vqueuedelete","title":"3.6 vQueueDelete()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cqueue.h\u201dvoid vQueueDelete( TaskHandle_t pxQueueToDelete );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_266","title":"\u6982\u8981","text":"<p>\u5220\u9664\u4ee5\u524d\u901a\u8fc7\u8c03\u7528xQueueCreate()\u6216xQueueCreateStatic()\u521b\u5efa\u7684\u961f\u5217\u3002vqueueddelete()\u4e5f\u53ef\u4ee5\u7528\u4e8e\u5220\u9664\u4fe1\u53f7\u91cf\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_267","title":"\u53c2\u6570","text":"<p>pxQueueToDelete</p> <ul> <li>\u88ab\u5220\u9664\u961f\u5217\u7684\u53e5\u67c4\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4fe1\u53f7\u91cf\u53e5\u67c4\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_268","title":"\u8fd4\u56de\u503c","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_269","title":"\u63d0\u793a","text":"<p>\u961f\u5217\u7528\u4e8e\u5728\u4efb\u52a1\u4e4b\u95f4\u4ee5\u53ca\u4efb\u52a1\u548c\u4e2d\u65ad\u4e4b\u95f4\u4f20\u9012\u6570\u636e\u3002</p> <p>\u4efb\u52a1\u53ef\u4ee5\u9009\u62e9\u5757\u961f\u5217\u4e0a/\u4fe1\u53f7(\u7528\u4e00\u4e2a\u53ef\u9009\u7684\u8d85\u65f6)\u5982\u679c\u4ed6\u4eec\u8bd5\u56fe\u53d1\u9001\u6570\u636e\u5230\u961f\u5217/\u4fe1\u53f7\u91cf\u548c\u961f\u5217/\u4fe1\u53f7\u91cf\u5df2\u7ecf\u6ee1\u4e86,\u6216\u8005\u4ed6\u4eec\u8bd5\u56fe\u4ece\u961f\u5217\u63a5\u6536\u6570\u636e/\u4fe1\u53f7\u91cf\u548c\u961f\u5217/\u4fe1\u53f7\u5df2\u7ecf\u7a7a\u4e86\u3002\u5982\u679c\u961f\u5217/\u4fe1\u53f7\u91cf\u4e0a\u6709\u5f53\u524d\u963b\u585e\u7684\u4efb\u52a1\uff0c\u5219\u4e0d\u80fd\u5220\u9664\u8be5\u961f\u5217/\u4fe1\u53f7\u91cf\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_270","title":"\u793a\u4f8b","text":"<pre><code>/* Define the data type that will be queued. */typedef struct A_Message{char ucMessageID;char ucData[ 20 ];} AMessage;/* Define the queue parameters. */#define QUEUE_LENGTH 5#define QUEUE_ITEM_SIZE sizeof( AMessage )int main( void ){QueueHandle_t xQueue;/* Create the queue, storing the returned handle in the xQueue variable. */xQueue = xQueueCreate( QUEUE_LENGTH, QUEUE_ITEM_SIZE );if( xQueue == NULL ){/* The queue could not be created. */}else{/* Delete the queue again by passing xQueue to vQueueDelete(). */vQueueDelete( xQueue );}}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#37-pcqueuegetname","title":"3.7 pcQueueGetName()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cqueue.h\u201dconst char *pcQueueGetName( QueueHandle_t xQueue );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_271","title":"\u6982\u8981","text":"<p>\u67e5\u8be2\u961f\u5217\u7684\u53ef\u8bfb\u6587\u672c\u540d\u79f0\u3002</p> <p>\u5982\u679c\u961f\u5217\u5df2\u88ab\u6dfb\u52a0\u5230\u961f\u5217\u6ce8\u518c\u8868\uff0c\u90a3\u4e48\u5b83\u5c06\u53ea\u6709\u4e00\u4e2a\u6587\u672c\u540d\u79f0\u3002\u8bf7\u53c2\u9605vQueueAddToRegistry() API\u51fd\u6570\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_272","title":"\u53c2\u6570","text":"<p>xQueue</p> <ul> <li>\u88ab\u67e5\u8be2\u961f\u5217\u7684\u53e5\u67c4\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_273","title":"\u8fd4\u56de\u503c","text":"<p>\u961f\u5217\u540d\u662f\u6807\u51c6\u7684\u4ee5NULL\u7ed3\u5c3e\u7684C\u5b57\u7b26\u4e32\u3002\u8fd4\u56de\u7684\u503c\u662f\u4e00\u4e2a\u6307\u5411\u6b63\u5728\u67e5\u8be2\u7684\u961f\u5217\u540d\u79f0\u7684\u6307\u9488\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#38-xqueueisqueueemptyfromisr","title":"3.8 xQueueIsQueueEmptyFromISR()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cqueue.h\u201dBaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t pxQueue );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_274","title":"\u6982\u8981","text":"<p>\u67e5\u8be2\u961f\u5217\u4ee5\u67e5\u770b\u5b83\u662f\u5426\u5305\u542b\u9879\u76ee\uff0c\u6216\u8005\u5b83\u662f\u5426\u5df2\u7ecf\u4e3a\u7a7a\u3002\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u65e0\u6cd5\u4ece\u961f\u5217\u63a5\u6536\u9879\u76ee\u3002</p> <p>\u8fd9\u4e2a\u51fd\u6570\u53ea\u80fd\u5728ISR\u4e2d\u4f7f\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_275","title":"\u53c2\u6570","text":"<p>pxQueue</p> <ul> <li>\u6b63\u5728\u67e5\u8be2\u7684\u961f\u5217\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_276","title":"\u8fd4\u56de\u503c","text":"<p>pdFALSE</p> <ul> <li>\u5728\u8c03\u7528xQueueIsQueueEmptyFromISR()\u65f6\uff0c\u67e5\u8be2\u7684\u961f\u5217\u662f\u7a7a\u7684(\u4e0d\u5305\u542b\u4efb\u4f55\u6570\u636e\u9879)\u3002</li> </ul> <p>\u5176\u4ed6\u4efb\u4f55\u503c</p> <ul> <li>\u5728\u8c03\u7528xQueueIsQueueEmptyFromISR()\u65f6\uff0c\u67e5\u8be2\u7684\u961f\u5217\u4e0d\u662f\u7a7a\u7684(\u5305\u542b\u6570\u636e\u9879)\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#39-queueisqueuefullfromisr","title":"3.9 QueueIsQueueFullFromISR()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cqueue.h\u201dBaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t pxQueue );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_277","title":"\u6982\u8981","text":"<p>\u67e5\u8be2\u4e00\u4e2a\u961f\u5217\uff0c\u770b\u770b\u5b83\u662f\u5426\u5df2\u7ecf\u6ee1\u4e86\uff0c\u6216\u8005\u5b83\u662f\u5426\u6709\u7a7a\u95f4\u63a5\u6536\u4e00\u4e2a\u65b0\u9879\u76ee\u3002\u961f\u5217\u53ea\u6709\u5728\u672a\u6ee1\u65f6\u624d\u80fd\u6210\u529f\u63a5\u6536\u65b0\u9879\u76ee\u3002</p> <p>\u8fd9\u4e2a\u51fd\u6570\u53ea\u80fd\u5728ISR\u4e2d\u4f7f\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_278","title":"\u53c2\u6570","text":"<p>pxQueue</p> <ul> <li>\u6b63\u5728\u67e5\u8be2\u7684\u961f\u5217\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_279","title":"\u8fd4\u56de\u503c","text":"<p>pdFALSE</p> <ul> <li>\u8c03\u7528xQueueIsQueueFullFromISR()\u65f6\uff0c\u67e5\u8be2\u7684\u961f\u5217\u8fd8\u6ca1\u6709\u6ee1\u3002</li> </ul> <p>\u5176\u4ed6\u4efb\u4f55\u503c</p> <ul> <li>\u5728\u8c03\u7528xQueueIsQueueFullFromISR()\u65f6\uff0c\u67e5\u8be2\u7684\u961f\u5217\u5df2\u6ee1\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#310-uxqueuemessageswaiting","title":"3.10 uxQueueMessagesWaiting()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cqueue.h\u201dUBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_280","title":"\u6982\u8981","text":"<p>\u8fd4\u56de\u5f53\u524d\u4fdd\u5b58\u5728\u961f\u5217\u4e2d\u7684\u9879\u7684\u6570\u91cf\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_281","title":"\u53c2\u6570","text":"<p>xQueue</p> <ul> <li>\u88ab\u67e5\u8be2\u961f\u5217\u7684\u53e5\u67c4\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_282","title":"\u8fd4\u56de\u503c","text":"<p>\u5728\u8c03\u7528uxQueueMessagesWaiting()\u65f6\u67e5\u8be2\u7684\u961f\u5217\u4e2d\u6301\u6709\u7684\u9879\u7684\u6570\u91cf\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_283","title":"\u793a\u4f8b","text":"<pre><code>void vAFunction( QueueHandle_t xQueue ){UBaseType_t uxNumberOfItems;/* How many items are currently in the queue referenced by the xQueue handle? */uxNumberOfItems = uxQueueMessagesWaiting( xQueue );}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#311-uxqueuemessageswaitingfromisr","title":"3.11 uxQueueMessagesWaitingFromISR()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cqueue.h\u201dUBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_284","title":"\u6982\u8981","text":"<p>uxQueueMessagesWaiting()\u7684\u4e00\u4e2a\u7248\u672c\uff0c\u53ef\u4ee5\u5728\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u4f7f\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_285","title":"\u53c2\u6570","text":"<p>xQueue</p> <ul> <li>\u88ab\u67e5\u8be2\u961f\u5217\u7684\u53e5\u67c4\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_286","title":"\u8fd4\u56de\u503c","text":"<p>\u5728\u8c03\u7528uxQueueMessagesWaitingFromISR()\u65f6\u67e5\u8be2\u7684\u961f\u5217\u4e2d\u5305\u542b\u7684\u9879\u7684\u6570\u91cf\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_287","title":"\u793a\u4f8b","text":"<pre><code>void vAnInterruptHandler( void ){UBaseType_t uxNumberOfItems;BaseType_t xHigherPriorityTaskWoken = pdFALSE;/* Check the status of the queue, if it contains more than 10 items then wake thetask that will drain the queue. *//* How many items are currently in the queue referenced by the xQueue handle? */uxNumberOfItems = uxQueueMessagesWaitingFromISR( xQueue );if( uxNumberOfItems &gt; 10 ){/* The task being woken is currently blocked on xSemaphore. Giving thesemaphore will unblock the task. */xSemaphoreGiveFromISR( xSemaphore, &amp;xHigherPriorityTaskWoken );}/* If xHigherPriorityTaskWoken is equal to pdTRUE at this point then the taskthat was unblocked by the call to xSemaphoreGiveFromISR() had a priority eitherequal to or greater than the currently executing task (the task that was inthe Running state when this interrupt occurred). In that case a context switchshould be performed before leaving this interrupt service routine to ensure theinterrupt returns to the highest priority ready state task (the task that wasunblocked). The syntax required to perform a context switch from inside aninterrupt varies from port to port, and from compiler to compiler. Check theweb documentation and examples for the port in use to find the correct syntaxfor your application. */}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#312-xqueueoverwrite","title":"3.12 xQueueOverwrite()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cqueue.h\u201dBaseType_t xQueueOverwrite( QueueHandle_t xQueue, const void *pvItemToQueue );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_288","title":"\u6982\u8981","text":"<p>xQueueSendToBack()\u7684\u4e00\u4e2a\u7248\u672c\uff0c\u5373\u4f7f\u961f\u5217\u5df2\u6ee1\u4e5f\u5c06\u5199\u5165\u961f\u5217\uff0c\u8986\u76d6\u961f\u5217\u4e2d\u5df2\u7ecf\u4fdd\u5b58\u7684\u6570\u636e\u3002</p> <p>xQueueOverwrite()\u7528\u4e8e\u957f\u5ea6\u4e3a1\u7684\u961f\u5217\uff0c\u8fd9\u610f\u5473\u7740\u961f\u5217\u8981\u4e48\u662f\u7a7a\u7684\uff0c\u8981\u4e48\u662f\u6ee1\u7684\u3002</p> <p>\u8fd9\u4e2a\u51fd\u6570\u4e0d\u80fd\u4ece\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u4e2d\u8c03\u7528\u3002\u8bf7\u53c2\u9605xQueueOverwriteFromISR()\u4ee5\u83b7\u5f97\u53ef\u7528\u4e8e\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u7684\u66ff\u4ee3\u65b9\u6848\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_289","title":"\u53c2\u6570","text":"<p>xQueue</p> <ul> <li>\u5c06\u6570\u636e\u53d1\u9001\u5230\u7684\u961f\u5217\u7684\u53e5\u67c4\u3002</li> </ul> <p>pvItemToQueue</p> <ul> <li>\u6307\u5411\u8981\u653e\u5165\u961f\u5217\u4e2d\u7684\u9879\u7684\u6307\u9488\u3002\u961f\u5217\u53ef\u4ee5\u5bb9\u7eb3\u7684\u6bcf\u4e2a\u9879\u7684\u5927\u5c0f\u662f\u5728\u521b\u5efa\u961f\u5217\u65f6\u8bbe\u7f6e\u7684\uff0c\u8fd9\u4e9b\u5b57\u8282\u5c06\u4ecepvItemToQueue\u590d\u5236\u5230\u961f\u5217\u5b58\u50a8\u533a\u57df\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_290","title":"\u8fd4\u56de\u503c","text":"<p>xQueueOverwrite()\u662f\u4e00\u4e2a\u8c03\u7528xQueueGenericSend()\u7684\u5b8f\uff0c\u56e0\u6b64\u5177\u6709\u4e0exQueueSendToFront()\u76f8\u540c\u7684\u8fd4\u56de\u503c\u3002\u7136\u800c\uff0cpdPASS\u662f\u552f\u4e00\u53ef\u4ee5\u8fd4\u56de\u7684\u503c\uff0c\u56e0\u4e3axQueueOverwrite()\u5c06\u5199\u5165\u961f\u5217\uff0c\u5373\u4f7f\u961f\u5217\u5df2\u7ecf\u6ee1\u4e86\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_291","title":"\u793a\u4f8b","text":"<pre><code>void vFunction( void *pvParameters ){QueueHandle_t xQueue;unsigned long ulVarToSend, ulValReceived;/* Create a queue to hold one unsigned long value. It is stronglyrecommended *not* to use xQueueOverwrite() on queues that cancontain more than one value, and doing so will trigger an assertionif configASSERT() is defined. */xQueue = xQueueCreate( 1, sizeof( unsigned long ) );/* Write the value 10 to the queue using xQueueOverwrite(). */ulVarToSend = 10;xQueueOverwrite( xQueue, &amp;ulVarToSend );/* Peeking the queue should now return 10, but leave the value 10 inthe queue. A block time of zero is used as it is known that thequeue holds a value. */ulValReceived = 0;xQueuePeek( xQueue, &amp;ulValReceived, 0 );if( ulValReceived != 10 ){/* Error, unless another task removed the value. */}/* The queue is still full. Use xQueueOverwrite() to overwrite thevalue held in the queue with 100. */ulVarToSend = 100;xQueueOverwrite( xQueue, &amp;ulVarToSend );/* This time read from the queue, leaving the queue empty once more.A block time of 0 is used again. */xQueueReceive( xQueue, &amp;ulValReceived, 0 );/* The value read should be the last value written, even though thequeue was already full when the value was written. */if( ulValReceived != 100 ){/* Error unless another task is using the same queue. */}/* ... */}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#213-313-xqueueoverwritefromisr","title":"2.13 3.13 xQueueOverwriteFromISR()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cqueue.h\u201dBaseType_t xQueueOverwriteFromISR( QueueHandle_t xQueue,const void *pvItemToQueue,BaseType_t *pxHigherPriorityTaskWoken );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_292","title":"\u6982\u8981","text":"<p>\u53ef\u4ee5\u5728ISR\u4e2d\u4f7f\u7528\u7684xQueueOverwrite()\u7248\u672c\u3002xQueueOverwriteFromISR()\u7c7b\u4f3c\u4e8exQueueSendToBackFromISR()\uff0c\u4f46\u5373\u4f7f\u961f\u5217\u5df2\u6ee1\u4e5f\u4f1a\u5199\u5165\u961f\u5217\uff0c\u8986\u76d6\u961f\u5217\u4e2d\u5df2\u7ecf\u4fdd\u5b58\u7684\u6570\u636e\u3002</p> <p>xQueueOverwriteFromISR()\u7528\u4e8e\u957f\u5ea6\u4e3a1\u7684\u961f\u5217\uff0c\u8fd9\u610f\u5473\u7740\u961f\u5217\u8981\u4e48\u662f\u7a7a\u7684\uff0c\u8981\u4e48\u662f\u6ee1\u7684\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_293","title":"\u53c2\u6570","text":"<p>xQueue</p> <ul> <li>\u5c06\u6570\u636e\u53d1\u9001\u5230\u7684\u961f\u5217\u7684\u53e5\u67c4\u3002</li> </ul> <p>pvItemToQueue</p> <ul> <li>\u6307\u5411\u8981\u653e\u5165\u961f\u5217\u4e2d\u7684\u9879\u7684\u6307\u9488\u3002\u961f\u5217\u53ef\u4ee5\u5bb9\u7eb3\u7684\u6bcf\u4e2a\u9879\u7684\u5927\u5c0f\u662f\u5728\u521b\u5efa\u961f\u5217\u65f6\u8bbe\u7f6e\u7684\uff0c\u8fd9\u4e9b\u5b57\u8282\u5c06\u4ecepvItemToQueue\u590d\u5236\u5230\u961f\u5217\u5b58\u50a8\u533a\u57df\u3002</li> </ul> <p>pxHigherPriorityTaskWoken</p> <ul> <li>xQueueOverwriteFromISR()\u5c06\u628a*pxHigherPriorityTaskWoken\u8bbe\u7f6e\u4e3apdTRUE\uff0c\u5982\u679c\u53d1\u9001\u5230\u961f\u5217\u5bfc\u81f4\u4e00\u4e2a\u4efb\u52a1\u88ab\u89e3\u9664\u963b\u585e\uff0c\u5e76\u4e14\u88ab\u89e3\u9664\u963b\u585e\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u4efb\u52a1\u3002\u5982\u679cxQueueOverwriteFromISR()\u5c06\u8fd9\u4e2a\u503c\u8bbe\u7f6e\u4e3apdTRUE\uff0c\u90a3\u4e48\u5e94\u8be5\u5728\u4e2d\u65ad\u9000\u51fa\u4e4b\u524d\u8bf7\u6c42\u4e00\u4e2a\u4e0a\u4e0b\u6587\u5207\u6362\u3002\u8bf7\u53c2\u9605\u6587\u6863\u4e2d\u7684\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u90e8\u5206\uff0c\u4e86\u89e3\u5982\u4f55\u4f7f\u7528\u7aef\u53e3\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_294","title":"\u8fd4\u56de\u503c","text":"<p>xQueueOverwriteFromISR()\u662f\u4e00\u4e2a\u8c03\u7528xQueueGenericSendFromISR()\u7684\u5b8f\uff0c\u56e0\u6b64\u5177\u6709\u4e0exQueueSendToFrontFromISR()\u76f8\u540c\u7684\u8fd4\u56de\u503c\u3002\u7136\u800c\uff0cpdPASS\u662f\u552f\u4e00\u53ef\u4ee5\u8fd4\u56de\u7684\u503c\uff0c\u56e0\u4e3axQueueOverwriteFromISR()\u5c06\u5199\u5165\u961f\u5217\uff0c\u5373\u4f7f\u961f\u5217\u5df2\u7ecf\u6ee1\u4e86\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_295","title":"\u793a\u4f8b","text":"<pre><code>QueueHandle_t xQueue;void vFunction( void *pvParameters ){/* Create a queue to hold one unsigned long value. It is stronglyrecommended not to use xQueueOverwriteFromISR() on queues that cancontain more than one value, and doing so will trigger an assertionif configASSERT() is defined. */xQueue = xQueueCreate( 1, sizeof( unsigned long ) );}void vAnInterruptHandler( void ){/* xHigherPriorityTaskWoken must be set to pdFALSE before it is used. */BaseType_t xHigherPriorityTaskWoken = pdFALSE;unsigned long ulVarToSend, ulValReceived;/* Write the value 10 to the queue using xQueueOverwriteFromISR(). */ulVarToSend = 10;xQueueOverwriteFromISR( xQueue, &amp;ulVarToSend, &amp;xHigherPriorityTaskWoken );/* The queue is full, but calling xQueueOverwriteFromISR() again will stillpass because the value held in the queue will be overwritten with thenew value. */ulVarToSend = 100;xQueueOverwriteFromISR( xQueue, &amp;ulVarToSend, &amp;xHigherPriorityTaskWoken );/* Reading from the queue will now return 100. *//* ... */if( xHigherPriorityTaskWoken == pdTRUE ){/* Writing to the queue caused a task to unblock and the unblocked taskhas a priority higher than or equal to the priority of the currentlyexecuting task (the task this interrupt interrupted). Perform a contextswitch so this interrupt returns directly to the unblocked task. */portYIELD_FROM_ISR(); /* or portEND_SWITCHING_ISR() depending on the port.*/}}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#314-xqueuepeek","title":"3.14 xQueuePeek()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cqueue.h\u201dBaseType_t xQueuePeek( QueueHandle_t xQueue,void *pvBuffer, TickType_\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_296","title":"\u6982\u8981","text":"<p>\u4e0b\u4e00\u6b21\u4f7f\u7528xQueueReceive()\u6216xQueuePeek()\u4ece\u76f8\u540c\u961f\u5217\u4e2d\u83b7\u53d6\u9879\u65f6\uff0c\u5c06\u8fd4\u56de\u76f8\u540c\u7684\u9879\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_297","title":"\u53c2\u6570","text":"<p>xQueue</p> <ul> <li>\u8981\u4ece\u5176\u4e2d\u8bfb\u53d6\u6570\u636e\u7684\u961f\u5217\u7684\u53e5\u67c4\u3002</li> </ul> <p>pvBuffer</p> <ul> <li>\u4ece\u961f\u5217\u4e2d\u8bfb\u53d6\u7684\u6570\u636e\u5c06\u88ab\u590d\u5236\u5230\u5176\u4e2d\u7684\u5185\u5b58\u6307\u9488\u3002</li> <li>\u7f13\u51b2\u533a\u7684\u957f\u5ea6\u5fc5\u987b\u81f3\u5c11\u7b49\u4e8e\u961f\u5217\u9879\u7684\u5927\u5c0f\u3002\u9879\u76ee\u5927\u5c0f\u5c06\u7531\u7528\u4e8e\u521b\u5efa\u961f\u5217\u7684xQueueCreate()\u6216xQueueCreateStatic()\u8c03\u7528\u7684uxItemSize\u53c2\u6570\u8bbe\u7f6e\u3002</li> </ul> <p>xTicksToWait</p> <ul> <li>\u5f53\u961f\u5217\u5df2\u7ecf\u4e3a\u7a7a\u65f6\uff0c\u4efb\u52a1\u5e94\u4fdd\u6301\u5728Blocked\u72b6\u6001\u4ee5\u7b49\u5f85\u961f\u5217\u4e0a\u7684\u6570\u636e\u53ef\u7528\u7684\u6700\u5927\u65f6\u95f4\u3002</li> <li>\u5982\u679cxTicksToWait\u4e3a\u96f6\uff0c\u90a3\u4e48\u5982\u679c\u961f\u5217\u5df2\u7ecf\u4e3a\u7a7a\uff0cxQueuePeek()\u5c06\u7acb\u5373\u8fd4\u56de\u3002</li> <li>\u5757\u65f6\u95f4\u4ee5\u6ef4\u7b54\u5468\u671f\u6307\u5b9a\uff0c\u56e0\u6b64\u5b83\u6240\u4ee3\u8868\u7684\u7edd\u5bf9\u65f6\u95f4\u4f9d\u8d56\u4e8e\u6ef4\u7b54\u9891\u7387\u3002\u53ef\u4ee5\u4f7f\u7528pdMS_TO_TICKS()\u5b8f\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5\u8282\u62cd\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u3002</li> <li>\u5c06xTicksToWait\u8bbe\u7f6e\u4e3aportMAX_DELAY\u5c06\u5bfc\u81f4\u4efb\u52a1\u65e0\u9650\u671f\u7b49\u5f85(\u4e0d\u4f1a\u8d85\u65f6)\uff0c\u524d\u63d0\u662f\u5728FreeRTOSConfig.h\u4e2d\u5c06INCLUDE_vTaskSuspend\u8bbe\u7f6e\u4e3a1\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_298","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS</p> <ul> <li>\u5982\u679c\u4ece\u961f\u5217\u6210\u529f\u8bfb\u53d6\u6570\u636e\uff0c\u5219\u8fd4\u56de\u3002</li> <li>\u5982\u679c\u6307\u5b9a\u4e86\u5757\u65f6\u95f4(xTicksToWait\u4e0d\u4e3a\u96f6)\uff0c\u90a3\u4e48\u8c03\u7528\u4efb\u52a1\u53ef\u80fd\u88ab\u7f6e\u4e8eBlocked\u72b6\u6001\uff0c\u4ee5\u7b49\u5f85\u961f\u5217\u4e0a\u7684\u6570\u636e\u53ef\u7528\uff0c\u4f46\u6570\u636e\u5728\u5757\u65f6\u95f4\u5230\u671f\u4e4b\u524d\u6210\u529f\u5730\u4ece\u961f\u5217\u4e2d\u8bfb\u53d6\u3002</li> </ul> <p>errQUEUE</p> <ul> <li>\u5982\u679c\u7531\u4e8e\u961f\u5217\u5df2\u4e3a\u7a7a\u800c\u65e0\u6cd5\u4ece\u961f\u5217\u8bfb\u53d6\u6570\u636e\uff0c\u5219\u8fd4\u56de\u3002\u3001</li> <li>\u5982\u679c\u6307\u5b9a\u4e86\u5757\u65f6\u95f4(xTicksToWait\u4e0d\u4e3a\u96f6)\uff0c\u5219\u8c03\u7528\u4efb\u52a1\u5c06\u88ab\u7f6e\u4e8eBlocked\u72b6\u6001\uff0c\u4ee5\u7b49\u5f85\u53e6\u4e00\u4e2a\u4efb\u52a1\u6216\u4e2d\u65ad\u5411\u961f\u5217\u53d1\u9001\u6570\u636e\uff0c\u4f46\u5728\u6b64\u4e4b\u524d\u5757\u65f6\u95f4\u5df2\u8fc7\u671f\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_299","title":"\u793a\u4f8b","text":"<pre><code>struct AMessage{char ucMessageID;char ucData[ 20 ];} xMessage;QueueHandle_t xQueue;/* Task that creates a queue and posts a value. */void vATask( void *pvParameters ){struct AMessage *pxMessage;/* Create a queue capable of containing 10 pointers to AMessage structures.Store the handle to the created queue in the xQueue variable. */xQueue = xQueueCreate( 10, sizeof( struct AMessage * ) );if( xQueue == 0 ){/* The queue was not created because there was not enough FreeRTOS heapmemory available to allocate the queues data structures or storage area. */}else{/* ... *//* Send a pointer to a struct AMessage object to the queue referenced bythe xQueue variable. Don't block if the queue is already full (the thirdparameter to xQueueSend() is zero, so not block time is specified). */pxMessage = &amp;xMessage;xQueueSend( xQueue, ( void * ) &amp;pxMessage, 0 );}/* ... Rest of the task code. */for( ;; ){}}/* Task to peek the data from the queue. */void vADifferentTask( void *pvParameters ){struct AMessage *pxRxedMessage;if( xQueue != 0 ){/* Peek a message on the created queue. Block for 10 ticks if a message isnot available immediately. */if( xQueuePeek( xQueue, &amp;( pxRxedMessage ), 10 ) == pdPASS ){/* pxRxedMessage now points to the struct AMessage variable posted byvATask, but the item still remains on the queue. */}}else{/* The queue could not or has not been created. */}/* ... Rest of the task code. */for( ;; ){}}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#315-xqueuepeekfromisr","title":"3.15 xQueuePeekFromISR()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cqueue.h\u201dBaseType_t xQueuePeekFromISR( QueueHandle_t xQueue, void *pvBuffer );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_300","title":"\u6982\u8981","text":"<p>xQueuePeek()\u7684\u4e00\u4e2a\u7248\u672c\uff0c\u53ef\u4ee5\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b(ISR)\u4e2d\u4f7f\u7528\u3002</p> <p>\u4ece\u961f\u5217\u4e2d\u8bfb\u53d6\u9879\uff0c\u4f46\u4e0d\u4ece\u961f\u5217\u4e2d\u5220\u9664\u9879\u3002\u4e0b\u4e00\u6b21\u4f7f\u7528xQueueReceive()\u6216xQueuePeek()\u4ece\u76f8\u540c\u961f\u5217\u4e2d\u83b7\u53d6\u9879\u65f6\uff0c\u5c06\u8fd4\u56de\u76f8\u540c\u7684\u9879\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_301","title":"\u53c2\u6570","text":"<p>xQueue</p> <ul> <li>\u8981\u4ece\u5176\u4e2d\u8bfb\u53d6\u6570\u636e\u7684\u961f\u5217\u7684\u53e5\u67c4\u3002</li> </ul> <p>pvBuffer</p> <ul> <li>\u4ece\u961f\u5217\u4e2d\u8bfb\u53d6\u7684\u6570\u636e\u5c06\u88ab\u590d\u5236\u5230\u5176\u4e2d\u7684\u5185\u5b58\u6307\u9488\u3002</li> <li>\u7f13\u51b2\u533a\u7684\u957f\u5ea6\u5fc5\u987b\u81f3\u5c11\u7b49\u4e8e\u961f\u5217\u9879\u7684\u5927\u5c0f\u3002\u9879\u76ee\u5927\u5c0f\u5c06\u7531\u7528\u4e8e\u521b\u5efa\u961f\u5217\u7684xQueueCreate()\u6216xQueueCreateStatic()\u8c03\u7528\u7684uxItemSize\u53c2\u6570\u8bbe\u7f6e\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_302","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS</p> <ul> <li>\u5982\u679c\u4ece\u961f\u5217\u6210\u529f\u8bfb\u53d6\u6570\u636e\uff0c\u5219\u8fd4\u56de\u3002</li> </ul> <p>errQUEUE_EMPTY</p> <ul> <li>\u5982\u679c\u7531\u4e8e\u961f\u5217\u5df2\u4e3a\u7a7a\u800c\u65e0\u6cd5\u4ece\u961f\u5217\u8bfb\u53d6\u6570\u636e\uff0c\u5219\u8fd4\u56de\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#316-xqueuereceive","title":"3.16 xQueueReceive()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cqueue.h\u201dBaseType_t xQueueReceive( QueueHandle_t xQueue,                        void *pvBuffer,                         TickType_t xTicksToWait );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_303","title":"\u6982\u8981","text":"<p>\u4ece\u961f\u5217\u4e2d\u63a5\u6536(\u8bfb\u53d6)\u4e00\u4e2a\u9879\u76ee\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_304","title":"\u53c2\u6570","text":"<p>xQueue</p> <ul> <li>\u961f\u5217\u53e5\u67c4\u5c06\u4ece\u7528\u4e8e\u521b\u5efa\u961f\u5217\u7684xqueueccreate()\u6216xQueueCreateStatic()\u8c03\u7528\u4e2d\u8fd4\u56de\u3002</li> </ul> <p>pvBuffer</p> <ul> <li>\u7f13\u51b2\u533a\u7684\u957f\u5ea6\u5fc5\u987b\u81f3\u5c11\u7b49\u4e8e\u961f\u5217\u9879\u7684\u5927\u5c0f\u3002</li> <li>\u9879\u76ee\u5927\u5c0f\u5c06\u901a\u8fc7\u8c03\u7528xqueueccreate()\u6216\u7528\u4e8e\u521b\u5efa\u961f\u5217\u7684xQueueCreateStatic()\u7684uxItemSize\u53c2\u6570\u8bbe\u7f6e\u3002</li> </ul> <p>xTicksToWait</p> <ul> <li>\u5982\u679cxTicksToWait\u4e3a\u96f6\uff0c\u90a3\u4e48\u5982\u679c\u961f\u5217\u5df2\u7ecf\u4e3a\u7a7a\uff0c\u5219xqueuerreceive()\u5c06\u7acb\u5373\u8fd4\u56de\u3002</li> <li>\u5757\u65f6\u95f4\u4ee5\u6ef4\u7b54\u5468\u671f\u6307\u5b9a\uff0c\u56e0\u6b64\u5b83\u8868\u793a\u7684\u7edd\u5bf9\u65f6\u95f4\u53d6\u51b3\u4e8e\u6ef4\u7b54\u9891\u7387\u3002</li> <li>\u53ef\u4ee5\u4f7f\u7528pdMS_TO_TICKS()\u5b8f\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5ticks\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u3002</li> <li>\u5982\u679c\u5728FreeRTOSConfig.h\u4e2d\u5c06INCLUDE_vTaskSuspend\u8bbe\u7f6e\u4e3a1\uff0c\u5c06xTicksToWait\u8bbe\u7f6e\u4e3aportMAX_DELAY\u4f1a\u5bfc\u81f4\u4efb\u52a1\u65e0\u9650\u671f\u5730\u7b49\u5f85(\u6ca1\u6709\u8d85\u65f6)\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_305","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS</p> <ul> <li>\u5982\u679c\u6210\u529f\u4ece\u961f\u5217\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u5219\u8fd4\u56de\u3002</li> <li>\u5982\u679c\u6307\u5b9a\u4e86\u4e00\u4e2a\u5757\u65f6\u95f4(xTicksToWait\u4e0d\u4e3a\u96f6)\uff0c\u90a3\u4e48\u8c03\u7528\u4efb\u52a1\u53ef\u80fd\u88ab\u653e\u7f6e\u5230Blocked\u72b6\u6001\uff0c\u4ee5\u7b49\u5f85\u961f\u5217\u4e0a\u7684\u6570\u636e\u53ef\u7528\uff0c\u4f46\u5728\u5757\u65f6\u95f4\u8fc7\u671f\u4e4b\u524d\u6210\u529f\u5730\u4ece\u961f\u5217\u4e2d\u8bfb\u53d6\u4e86\u6570\u636e\u3002</li> </ul> <p>errQUEUE_EMPTY</p> <ul> <li>\u5982\u679c\u7531\u4e8e\u961f\u5217\u5df2\u4e3a\u7a7a\u800c\u65e0\u6cd5\u4ece\u961f\u5217\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u5219\u8fd4\u56de\u3002</li> <li>\u5982\u679c\u6307\u5b9a\u4e86\u4e00\u4e2a\u5757\u65f6\u95f4(xTicksToWait\u4e0d\u4e3a\u96f6)\uff0c\u90a3\u4e48\u8c03\u7528\u4efb\u52a1\u5c06\u88ab\u7f6e\u4e8eBlocked\u72b6\u6001\uff0c\u7b49\u5f85\u53e6\u4e00\u4e2a\u4efb\u52a1\u6216\u4e2d\u65ad\u5411\u961f\u5217\u53d1\u9001\u6570\u636e\uff0c\u4f46\u5728\u6b64\u4e4b\u524d\u5757\u65f6\u95f4\u5df2\u7ecf\u8fc7\u671f\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_306","title":"\u793a\u4f8b","text":"<pre><code>/* Define the data type that will be queued. */typedef struct A_Message{char ucMessageID;char ucData[ 20 ];} AMessage;/* Define the queue parameters. */#define QUEUE_LENGTH 5#define QUEUE_ITEM_SIZE sizeof( AMessage )int main( void ){QueueHandle_t xQueue;/* Create the queue, storing the returned handle in the xQueue variable. */xQueue = xQueueCreate( QUEUE_LENGTH, QUEUE_ITEM_SIZE );if( xQueue == NULL ){/* The queue could not be created \u2013 do something. */}/* Create a task, passing in the queue handle as the task parameter. */xTaskCreate( vAnotherTask,\u201cTask\u201d,STACK_SIZE,( void * ) xQueue, /* The queue handle is used as the task parameter. */TASK_PRIORITY,NULL );/* Start the task executing. */vTaskStartScheduler();/* Execution will only reach here if there was not enough FreeRTOS heap memoryremaining for the idle task to be created. */for( ;; );}void vAnotherTask( void *pvParameters ){QueueHandle_t xQueue;AMessage xMessage;/* The queue handle is passed into this task as the task parameter. Cast thevoid * parameter back to a queue handle. */xQueue = ( QueueHandle_t ) pvParameters;for( ;; ){/* Wait for the maximum period for data to become available on the queue.The period will be indefinite if INCLUDE_vTaskSuspend is set to 1 inFreeRTOSConfig.h. */if( xQueueReceive( xQueue, &amp;xMessage, portMAX_DELAY ) != pdPASS ){/* Nothing was received from the queue \u2013 even after blocking to waitfor data to arrive. */}else{/* xMessage now contains the received data. */}}}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#317-xqueuereceivefromisr","title":"3.17 xQueueReceiveFromISR()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cqueue.h\u201dBaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue,                                void *pvBuffer,                                 BaseType_t *pxHigherPriorityTaskWoken );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_307","title":"\u6982\u8981","text":"<p>\u53ef\u4ee5\u4eceISR\u8c03\u7528\u7684xqueuerreceive()\u7248\u672c\u3002\u4e0exqueuerreceive()\u4e0d\u540c\uff0cxQueueReceiveFromISR()\u4e0d\u5141\u8bb8\u6307\u5b9a\u5757\u65f6\u95f4\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_308","title":"\u53c2\u6570","text":"<p>xQueue</p> <ul> <li>\u63a5\u6536(\u8bfb\u53d6)\u6570\u636e\u7684\u961f\u5217\u7684\u53e5\u67c4\u3002\u961f\u5217\u53e5\u67c4\u5c06\u4ece\u7528\u4e8e\u521b\u5efa\u961f\u5217\u7684xqueueccreate()\u6216xQueueCreateStatic()\u8c03\u7528\u4e2d\u8fd4\u56de\u3002</li> </ul> <p>pvBuffer</p> <ul> <li>\u4e00\u4e2a\u6307\u5411\u5185\u5b58\u7684\u6307\u9488\uff0c\u63a5\u6536\u7684\u6570\u636e\u5c06\u88ab\u590d\u5236\u5230\u5176\u4e2d\u3002</li> <li>\u7f13\u51b2\u533a\u7684\u957f\u5ea6\u5fc5\u987b\u81f3\u5c11\u7b49\u4e8e\u961f\u5217\u9879\u7684\u5927\u5c0f\u3002\u9879\u76ee\u5927\u5c0f\u5c06\u901a\u8fc7\u8c03\u7528xqueueccreate()\u6216\u7528\u4e8e\u521b\u5efa\u961f\u5217\u7684xQueueCreateStatic()\u7684uxItemSize\u53c2\u6570\u8bbe\u7f6e\u3002</li> </ul> <p>pxHigherPriorityTaskWoken</p> <ul> <li>\u5355\u4e2a\u961f\u5217\u4e0a\u53ef\u80fd\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u4efb\u52a1\u963b\u585e\uff0c\u7b49\u5f85\u961f\u5217\u4e0a\u7684\u7a7a\u95f4\u53ef\u7528\u3002\u8c03\u7528xQueueReceiveFromISR()\u53ef\u4ee5\u4f7f\u7a7a\u95f4\u53ef\u7528\uff0c\u4ece\u800c\u5bfc\u81f4\u8fd9\u6837\u7684\u4efb\u52a1\u79bb\u5f00\u963b\u585e\u72b6\u6001\u3002\u5982\u679c\u8c03\u7528API\u51fd\u6570\u5bfc\u81f4\u4e00\u4e2a\u4efb\u52a1\u79bb\u5f00\u963b\u585e\u72b6\u6001\uff0c\u5e76\u4e14\u672a\u963b\u585e\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u7b49\u4e8e\u6216\u9ad8\u4e8e\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1(\u88ab\u4e2d\u65ad\u7684\u4efb\u52a1)\uff0c\u90a3\u4e48\uff0c\u5728\u5185\u90e8\uff0cAPI\u51fd\u6570\u5c06* pxhigherprioritytask\u53eb\u9192\u8bbe\u7f6e\u4e3apdTRUE\u3002</li> <li>\u5982\u679cxQueueReceiveFromISR()\u5c06\u6b64\u503c\u8bbe\u7f6e\u4e3apdTRUE\uff0c\u90a3\u4e48\u5e94\u8be5\u5728\u9000\u51fa\u4e2d\u65ad\u4e4b\u524d\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u3002\u8fd9\u5c06\u786e\u4fdd\u4e2d\u65ad\u76f4\u63a5\u8fd4\u56de\u5230\u6700\u9ad8\u4f18\u5148\u7ea7\u7684\u5c31\u7eea\u72b6\u6001\u4efb\u52a1\u3002</li> <li>\u5728FreeRTOS V7.3.0\u4e2d\uff0cpxhigherprioritytaskawake\u662f\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3aNULL\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_309","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS</p> <ul> <li>\u6210\u529f\u4ece\u961f\u5217\u63a5\u6536\u6570\u636e\u3002</li> </ul> <p>pdFAIL</p> <ul> <li>\u6ca1\u6709\u4ece\u961f\u5217\u63a5\u6536\u6570\u636e\uff0c\u56e0\u4e3a\u961f\u5217\u5df2\u7ecf\u4e3a\u7a7a\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_310","title":"\u63d0\u793a","text":"<p>\u5728\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u8c03\u7528xQueueReceiveFromISR()\u53ef\u80fd\u4f1a\u5bfc\u81f4\u961f\u5217\u4e0a\u88ab\u963b\u585e\u7684\u4efb\u52a1\u79bb\u5f00\u963b\u585e\u72b6\u6001\u3002\u5982\u679c\u8fd9\u6837\u4e00\u4e2a\u672a\u963b\u585e\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u6216\u7b49\u4e8e\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1(\u88ab\u4e2d\u65ad\u7684\u4efb\u52a1)\uff0c\u5219\u5e94\u8be5\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u3002\u4e0a\u4e0b\u6587\u5207\u6362\u5c06\u786e\u4fdd\u4e2d\u65ad\u76f4\u63a5\u8fd4\u56de\u5230\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u5c31\u7eea\u72b6\u6001\u4efb\u52a1\u3002\u4e0exqueuerreceive () API\u51fd\u6570\u4e0d\u540c\uff0cxQueueReceiveFromISR()\u672c\u8eab\u4e0d\u4f1a\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u3002\u76f8\u53cd\uff0c\u5b83\u5c06\u6307\u793a\u662f\u5426\u9700\u8981\u8fdb\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u3002</p> <p>\u5728\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u4e4b\u524d\uff0c\u4e0d\u80fd\u8c03\u7528xQueueReceiveFromISR()\u3002\u56e0\u6b64\uff0c\u5728\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u4e4b\u524d\uff0c\u5fc5\u987b\u4e0d\u5141\u8bb8\u6267\u884c\u8c03\u7528xQueueReceiveFromISR()\u7684\u4e2d\u65ad\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_311","title":"\u793a\u4f8b","text":"<p>\u4e3a\u4e86\u6e05\u6670\u5730\u6f14\u793a\uff0c\u672c\u8282\u4e2d\u7684\u793a\u4f8b\u591a\u6b21\u8c03\u7528xQueueReceiveFromISR()\u6765\u63a5\u6536\u591a\u4e2a\u5c0f\u6570\u636e\u9879\u3002\u8fd9\u662f\u4f4e\u6548\u7684\uff0c\u56e0\u6b64\u4e0d\u63a8\u8350\u7528\u4e8e\u5927\u591a\u6570\u5e94\u7528\u7a0b\u5e8f\u3002\u66f4\u53ef\u53d6\u7684\u65b9\u6cd5\u662f\u5c06\u7ed3\u6784\u4e2d\u7684\u591a\u4e2a\u6570\u636e\u9879\u4ee5\u5355\u4e2apost\u7684\u65b9\u5f0f\u53d1\u9001\u5230\u961f\u5217\u4e2d\uff0c\u5141\u8bb8\u53ea\u8c03\u7528xQueueReceiveFromISR()\u4e00\u6b21\u3002\u6216\u8005\uff0c\u6700\u597d\u5c06\u5904\u7406\u63a8\u8fdf\u5230\u4efb\u52a1\u7ea7\u522b\u3002</p> <pre><code>/* vISR is an interrupt service routine that empties a queue of values, sending eachto a peripheral. It might be that there are multiple tasks blocked on the queuewaiting for space to write more data to the queue. */void vISR( void ){char cByte;BaseType_t xHigherPriorityTaskWoken;/* No tasks have yet been unblocked. */xHigherPriorityTaskWoken = pdFALSE;/* Loop until the queue is empty.xHigherPriorityTaskWoken will get set to pdTRUE internally withinxQueueReceiveFromISR() if calling xQueueReceiveFromISR()caused a task to leavethe Blocked state, and the unblocked task has a priority equal to or greater thanthe task currently in the Running state (the task this ISR interrupted). */while( xQueueReceiveFromISR( xQueue,&amp;cByte,&amp;xHigherPriorityTaskWoken ) == pdPASS ){/* Write the received byte to the peripheral. */OUTPUT_BYTE( TX_REGISTER_ADDRESS, cByte );}/* Clear the interrupt source. *//* Now the queue is empty and we have cleared the interrupt we can perform acontext switch if one is required (if xHigherPriorityTaskWoken has been set topdTRUE. NOTE: The syntax required to perform a context switch from an ISR variesfrom port to port, and from compiler to compiler. Check the web documentation andexamples for the port being used to find the correct syntax required for yourapplication. */portYIELD_FROM_ISR( xHigherPriorityTaskWoken );}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#318-xqueueremovefromset","title":"3.18 xQueueRemoveFromSet()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cqueue.h\u201dBaseType_t xQueueRemoveFromSet( QueueSetMemberHandle_t xQueueOrSemaphore,                                QueueSetHandle_t xQueueSet );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_312","title":"\u6982\u8981","text":"<p>\u4ece\u961f\u5217\u96c6\u4e2d\u79fb\u9664\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u3002</p> <p>\u53ea\u6709\u5f53\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u4e3a\u7a7a\u65f6\uff0c\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u624d\u80fd\u4ece\u961f\u5217\u96c6\u4e2d\u79fb\u9664\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_313","title":"\u53c2\u6570","text":"<p>xQueueOrSemaphore</p> <ul> <li>\u4ece\u961f\u5217\u96c6\u4e2d\u5220\u9664\u7684\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u7684\u53e5\u67c4(\u8f6c\u6362\u4e3aQueueSetMemberHandle_t\u7c7b\u578b)\u3002</li> </ul> <p>xQueueSet</p> <ul> <li>\u5305\u542b\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u7684\u961f\u5217\u96c6\u7684\u53e5\u67c4\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_314","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS</p> <ul> <li>\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u5df2\u6210\u529f\u4ece\u961f\u5217\u96c6\u4e2d\u79fb\u9664\u3002</li> </ul> <p>pdFAIL</p> <ul> <li>\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u6ca1\u6709\u4ece\u961f\u5217\u96c6\u4e2d\u79fb\u9664\uff0c\u56e0\u4e3a\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u4e0d\u5728\u961f\u5217\u96c6\u4e2d\uff0c\u6216\u8005\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u4e0d\u662f\u7a7a\u7684\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_315","title":"\u63d0\u793a","text":"<p>\u8981\u4f7fxQueueRemoveFromSet() API\u51fd\u6570\u53ef\u7528\uff0c\u5728FreeRTOSConfig.h\u4e2dconfigUSE_QUEUE_SETS\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_316","title":"\u793a\u4f8b","text":"<p>\u672c\u793a\u4f8b\u5047\u8bbexQueueSet\u662f\u4e00\u4e2a\u5df2\u7ecf\u521b\u5efa\u7684\u961f\u5217\u96c6\uff0c\u800cxQueue\u662f\u4e00\u4e2a\u5df2\u7ecf\u521b\u5efa\u5e76\u6dfb\u52a0\u5230xQueueSet\u7684\u961f\u5217\u3002</p> <pre><code>if( xQueueRemoveFromSet( xQueue, xQueueSet ) != pdPASS ){/* Either xQueue was not a member of the xQueueSet set, or xQueue isnot empty and therefore cannot be removed from the set. */}else{/* The queue was successfully removed from the set. */}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#319-xqueuereset","title":"3.19 xQueueReset()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cqueue.h\u201dBaseType_t xQueueReset( QueueHandle_t xQueue );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_317","title":"\u6982\u8981","text":"<p>\u5c06\u961f\u5217\u91cd\u7f6e\u4e3a\u5176\u521d\u59cb\u7a7a\u72b6\u6001\u3002\u5728\u91cd\u7f6e\u961f\u5217\u65f6\uff0c\u961f\u5217\u4e2d\u5305\u542b\u7684\u4efb\u4f55\u6570\u636e\u90fd\u4f1a\u88ab\u4e22\u5f03\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_318","title":"\u53c2\u6570","text":"<p>xQueue</p> <ul> <li>\u6b63\u5728\u91cd\u7f6e\u7684\u961f\u5217\u7684\u53e5\u67c4\u3002\u961f\u5217\u53e5\u67c4\u5c06\u4ece\u7528\u4e8e\u521b\u5efa\u961f\u5217\u7684xqueueccreate()\u6216xQueueCreateStatic()\u8c03\u7528\u4e2d\u8fd4\u56de\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_319","title":"\u8fd4\u56de\u503c","text":"<p>\u539f\u59cb\u7248\u672c\u7684xQueueReset()\u8fd4\u56depdPASS\u6216pdFAIL\u3002\u56e0\u4e3aFreeRTOS V7.2.0 xQueueReset()\u603b\u662f\u8fd4\u56depdPASS\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#320-xqueueselectfromset","title":"3.20 xQueueSelectFromSet()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cqueue.h\u201dQueueSetMemberHandle_t xQueueSelectFromSet( QueueSetHandle_t xQueueSet,                                          const TickType_t xTicksToWait );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_320","title":"\u6982\u8981","text":"<p>xQueueSelectFromSet()\u4ece\u961f\u5217\u96c6\u5408\u7684\u6210\u5458\u4e2d\u9009\u62e9\u4e00\u4e2a\u961f\u5217\u6216\u4fe1\u53f7\u91cf\uff0c\u8be5\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u8981\u4e48\u5305\u542b\u6570\u636e(\u5728\u961f\u5217\u7684\u60c5\u51b5\u4e0b)\uff0c\u8981\u4e48\u53ef\u4ee5\u63a5\u53d7\u6570\u636e(\u5728\u4fe1\u53f7\u91cf\u7684\u60c5\u51b5\u4e0b)\u3002xQueueSelectFromSet()\u6709\u6548\u5730\u5141\u8bb8\u4efb\u52a1\u5728\u4e00\u4e2a\u961f\u5217\u96c6\u4e2d\u540c\u65f6\u963b\u585e(\u6302\u8d77)\u6240\u6709\u961f\u5217\u548c\u4fe1\u53f7\u91cf\u7684\u8bfb\u64cd\u4f5c\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_321","title":"\u53c2\u6570","text":"<p>xQueueSet</p> <ul> <li>\u4efb\u52a1\u5c06(\u53ef\u80fd)\u963b\u585e\u7684\u961f\u5217\u8bbe\u7f6e\u3002</li> </ul> <p>xTicksToWait</p> <ul> <li>\u8c03\u7528\u4efb\u52a1\u5c06\u4fdd\u6301\u5728Blocked\u72b6\u6001(\u5176\u4ed6\u4efb\u52a1\u6b63\u5728\u6267\u884c)\uff0c\u7b49\u5f85\u961f\u5217\u96c6\u7684\u4e00\u4e2a\u6210\u5458\u4e3a\u6210\u529f\u8bfb\u53d6\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u8fdb\u884c\u64cd\u4f5c\u505a\u597d\u51c6\u5907\u7684\u6700\u5927\u65f6\u95f4(\u4ee5\u6ef4\u6570\u8ba1)\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_322","title":"\u8fd4\u56de\u503c","text":"<p>NULL</p> <ul> <li>\u5728xTicksToWait\u53c2\u6570\u6307\u5b9a\u7684\u5757\u65f6\u95f4\u8fc7\u671f\u4e4b\u524d\uff0c\u96c6\u5408\u4e2d\u5305\u542b\u7684\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u4e0d\u53ef\u7528\u3002</li> </ul> <p>\u5176\u4ed6\u4efb\u4f55\u503c</p> <ul> <li>\u5305\u542b\u5728\u5305\u542b\u6570\u636e\u7684\u961f\u5217\u96c6\u4e2d\u7684\u961f\u5217\u53e5\u67c4(\u5f3a\u5236\u8f6c\u6362\u4e3aQueueSetMemberHandle_t\u7c7b\u578b)\uff0c\u6216\u8005\u5305\u542b\u5728\u53ef\u7528\u961f\u5217\u96c6\u4e2d\u7684\u4fe1\u53f7\u91cf\u53e5\u67c4(\u5f3a\u5236\u8f6c\u6362\u4e3aQueueSetMemberHandle_t\u7c7b\u578b)\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_323","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86\u4f7fxQueueSelectFromSet() API\u51fd\u6570\u53ef\u7528\uff0c\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u5c06configUSE_QUEUE_SETS\u8bbe\u7f6e\u4e3a1\u3002</p> <p>\u9664\u4e86\u4f7f\u7528\u961f\u5217\u96c6\uff0c\u8fd8\u6709\u66f4\u7b80\u5355\u7684\u66ff\u4ee3\u65b9\u6cd5\u3002\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u89c1FreeRTOS.org\u7f51\u7ad9\u4e0a\u7684\u5c4f\u853d\u591a\u4e2a\u5bf9\u8c61\u9875\u9762\u3002</p> <p>\u5728\u5305\u542b\u4e92\u65a5\u91cf\u7684\u961f\u5217\u96c6\u4e0a\u963b\u585e\u4e0d\u4f1a\u5bfc\u81f4\u4e92\u65a5\u91cf\u6301\u6709\u8005\u7ee7\u627f\u963b\u585e\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002</p> <p>\u63a5\u6536(\u5728\u961f\u5217\u4e2d)\u6216\u63a5\u53d7(\u5728\u4fe1\u53f7\u91cf\u4e2d)\u64cd\u4f5c\u4e0d\u80fd\u5728\u961f\u5217\u96c6\u5408\u7684\u6210\u5458\u4e0a\u6267\u884c\uff0c\u9664\u975e\u5bf9xQueueSelectFromSet()\u7684\u8c03\u7528\u9996\u5148\u8fd4\u56de\u4e86\u8be5\u96c6\u5408\u6210\u5458\u7684\u53e5\u67c4\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_324","title":"\u793a\u4f8b","text":"<p>\u8bf7\u53c2\u9605\u672c\u624b\u518c\u4e2d\u4e3axQueueCreateSet()\u51fd\u6570\u63d0\u4f9b\u7684\u793a\u4f8b\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#321-xqueueselectfromsetfromisr","title":"3.21 xQueueSelectFromSetFromISR()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cqueue.h\u201dQueueSetMemberHandle_t xQueueSelectFromSetFromISR( QueueSetHandle_t xQueueSet );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_325","title":"\u6982\u8981","text":"<p>\u53ef\u4ee5\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u4f7f\u7528\u7684xQueueSelectFromSet()\u7684\u4e00\u4e2a\u7248\u672c</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_326","title":"\u53c2\u6570","text":"<p>xQueueSet</p> <ul> <li>\u6b63\u5728\u67e5\u8be2\u7684\u961f\u5217\u96c6\u3002\u4e0d\u53ef\u80fd\u5728\u8bfb\u53d6\u65f6\u963b\u585e\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u51fd\u6570\u88ab\u8bbe\u8ba1\u4e3a\u4ece\u4e2d\u65ad\u4e2d\u4f7f\u7528\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_327","title":"\u8fd4\u56de\u503c","text":"<p>NULL</p> <ul> <li>\u6ca1\u6709\u53ef\u7528\u7684\u961f\u5217\u96c6\u6210\u5458\u3002</li> </ul> <p>\u5176\u4ed6\u4efb\u4f55\u503c</p> <ul> <li>\u5305\u542b\u5728\u5305\u542b\u6570\u636e\u7684\u961f\u5217\u96c6\u4e2d\u7684\u961f\u5217\u53e5\u67c4(\u5f3a\u5236\u8f6c\u6362\u4e3aQueueSetMemberHandle_t\u7c7b\u578b)\uff0c\u6216\u8005\u5305\u542b\u5728\u53ef\u7528\u961f\u5217\u96c6\u4e2d\u7684\u4fe1\u53f7\u91cf\u53e5\u67c4(\u5f3a\u5236\u8f6c\u6362\u4e3aQueueSetMemberHandle_t\u7c7b\u578b)\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_328","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86\u4f7fxQueueSelectFromSetFromISR() API\u51fd\u6570\u53ef\u7528\uff0c\u5728FreeRTOSConfig.h\u4e2dconfigUSE_QUEUE_SETS\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_329","title":"\u793a\u4f8b","text":"<pre><code>void vReceiveFromQueueInSetFromISR( void ){ QueueSetMemberHandle_t xActivatedQueue; unsigned long ulReceived;   /* See if any of the queues in the set contain data. */ xActivatedQueue = xQueueSelectFromSetFromISR( xQueueSet );  if( xActivatedQueue != NULL )   {       /* Reading from the queue returned by xQueueSelectFromSetFormISR(). */      if( xQueueReceiveFromISR( xActivatedQueue, &amp;ulReceived, NULL ) != pdPASS )      {           /* Data should have been available as the handle was returned from          xQueueSelectFromSetFromISR(). */        }   }}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#322-xqueuesend-xqueuesendtofront-xqueuesendtoback","title":"3.22  xQueueSend(), xQueueSendToFront(), xQueueSendToBack()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cqueue.h\u201dBaseType_t xQueueSend( QueueHandle_t xQueue,                    const void * pvItemToQueue,                     TickType_t xTicksToWait );BaseType_t xQueueSendToFront( QueueHandle_t xQueue,                              const void * pvItemToQueue,                             TickType_t xTicksToWait );BaseType_t xQueueSendToBack( QueueHandle_t xQueue,                           const void * pvItemToQueue,                             TickType_t xTicksToWait );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_330","title":"\u6982\u8981","text":"<p>\u5c06\u4e00\u4e2a\u9879\u76ee\u53d1\u9001(\u5199\u5165)\u5230\u961f\u5217\u7684\u524d\u9762\u6216\u540e\u9762\u3002</p> <p>xQueueSend()\u548cxQueueSendToBack()\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\uff0c\u56e0\u6b64\u662f\u7b49\u6548\u7684\u3002\u4e24\u8005\u90fd\u5c06\u6570\u636e\u53d1\u9001\u5230\u961f\u5217\u7684\u540e\u9762\u3002xQueueSend()\u662f\u6700\u521d\u7684\u7248\u672c\uff0c\u73b0\u5728\u5efa\u8bae\u4f7f\u7528xQueueSendToBack()\u4ee3\u66ff\u5b83\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_331","title":"\u53c2\u6570","text":"<p>xQueue</p> <ul> <li>\u5c06\u6570\u636e\u53d1\u9001(\u5199\u5165)\u5230\u7684\u961f\u5217\u7684\u53e5\u67c4\u3002\u961f\u5217\u53e5\u67c4\u5c06\u4ece\u7528\u4e8e\u521b\u5efa\u961f\u5217\u7684xqueueccreate()\u6216xQueueCreateStatic()\u8c03\u7528\u4e2d\u8fd4\u56de\u3002</li> </ul> <p>pvItemToQueue</p> <ul> <li>\u4e00\u4e2a\u6307\u5411\u8981\u590d\u5236\u5230\u961f\u5217\u4e2d\u7684\u6570\u636e\u7684\u6307\u9488\u3002</li> <li>\u961f\u5217\u53ef\u4ee5\u5bb9\u7eb3\u7684\u6bcf\u4e2a\u6761\u76ee\u7684\u5927\u5c0f\u662f\u5728\u521b\u5efa\u961f\u5217\u65f6\u8bbe\u7f6e\u7684\uff0c\u8bb8\u591a\u5b57\u8282\u5c06\u4ecepvItemToQueue\u590d\u5236\u5230\u961f\u5217\u5b58\u50a8\u533a\u57df\u3002</li> </ul> <p>xTicksToWait</p> <ul> <li>\u5f53\u961f\u5217\u5df2\u6ee1\u65f6\uff0c\u4efb\u52a1\u4fdd\u6301\u5728Blocked\u72b6\u6001\u4ee5\u7b49\u5f85\u961f\u5217\u4e0a\u7684\u7a7a\u95f4\u53ef\u7528\u7684\u6700\u5927\u65f6\u95f4\u3002</li> <li>\u5982\u679cxTicksToWait\u4e3a\u96f6\u4e14\u961f\u5217\u5df2\u6ee1\uff0c\u5219xQueueSend()\u3001xQueueSendToFront()\u548cxQueueSendToBack()\u5c06\u7acb\u5373\u8fd4\u56de\u3002</li> <li>\u5757\u65f6\u95f4\u4ee5\u6ef4\u7b54\u5468\u671f\u6307\u5b9a\uff0c\u56e0\u6b64\u5b83\u8868\u793a\u7684\u7edd\u5bf9\u65f6\u95f4\u53d6\u51b3\u4e8e\u6ef4\u7b54\u9891\u7387\u3002\u53ef\u4ee5\u4f7f\u7528pdMS_TO_TICKS()\u5b8f\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5ticks\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u3002</li> <li>\u5c06xTicksToWait\u8bbe\u7f6e\u4e3aportMAX_DELAY\u5c06\u5bfc\u81f4\u4efb\u52a1\u65e0\u9650\u671f\u7b49\u5f85(\u6ca1\u6709\u8d85\u65f6)\uff0c\u524d\u63d0\u662fFreeRTOSConfig.h\u4e2dINCLUDE_vTaskSuspend\u8bbe\u7f6e\u4e3a1\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_332","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS</p> <ul> <li>\u5982\u679c\u6570\u636e\u6210\u529f\u53d1\u9001\u5230\u961f\u5217\uff0c\u5219\u8fd4\u56de\u3002</li> <li>\u5982\u679c\u4e00\u5757\u6307\u5b9a\u65f6\u95f4(xTicksToWait\u4e0d\u662f\u96f6),\u7136\u540e\u8c03\u7528\u4efb\u52a1\u53ef\u80fd\u88ab\u8fdb\u5165\u963b\u585e\u72b6\u6001,\u7b49\u5f85\u7a7a\u95f4\u53ef\u7528\u961f\u5217\u4e2d\u7684\u51fd\u6570\u8fd4\u56de\u4e4b\u524d,\u4f46\u6570\u636e\u6210\u529f\u5199\u5165\u961f\u5217\u963b\u585e\u65f6\u95f4\u5230\u671f\u4e4b\u524d\u3002</li> </ul> <p>errQUEUE_FULL</p> <ul> <li>\u5982\u679c\u7531\u4e8e\u961f\u5217\u5df2\u6ee1\u800c\u65e0\u6cd5\u5c06\u6570\u636e\u5199\u5165\u961f\u5217\uff0c\u5219\u8fd4\u56de\u3002</li> <li>\u5982\u679c\u6307\u5b9a\u4e86\u4e00\u4e2a\u5757\u65f6\u95f4(xTicksToWait\u4e0d\u4e3a\u96f6)\uff0c\u90a3\u4e48\u8c03\u7528\u4efb\u52a1\u5c06\u88ab\u7f6e\u4e8eBlocked\u72b6\u6001\uff0c\u7b49\u5f85\u53e6\u4e00\u4e2a\u4efb\u52a1\u6216\u4e2d\u65ad\u5728\u961f\u5217\u4e2d\u817e\u51fa\u7a7a\u95f4\uff0c\u4f46\u6307\u5b9a\u7684\u5757\u65f6\u95f4\u5728\u6b64\u4e4b\u524d\u5df2\u7ecf\u8fc7\u671f\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_333","title":"\u793a\u4f8b","text":"<pre><code>/* Define the data type that will be queued. */typedef struct A_Messagechar ucMessageID;char ucData[ 20 ];} AMessage;/* Define the queue parameters. */#define QUEUE_LENGTH 5#define QUEUE_ITEM_SIZE sizeof( AMessage )int main( void ){QueueHandle_t xQueue;/* Create the queue, storing the returned handle in the xQueue variable. */xQueue = xQueueCreate( QUEUE_LENGTH, QUEUE_ITEM_SIZE );if( xQueue == NULL ){/* The queue could not be created \u2013 do something. */}/* Create a task, passing in the queue handle as the task parameter. */xTaskCreate( vAnotherTask,\u201cTask\u201d,STACK_SIZE,( void * ) xQueue, /* xQueue is used as the task parameter. */TASK_PRIORITY,NULL );/* Start the task executing. */vTaskStartScheduler();/* Execution will only reach here if there was not enough FreeRTOS heap memoryremaining for the idle task to be created. */for( ;; );}void vATask( void *pvParameters ){QueueHandle_t xQueue;AMessage xMessage;/* The queue handle is passed into this task as the task parameter. Castthe parameter back to a queue handle. */xQueue = ( QueueHandle_t ) pvParameters;for( ;; ){/* Create a message to send on the queue. */xMessage.ucMessageID = SEND_EXAMPLE;/* Send the message to the queue, waiting for 10 ticks for space to becomeavailable if the queue is already full. */if( xQueueSendToBack( xQueue, &amp;xMessage, 10 ) != pdPASS ){/* Data could not be sent to the queue even after waiting 10 ticks. */}}}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#323-xqueuesendfromisr-xqueuesendtobackfromisr-xqueuesendtofrontfromisr","title":"3.23 xQueueSendFromISR(), xQueueSendToBackFromISR(), xQueueSendToFrontFromISR()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cqueue.h\u201dBaseType_t xQueueSendFromISR( QueueHandle_t xQueue,                            const void *pvItemToQueue,                              BaseType_t *pxHigherPriorityTaskWoken );BaseType_t xQueueSendToBackFromISR( QueueHandle_t xQueue,                                 const void *pvItemToQueue,                                  BaseType_t *pxHigherPriorityTaskWoken );BaseType_t xQueueSendToFrontFromISR( QueueHandle_t xQueue,                                   const void *pvItemToQueue,                                  BaseType_t *pxHigherPriorityTaskWoken );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_334","title":"\u6982\u8981","text":"<p>\u53ef\u4ee5\u4eceISR\u8c03\u7528\u7684xQueueSend()\u3001xQueueSendToFront()\u548cxQueueSendToBack() API\u51fd\u6570\u7684\u7248\u672c\u3002\u4e0exQueueSend()\u3001xQueueSendToFront()\u548cxQueueSendToBack()\u4e0d\u540c\uff0cISR\u5b89\u5168\u7248\u672c\u4e0d\u5141\u8bb8\u6307\u5b9a\u5757\u65f6\u95f4\u3002</p> <p>xQueueSendFromISR()\u548cxQueueSendToBackFromISR()\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u662f\u7b49\u6548\u7684\u3002\u4e24\u8005\u90fd\u5c06\u6570\u636e\u53d1\u9001\u5230\u961f\u5217\u7684\u540e\u9762\u3002xQueueSendFromISR()\u662f\u6700\u521d\u7684\u7248\u672c\uff0c\u73b0\u5728\u5efa\u8bae\u4f7f\u7528xQueueSendToBackFromISR()\u4ee3\u66ff\u5b83\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_335","title":"\u53c2\u6570","text":"<p>xQueue</p> <ul> <li>\u5c06\u6570\u636e\u53d1\u9001(\u5199\u5165)\u5230\u7684\u961f\u5217\u7684\u53e5\u67c4\u3002\u961f\u5217\u53e5\u67c4\u5c06\u4ece\u7528\u4e8e\u521b\u5efa\u961f\u5217\u7684xqueueccreate()\u6216xQueueCreateStatic()\u8c03\u7528\u4e2d\u8fd4\u56de\u3002</li> </ul> <p>pvItemToQueue</p> <ul> <li>\u4e00\u4e2a\u6307\u5411\u8981\u590d\u5236\u5230\u961f\u5217\u4e2d\u7684\u6570\u636e\u7684\u6307\u9488\u3002</li> <li>\u961f\u5217\u53ef\u4ee5\u5bb9\u7eb3\u7684\u6bcf\u4e2a\u6761\u76ee\u7684\u5927\u5c0f\u662f\u5728\u521b\u5efa\u961f\u5217\u65f6\u8bbe\u7f6e\u7684\uff0c\u8bb8\u591a\u5b57\u8282\u5c06\u4ecepvItemToQueue\u590d\u5236\u5230\u961f\u5217\u5b58\u50a8\u533a\u57df\u3002</li> </ul> <p>pxHigherPriorityTaskWoken</p> <ul> <li>\u4e00\u4e2a\u961f\u5217\u53ef\u80fd\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u4efb\u52a1\u963b\u585e\u5728\u4e0a\u9762\uff0c\u7b49\u5f85\u6570\u636e\u53ef\u7528\u3002\u8c03\u7528xQueueSendFromISR()\u3001xQueueSendToFrontFromISR()\u6216xQueueSendToBackFromISR()\u53ef\u4ee5\u4f7f\u6570\u636e\u53ef\u7528\uff0c\u4ece\u800c\u5bfc\u81f4\u8fd9\u6837\u7684\u4efb\u52a1\u79bb\u5f00\u963b\u585e\u72b6\u6001\u3002\u5982\u679c\u8c03\u7528API\u51fd\u6570\u5bfc\u81f4\u4e00\u4e2a\u4efb\u52a1\u79bb\u5f00\u963b\u585e\u72b6\u6001\uff0c\u5e76\u4e14\u672a\u963b\u585e\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u7b49\u4e8e\u6216\u9ad8\u4e8e\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1(\u88ab\u4e2d\u65ad\u7684\u4efb\u52a1)\uff0c\u90a3\u4e48\uff0c\u5728\u5185\u90e8\uff0cAPI\u51fd\u6570\u5c06* pxhigherprioritytask\u53eb\u9192\u8bbe\u7f6e\u4e3apdTRUE\u3002\u5982\u679cxQueueSendFromISR()\uff0c xQueueSendToFrontFromISR()\u6216xQueueSendToBackFromISR()\u5c06\u6b64\u503c\u8bbe\u7f6e\u4e3apdTRUE\uff0c\u90a3\u4e48\u5e94\u8be5\u5728\u4e2d\u65ad\u9000\u51fa\u4e4b\u524d\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u3002\u8fd9\u5c06\u786e\u4fdd\u4e2d\u65ad\u76f4\u63a5\u8fd4\u56de\u5230\u6700\u9ad8\u4f18\u5148\u7ea7\u7684\u5c31\u7eea\u72b6\u6001\u4efb\u52a1</li> <li>\u5728FreeRTOS V7.3.0\u4e2d\uff0cpxhigherprioritytaskawake\u662f\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3aNULL\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_336","title":"\u8fd4\u56de\u503c","text":"<p>pdTRUE</p> <ul> <li>\u6570\u636e\u5df2\u6210\u529f\u53d1\u9001\u5230\u961f\u5217\u3002</li> </ul> <p>errQUEUE_FULL</p> <ul> <li>\u65e0\u6cd5\u5c06\u6570\u636e\u53d1\u9001\u5230\u961f\u5217\uff0c\u56e0\u4e3a\u961f\u5217\u5df2\u6ee1\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_337","title":"\u63d0\u793a","text":"<p>\u5728\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u8c03\u7528xQueueSendFromISR()\u3001xQueueSendToBackFromISR()\u6216xQueueSendToFrontFromISR()\u53ef\u80fd\u4f1a\u5bfc\u81f4\u961f\u5217\u4e0a\u88ab\u963b\u585e\u7684\u4efb\u52a1\u79bb\u5f00\u963b\u585e\u72b6\u6001\u3002\u5982\u679c\u8fd9\u6837\u4e00\u4e2a\u672a\u963b\u585e\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u6216\u7b49\u4e8e\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1(\u88ab\u4e2d\u65ad\u7684\u4efb\u52a1)\uff0c\u5219\u5e94\u8be5\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u3002\u4e0a\u4e0b\u6587\u5207\u6362\u5c06\u786e\u4fdd\u4e2d\u65ad\u76f4\u63a5\u8fd4\u56de\u5230\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u5c31\u7eea\u72b6\u6001\u4efb\u52a1\u3002\u4e0exQueueSend()\u3001xQueueSendToBack()\u548cxQueueSendToFront() API\u51fd\u6570\u4e0d\u540c\uff0cxQueueSendFromISR()\u3001xQueueSendToBackFromISR()\u548cxQueueSendToFrontFromISR()\u672c\u8eab\u4e0d\u4f1a\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u3002\u76f8\u53cd\uff0c\u5b83\u4eec\u5c06\u6307\u793a\u662f\u5426\u9700\u8981\u8fdb\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u3002</p> <p>xQueueSendFromISR()\uff0c xQueueSendToBackFromISR()\u548cxQueueSendToFrontFromISR()\u5728\u8c03\u5ea6\u7a0b\u5e8f\u542f\u52a8\u4e4b\u524d\u4e0d\u80fd\u88ab\u8c03\u7528\u3002\u56e0\u6b64\uff0c\u5728\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u4e4b\u524d\uff0c\u5fc5\u987b\u4e0d\u5141\u8bb8\u8c03\u7528\u4efb\u4f55\u8fd9\u4e9b\u51fd\u6570\u7684\u4e2d\u65ad\u6267\u884c\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_338","title":"\u793a\u4f8b","text":"<p>\u4e3a\u4e86\u6e05\u6670\u5730\u6f14\u793a\uff0c\u4e0b\u9762\u7684\u793a\u4f8b\u591a\u6b21\u8c03\u7528xQueueSendToBackFromISR()\u6765\u53d1\u9001\u591a\u4e2a\u5c0f\u6570\u636e\u9879\u3002\u8fd9\u662f\u4f4e\u6548\u7684\uff0c\u56e0\u6b64\u4e0d\u63a8\u8350\u4f7f\u7528\u3002\u66f4\u53ef\u53d6\u7684\u65b9\u6cd5\u5305\u62ec:</p> <ol> <li>\u5c06\u591a\u4e2a\u6570\u636e\u9879\u6253\u5305\u5230\u4e00\u4e2a\u7ed3\u6784\u4e2d\uff0c\u7136\u540e\u4f7f\u7528\u5355\u4e2a\u8c03\u7528xQueueSendToBackFromISR()\u5c06\u6574\u4e2a\u7ed3\u6784\u53d1\u9001\u5230\u961f\u5217\u3002\u8fd9\u79cd\u65b9\u6cd5\u4ec5\u9002\u7528\u4e8e\u6570\u636e\u9879\u8f83\u5c11\u7684\u60c5\u51b5\u3002</li> <li>\u5c06\u6570\u636e\u9879\u5199\u5165\u5faa\u73afRAM\u7f13\u51b2\u533a\uff0c\u7136\u540e\u4f7f\u7528\u5bf9xQueueSendToBackFromISR()\u7684\u5355\u4e2a\u8c03\u7528\u6765\u8ba9\u4efb\u52a1\u77e5\u9053\u7f13\u51b2\u533a\u4e2d\u5305\u542b\u591a\u5c11\u65b0\u6570\u636e\u9879\u3002</li> </ol> <pre><code>/* vBufferISR() is an interrupt service routine that empties a buffer of values,writing each value to a queue. It might be that there are multiple tasks blockedon the queue waiting for the data. */void vBufferISR( void ){   char cIn;   BaseType_t xHigherPriorityTaskWoken;    /* No tasks have yet been unblocked. */ xHigherPriorityTaskWoken = pdFALSE; /* Loop until the buffer is empty. */   do  {       /* Obtain a byte from the buffer. */        cIn = INPUT_BYTE( RX_REGISTER_ADDRESS );        /* Write the byte to the queue. xHigherPriorityTaskWoken will get set to        pdTRUE if writing to the queue causes a task to leave the Blocked state,        and the task leaving the Blocked state has a priority higher than the       currently executing task (the task that was interrupted). */        xQueueSendToBackFromISR( xRxQueue, &amp;cIn, &amp;xHigherPriorityTaskWoken );   } while( INPUT_BYTE( BUFFER_COUNT ) );  /* Clear the interrupt source here. */  /* Now the buffer is empty, and the interrupt source has been cleared, a context    switch should be performed if xHigherPriorityTaskWoken is equal to pdTRUE.  NOTE: The syntax required to perform a context switch from an ISR varies from   port to port, and from compiler to compiler. Check the web documentation and    examples for the port being used to find the syntax required for your   application. */ portYIELD_FROM_ISR( xHigherPriorityTaskWoken );}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#324-uxqueuespacesavailable","title":"3.24 uxQueueSpacesAvailable()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cqueue.h\u201dUBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_339","title":"\u6982\u8981","text":"<p>\u8fd4\u56de\u961f\u5217\u4e2d\u53ef\u7528\u7684\u7a7a\u95f2\u7a7a\u95f4\u6570\u91cf\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u961f\u5217\u6ee1\u4e4b\u524d\u53ef\u4ee5\u53d1\u9001\u5230\u961f\u5217\u7684\u9879\u6570\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_340","title":"\u53c2\u6570","text":"<p>xQueue</p> <ul> <li>\u88ab\u67e5\u8be2\u961f\u5217\u7684\u53e5\u67c4\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_341","title":"\u8fd4\u56de\u503c","text":"<p>\u8c03\u7528uxQueueSpacesAvailable()\u65f6\u6b63\u5728\u67e5\u8be2\u7684\u961f\u5217\u4e2d\u53ef\u7528\u7a7a\u95f2\u7a7a\u95f4\u7684\u6570\u91cf\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_342","title":"\u793a\u4f8b","text":"<pre><code>void vAFunction( QueueHandle_t xQueue ){    UBaseType_t uxNumberOfFreeSpaces;   /* How many free spaces are currently available in the queue referenced by the  xQueue handle? */   uxNumberOfFreeSpaces = uxQueueSpacesAvailable( xQueue );}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#4","title":"\u7ae0\u82824  \u4fe1\u53f7\u91cf","text":""},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#41-vsemaphorecreatebinary","title":"4.1  vSemaphoreCreateBinary()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201csemphr.h\u201dvoid vSemaphoreCreateBinary( SemaphoreHandle_t xSemaphore );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_343","title":"\u6982\u8981","text":"<p>vSemaphoreCreateBinary()\u5b8f\u4fdd\u7559\u5728\u6e90\u4ee3\u7801\u4e2d\uff0c\u4ee5\u786e\u4fdd\u5411\u540e\u517c\u5bb9\uff0c\u4f46\u4e0d\u5e94\u8be5\u5728\u65b0\u8bbe\u8ba1\u4e2d\u4f7f\u7528\u5b83\u3002\u8bf7\u4f7f\u7528xSemaphoreCreateBinary()\u51fd\u6570\u3002</p> <p>\u521b\u5efa\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u7684\u5b8f\u3002\u5728\u4f7f\u7528\u4fe1\u53f7\u91cf\u4e4b\u524d\uff0c\u5fc5\u987b\u663e\u5f0f\u5730\u521b\u5efa\u5b83\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_344","title":"\u53c2\u6570","text":"<p>xSemaphore</p> <ul> <li>\u7c7b\u578b\u4e3aSemaphoreHandle_t\u7684\u53d8\u91cf\uff0c\u5b83\u5c06\u5b58\u50a8\u6b63\u5728\u521b\u5efa\u7684\u4fe1\u53f7\u91cf\u7684\u53e5\u67c4\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_345","title":"\u8fd4\u56de\u503c","text":"<p>\u5982\u679c\u5728\u8c03\u7528vSemaphoreCreateBinary()\u4e4b\u540e\uff0cxSemaphore\u7b49\u4e8eNULL\uff0c\u90a3\u4e48\u5c31\u4e0d\u80fd\u521b\u5efa\u4fe1\u53f7\u91cf\uff0c\u56e0\u4e3a\u6ca1\u6709\u8db3\u591f\u7684\u5806\u5185\u5b58\u4f9bFreeRTOS\u5206\u914d\u4fe1\u53f7\u91cf\u6570\u636e\u7ed3\u6784\u3002\u5728\u6240\u6709\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0cxSemaphore\u5c06\u6301\u6709\u521b\u5efa\u7684\u4fe1\u53f7\u91cf\u7684\u53e5\u67c4</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_346","title":"\u63d0\u793a","text":"<p>\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u548c\u4e92\u65a5\u91cf\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u6709\u4e00\u4e9b\u7ec6\u5fae\u7684\u533a\u522b\u3002\u4e92\u65a5\u9501\u5305\u542b\u4f18\u5148\u7ea7\u7ee7\u627f\u673a\u5236\uff0c\u800c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u6ca1\u6709\u3002\u8fd9\u4f7f\u5f97\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u6210\u4e3a\u5b9e\u73b0\u540c\u6b65(\u5728\u4efb\u52a1\u4e4b\u95f4\u6216\u4efb\u52a1\u4e0e\u4e2d\u65ad\u4e4b\u95f4)\u7684\u66f4\u597d\u9009\u62e9\uff0c\u800c\u4e92\u65a5\u4f53\u5219\u6210\u4e3a\u5b9e\u73b0\u7b80\u5355\u4e92\u65a5\u7684\u66f4\u597d\u9009\u62e9\u3002</p> <p>Binary Semaphores - \u7528\u4e8e\u540c\u6b65\u7684\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u5728\u6210\u529f\u5730\u201c\u83b7\u53d6\u201d(\u83b7\u53d6)\u4e4b\u540e\u4e0d\u9700\u8981\u88ab\u201c\u7ed9\u4e88\u201d\u3002\u4efb\u52a1\u540c\u6b65\u662f\u901a\u8fc7\u4e00\u4e2a\u4efb\u52a1\u6216\u4e2d\u65ad\u201c\u7ed9\u51fa\u201d\u4fe1\u53f7\u91cf\uff0c\u53e6\u4e00\u4e2a\u4efb\u52a1\u201c\u83b7\u53d6\u201d\u4fe1\u53f7\u91cf\u6765\u5b9e\u73b0\u7684(\u53c2\u89c1xsemaphoregvefromisr()\u6587\u6863)\u3002</p> <p>Mutexes - \u6301\u6709\u4e92\u65a5\u9501\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u5c06\u88ab\u63d0\u9ad8\uff0c\u5982\u679c\u53e6\u4e00\u4e2a\u5177\u6709\u66f4\u9ad8\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\u8bd5\u56fe\u83b7\u53d6\u76f8\u540c\u7684\u4e92\u65a5\u9501\u3002\u5df2\u7ecf\u62e5\u6709\u4e92\u65a5\u9501\u7684\u4efb\u52a1\u88ab\u8ba4\u4e3a\u201c\u7ee7\u627f\u201d\u4e86\u8bd5\u56fe\u201c\u83b7\u53d6\u201d\u76f8\u540c\u4e92\u65a5\u9501\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002\u5f53\u4e92\u65a5\u9501\u88ab\u8fd4\u56de\u65f6\uff0c\u7ee7\u627f\u7684\u4f18\u5148\u7ea7\u5c06\u88ab\u53d6\u6d88(\u6301\u6709\u4e92\u65a5\u9501\u65f6\u7ee7\u627f\u7684\u4f18\u5148\u7ea7\u66f4\u9ad8\u7684\u4efb\u52a1\u5c06\u5728\u4e92\u65a5\u9501\u88ab\u8fd4\u56de\u65f6\u8fd4\u56de\u5176\u539f\u6765\u7684\u4f18\u5148\u7ea7)\u3002</p> <p>\u4e00\u4e2a\u83b7\u5f97\u4e92\u65a5\u9501\u7684\u4efb\u52a1\u5fc5\u987b\u5c06\u8be5\u4e92\u65a5\u9501\u8fd4\u56de\u2014\u2014\u5426\u5219\u5176\u4ed6\u4efb\u52a1\u5c06\u65e0\u6cd5\u83b7\u5f97\u76f8\u540c\u7684\u4e92\u65a5\u9501\u3002\u672c\u624b\u518c\u7684xSemaphoreTake()\u4e00\u8282\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e92\u65a5\u5bf9\u8c61\u7528\u6765\u5b9e\u73b0\u4e92\u65a5\u7684\u793a\u4f8b\u3002</p> <p>\u4e92\u65a5\u9501\u548c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u90fd\u662f\u4f7f\u7528\u5177\u6709SemaphoreHandle_t\u7c7b\u578b\u7684\u53d8\u91cf\u5f15\u7528\u7684\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u4efb\u4f55\u63a5\u53d7\u8be5\u7c7b\u578b\u53c2\u6570\u7684API\u51fd\u6570\u4e2d\u4f7f\u7528\u3002</p> <p>\u4f7f\u7528\u65e7\u7684vSemaphoreCreateBinary()\u5b8f(\u800c\u4e0d\u662f\u9996\u9009\u7684xSemaphoreCreateBinary()\u51fd\u6570)\u521b\u5efa\u7684\u4e92\u65a5\u9501\u548c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\uff0c\u90fd\u662f\u8fd9\u6837\u521b\u5efa\u7684\uff0c\u5373\u5bf9\u8be5\u4fe1\u53f7\u91cf\u6216\u4e92\u65a5\u9501\u7684xSemaphoreTake()\u7684\u7b2c\u4e00\u4e2a\u8c03\u7528\u5c06\u901a\u8fc7\u3002\u6ce8\u610fvSemaphoreCreateBinary()\u5df2\u5f03\u7528\uff0c\u4e0d\u80fd\u5728\u65b0\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u3002\u4f7f\u7528xSemaphoreCreateBinary()\u51fd\u6570\u521b\u5efa\u7684\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u88ab\u521b\u5efa\u4e3a\u201c\u7a7a\u201d\uff0c\u56e0\u6b64\u5fc5\u987b\u5148\u7ed9\u51fa\u4fe1\u53f7\u91cf\uff0c\u7136\u540e\u624d\u80fd\u901a\u8fc7\u8c03\u7528xSemaphoreTake()\u6765\u83b7\u53d6(\u83b7\u53d6)\u4fe1\u53f7\u91cf\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_347","title":"\u793a\u4f8b","text":"<pre><code>SemaphoreHandle_t xSemaphore;void vATask( void * pvParameters ){    /* Attempt to create a semaphore.   NOTE: New designs should use the xSemaphoreCreateBinary() function, not the vSemaphoreCreateBinary() macro. */  vSemaphoreCreateBinary( xSemaphore );   if( xSemaphore == NULL )    {       /* There was insufficient FreeRTOS heap available for the semaphore to      be created successfully. */ }   else    {       /* The semaphore can now be used. Its handle is stored in the xSemaphore        variable. */    }}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#42-xsemaphorecreatebinary","title":"4.2 xSemaphoreCreateBinary()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201csemphr.h\u201dSemaphoreHandle_t xSemaphoreCreateBinary( void );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_348","title":"\u6982\u8981","text":"<p>\u521b\u5efa\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u53ef\u4ee5\u5f15\u7528\u8be5\u4fe1\u53f7\u91cf\u7684\u53e5\u67c4\u3002</p> <p>\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u90fd\u9700\u8981\u5c11\u91cf\u7684RAM\u6765\u4fdd\u5b58\u4fe1\u53f7\u91cf\u7684\u72b6\u6001\u3002\u5982\u679c\u4f7f\u7528xSemaphoreCreateBinary()\u521b\u5efa\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\uff0c\u90a3\u4e48\u6240\u9700\u7684RAM\u5c06\u81ea\u52a8\u4eceFreeRTOS\u5806\u4e2d\u5206\u914d\u3002\u5982\u679c\u4f7f\u7528xSemaphoreCreateBinaryStatic()\u521b\u5efa\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\uff0c\u90a3\u4e48\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u5c06\u63d0\u4f9bRAM\uff0c\u8fd9\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u53c2\u6570\uff0c\u4f46\u5141\u8bb8\u5728\u7f16\u8bd1\u65f6\u9759\u6001\u5730\u5206\u914dRAM\u3002</p> <p>\u4fe1\u53f7\u91cf\u662f\u5728\u201c\u7a7a\u201d\u72b6\u6001\u4e0b\u521b\u5efa\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5fc5\u987b\u5148\u7ed9\u51fa\u4fe1\u53f7\u91cf\uff0c\u7136\u540e\u624d\u80fd\u4f7f\u7528xSemaphoreTake()\u51fd\u6570\u83b7\u53d6(\u83b7\u53d6)\u4fe1\u53f7\u91cf\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_349","title":"\u53c2\u6570","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_350","title":"\u8fd4\u56de\u503c","text":"<p>NULL</p> <ul> <li>\u65e0\u6cd5\u521b\u5efa\u4fe1\u53f7\u91cf\uff0c\u56e0\u4e3a\u6ca1\u6709\u8db3\u591f\u7684\u5806\u5185\u5b58\u4f9bFreeRTOS\u5206\u914d\u4fe1\u53f7\u91cf\u6570\u636e\u7ed3\u6784\u3002</li> </ul> <p>\u5176\u4ed6\u4efb\u4f55\u503c</p> <ul> <li>\u6210\u529f\u521b\u5efa\u4fe1\u53f7\u91cf\u3002\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u53e5\u67c4\uff0c\u521b\u5efa\u7684\u4fe1\u53f7\u91cf\u53ef\u4ee5\u901a\u8fc7\u5b83\u6765\u5f15\u7528\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_351","title":"\u63d0\u793a","text":"<p>\u76f4\u63a5\u5230\u4efb\u52a1\u901a\u77e5\u901a\u5e38\u63d0\u4f9b\u6bd4\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u66f4\u8f7b\u3001\u66f4\u5feb\u7684\u66ff\u4ee3\u65b9\u6cd5\u3002</p> <p>\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u548c\u4e92\u65a5\u91cf\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u6709\u4e00\u4e9b\u7ec6\u5fae\u7684\u533a\u522b\u3002\u4e92\u65a5\u9501\u5305\u542b\u4f18\u5148\u7ea7\u7ee7\u627f\u673a\u5236\uff0c\u800c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u6ca1\u6709\u3002\u8fd9\u4f7f\u5f97\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u6210\u4e3a\u5b9e\u73b0\u540c\u6b65(\u4efb\u52a1\u4e4b\u95f4\u6216\u4e2d\u65ad\u4e0e\u4efb\u52a1\u4e4b\u95f4)\u7684\u66f4\u597d\u9009\u62e9\uff0c\u800c\u4e92\u65a5\u662f\u5b9e\u73b0\u7b80\u5355\u4e92\u65a5\u7684\u66f4\u597d\u9009\u62e9\u3002</p> <p>Binary Semaphores\uff08\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\uff09\u2014\u2014\u7528\u4e8e\u540c\u6b65\u7684\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u5728\u88ab\u6210\u529f\u201c\u83b7\u53d6\u201d(\u83b7\u5f97)\u540e\u4e0d\u9700\u8981\u201c\u8fd4\u56de\u201d\u3002\u4efb\u52a1\u540c\u6b65\u662f\u901a\u8fc7\u4e00\u4e2a\u4efb\u52a1\u6216\u4e2d\u65ad\u201c\u7ed9\u51fa\u201d\u4fe1\u53f7\u91cf\uff0c\u53e6\u4e00\u4e2a\u4efb\u52a1\u201c\u83b7\u53d6\u201d\u4fe1\u53f7\u91cf\u6765\u5b9e\u73b0\u7684(\u53c2\u89c1xsemaphoregvefromisr()\u6587\u6863)\u3002\u6ce8\u610f\uff0c\u4f7f\u7528\u76f4\u63a5\u5230\u4efb\u52a1\u901a\u77e5\u901a\u5e38\u53ef\u4ee5\u66f4\u6709\u6548\u5730\u5b9e\u73b0\u76f8\u540c\u7684\u529f\u80fd\u3002</p> <p>Mutexes\uff08\u4e92\u65a5\u9501\uff09\u2014\u2014\u6301\u6709\u4e92\u65a5\u9501\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u5c06\u88ab\u63d0\u9ad8\uff0c\u5982\u679c\u53e6\u4e00\u4e2a\u4f18\u5148\u7ea7\u66f4\u9ad8\u7684\u4efb\u52a1\u8bd5\u56fe\u83b7\u53d6\u76f8\u540c\u7684\u4e92\u65a5\u9501\u3002\u5df2\u7ecf\u62e5\u6709\u4e92\u65a5\u9501\u7684\u4efb\u52a1\u88ab\u8ba4\u4e3a\u201c\u7ee7\u627f\u201d\u4e86\u8bd5\u56fe\u201c\u83b7\u53d6\u201d\u76f8\u540c\u4e92\u65a5\u9501\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002\u5f53\u4e92\u65a5\u9501\u88ab\u8fd4\u56de\u65f6\uff0c\u7ee7\u627f\u7684\u4f18\u5148\u7ea7\u5c06\u88ab\u53d6\u6d88(\u6301\u6709\u4e92\u65a5\u9501\u65f6\u7ee7\u627f\u7684\u4f18\u5148\u7ea7\u66f4\u9ad8\u7684\u4efb\u52a1\u5c06\u5728\u4e92\u65a5\u9501\u88ab\u8fd4\u56de\u65f6\u8fd4\u56de\u5176\u539f\u6765\u7684\u4f18\u5148\u7ea7)\u3002</p> <p>\u4e00\u4e2a\u83b7\u5f97\u4e92\u65a5\u9501\u7684\u4efb\u52a1\u5fc5\u987b\u5c06\u8be5\u4e92\u65a5\u9501\u8fd4\u56de\u2014\u2014\u5426\u5219\u5176\u4ed6\u4efb\u52a1\u5c06\u65e0\u6cd5\u83b7\u5f97\u76f8\u540c\u7684\u4e92\u65a5\u9501\u3002\u672c\u624b\u518c\u7684xSemaphoreTake()\u4e00\u8282\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e92\u65a5\u5bf9\u8c61\u7528\u6765\u5b9e\u73b0\u4e92\u65a5\u7684\u793a\u4f8b\u3002</p> <p>\u4e92\u65a5\u9501\u548c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u90fd\u662f\u4f7f\u7528\u5177\u6709SemaphoreHandle_t\u7c7b\u578b\u7684\u53d8\u91cf\u5f15\u7528\u7684\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u4efb\u4f55\u63a5\u53d7\u8be5\u7c7b\u578b\u53c2\u6570\u7684API\u51fd\u6570\u4e2d\u4f7f\u7528\u3002</p> <p>\u4f7f\u7528vSemaphoreCreateBinary()\u5b8f(\u800c\u4e0d\u662f\u9996\u9009\u7684xSemaphoreCreateBinary()\u51fd\u6570)\u521b\u5efa\u7684\u4e92\u65a5\u9501\u548c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u90fd\u662f\u8fd9\u6837\u521b\u5efa\u7684\uff0c\u4ee5\u4fbf\u901a\u8fc7\u5bf9\u8be5\u4fe1\u53f7\u91cf\u6216\u4e92\u65a5\u9501\u7684xSemaphoreTake()\u7684\u7b2c\u4e00\u4e2a\u8c03\u7528\u3002\u6ce8\u610fvSemaphoreCreateBinary()\u5df2\u5f03\u7528\uff0c\u4e0d\u80fd\u5728\u65b0\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u3002\u4f7f\u7528xSemaphoreCreateBinary()\u51fd\u6570\u521b\u5efa\u7684\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u88ab\u521b\u5efa\u4e3a\u201c\u7a7a\u201d\uff0c\u56e0\u6b64\u5fc5\u987b\u5148\u7ed9\u51fa\u4fe1\u53f7\u91cf\uff0c\u7136\u540e\u624d\u80fd\u901a\u8fc7\u8c03\u7528xSemaphoreTake()\u6765\u83b7\u53d6(\u83b7\u53d6)\u4fe1\u53f7\u91cf\u3002</p> <p>configSUPPORT_DYNAMIC_ALLOCATION\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u8bbe\u7f6e\u4e3a1\uff0c\u6216\u8005\u4e0d\u8bbe\u7f6e\u4e3a\u672a\u5b9a\u4e49\uff0c\u4ee5\u4f7f\u8be5\u51fd\u6570\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_352","title":"\u793a\u4f8b","text":"<pre><code>SemaphoreHandle_t xSemaphore;void vATask( void * pvParameters ){    /* Attempt to create a semaphore. */    xSemaphore = xSemaphoreCreateBinary();  if( xSemaphore == NULL )    {       /* There was insufficient FreeRTOS heap available for the semaphore to      be created successfully. */ }   else    {       /* The semaphore can now be used. Its handle is stored in the xSemaphore        variable. Calling xSemaphoreTake() on the semaphore here will fail until        the semaphore has first been given. */  }}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#43-xsemaphorecreatebinarystatic","title":"4.3 xSemaphoreCreateBinaryStatic()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201csemphr.h\u201dSemaphoreHandle_t xSemaphoreCreateBinaryStatic( StaticSemaphore_t *pxSemaphoreBuffer );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_353","title":"\u6982\u8981","text":"<p>\u521b\u5efa\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u53ef\u4ee5\u5f15\u7528\u8be5\u4fe1\u53f7\u91cf\u7684\u53e5\u67c4\u3002</p> <p>\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u90fd\u9700\u8981\u5c11\u91cf\u7684RAM\u6765\u4fdd\u5b58\u4fe1\u53f7\u91cf\u7684\u72b6\u6001\u3002\u5982\u679c\u4f7f\u7528xSemaphoreCreateBinary()\u521b\u5efa\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\uff0c\u90a3\u4e48\u6240\u9700\u7684RAM\u5c06\u81ea\u52a8\u4eceFreeRTOS\u5806\u4e2d\u5206\u914d\u3002\u5982\u679c\u4f7f\u7528xSemaphoreCreateBinaryStatic()\u521b\u5efa\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\uff0c\u90a3\u4e48\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u5c06\u63d0\u4f9bRAM\uff0c\u8fd9\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u53c2\u6570\uff0c\u4f46\u5141\u8bb8\u5728\u7f16\u8bd1\u65f6\u9759\u6001\u5730\u5206\u914dRAM\u3002</p> <p>\u4fe1\u53f7\u91cf\u662f\u5728\u201c\u7a7a\u201d\u72b6\u6001\u4e0b\u521b\u5efa\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5fc5\u987b\u5148\u7ed9\u51fa\u4fe1\u53f7\u91cf\uff0c\u7136\u540e\u624d\u80fd\u4f7f\u7528xSemaphoreTake()\u51fd\u6570\u83b7\u53d6(\u83b7\u53d6)\u4fe1\u53f7\u91cf\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_354","title":"\u53c2\u6570","text":"<p>pxSemaphoreBuffer</p> <ul> <li>\u5fc5\u987b\u6307\u5411\u7c7b\u578b\u4e3aStaticSemaphore_t\u7684\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u5c06\u7528\u4e8e\u4fdd\u5b58\u4fe1\u53f7\u91cf\u7684\u72b6\u6001\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_355","title":"\u8fd4\u56de\u503c","text":"<p>NULL</p> <ul> <li>\u65e0\u6cd5\u521b\u5efa\u4fe1\u53f7\u91cf\uff0c\u56e0\u4e3apxSemaphoreBuffer\u4e3aNULL\u3002</li> </ul> <p>\u5176\u4ed6\u4efb\u4f55\u503c</p> <ul> <li>\u6210\u529f\u521b\u5efa\u4fe1\u53f7\u91cf\u3002\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u53e5\u67c4\uff0c\u521b\u5efa\u7684\u4fe1\u53f7\u91cf\u53ef\u4ee5\u901a\u8fc7\u5b83\u6765\u5f15\u7528\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_356","title":"\u63d0\u793a","text":"<p>\u76f4\u63a5\u5230\u4efb\u52a1\u901a\u77e5\u901a\u5e38\u63d0\u4f9b\u6bd4\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u66f4\u8f7b\u3001\u66f4\u5feb\u7684\u66ff\u4ee3\u65b9\u6cd5\u3002</p> <p>\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u548c\u4e92\u65a5\u91cf\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u6709\u4e00\u4e9b\u7ec6\u5fae\u7684\u533a\u522b\u3002\u4e92\u65a5\u9501\u5305\u542b\u4f18\u5148\u7ea7\u7ee7\u627f\u673a\u5236\uff0c\u800c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u6ca1\u6709\u3002\u8fd9\u4f7f\u5f97\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u6210\u4e3a\u5b9e\u73b0\u540c\u6b65(\u4efb\u52a1\u4e4b\u95f4\u6216\u4e2d\u65ad\u4e0e\u4efb\u52a1\u4e4b\u95f4)\u7684\u66f4\u597d\u9009\u62e9\uff0c\u800c\u4e92\u65a5\u662f\u5b9e\u73b0\u7b80\u5355\u4e92\u65a5\u7684\u66f4\u597d\u9009\u62e9\u3002</p> <p>\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u2014\u2014\u7528\u4e8e\u540c\u6b65\u7684\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u5728\u88ab\u6210\u529f\u201c\u83b7\u53d6\u201d(\u83b7\u5f97)\u540e\u4e0d\u9700\u8981\u201c\u8fd4\u56de\u201d\u3002\u4efb\u52a1\u540c\u6b65\u662f\u901a\u8fc7\u4e00\u4e2a\u4efb\u52a1\u6216\u4e2d\u65ad\u201c\u7ed9\u51fa\u201d\u4fe1\u53f7\u91cf\uff0c\u53e6\u4e00\u4e2a\u4efb\u52a1\u201c\u83b7\u53d6\u201d\u4fe1\u53f7\u91cf\u6765\u5b9e\u73b0\u7684(\u53c2\u89c1xsemaphoregvefromisr()\u6587\u6863)\u3002\u6ce8\u610f\uff0c\u4f7f\u7528\u76f4\u63a5\u5230\u4efb\u52a1\u901a\u77e5\u901a\u5e38\u53ef\u4ee5\u66f4\u6709\u6548\u5730\u5b9e\u73b0\u76f8\u540c\u7684\u529f\u80fd\u3002</p> <p>\u4e92\u65a5\u9501\u2014\u2014\u6301\u6709\u4e92\u65a5\u9501\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u5c06\u88ab\u63d0\u9ad8\uff0c\u5982\u679c\u53e6\u4e00\u4e2a\u4f18\u5148\u7ea7\u66f4\u9ad8\u7684\u4efb\u52a1\u8bd5\u56fe\u83b7\u53d6\u76f8\u540c\u7684\u4e92\u65a5\u9501\u3002\u5df2\u7ecf\u62e5\u6709\u4e92\u65a5\u9501\u7684\u4efb\u52a1\u88ab\u8ba4\u4e3a\u201c\u7ee7\u627f\u201d\u4e86\u8bd5\u56fe\u201c\u83b7\u53d6\u201d\u76f8\u540c\u4e92\u65a5\u9501\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002\u5f53\u4e92\u65a5\u9501\u88ab\u8fd4\u56de\u65f6\uff0c\u7ee7\u627f\u7684\u4f18\u5148\u7ea7\u5c06\u88ab\u53d6\u6d88(\u6301\u6709\u4e92\u65a5\u9501\u65f6\u7ee7\u627f\u7684\u4f18\u5148\u7ea7\u66f4\u9ad8\u7684\u4efb\u52a1\u5c06\u5728\u4e92\u65a5\u9501\u88ab\u8fd4\u56de\u65f6\u8fd4\u56de\u5176\u539f\u6765\u7684\u4f18\u5148\u7ea7)\u3002</p> <p>\u4e00\u4e2a\u83b7\u5f97\u4e92\u65a5\u9501\u7684\u4efb\u52a1\u5fc5\u987b\u5c06\u8be5\u4e92\u65a5\u9501\u8fd4\u56de\u2014\u2014\u5426\u5219\u5176\u4ed6\u4efb\u52a1\u5c06\u65e0\u6cd5\u83b7\u5f97\u76f8\u540c\u7684\u4e92\u65a5\u9501\u3002\u672c\u624b\u518c\u7684xSemaphoreTake()\u4e00\u8282\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e92\u65a5\u5bf9\u8c61\u7528\u6765\u5b9e\u73b0\u4e92\u65a5\u7684\u793a\u4f8b\u3002</p> <p>\u4e92\u65a5\u9501\u548c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u90fd\u662f\u4f7f\u7528\u5177\u6709SemaphoreHandle_t\u7c7b\u578b\u7684\u53d8\u91cf\u5f15\u7528\u7684\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u4efb\u4f55\u63a5\u53d7\u8be5\u7c7b\u578b\u53c2\u6570\u7684API\u51fd\u6570\u4e2d\u4f7f\u7528\u3002</p> <p>\u4f7f\u7528vSemaphoreCreateBinary()\u5b8f(\u800c\u4e0d\u662f\u9996\u9009\u7684xSemaphoreCreateBinary()\u51fd\u6570)\u521b\u5efa\u7684\u4e92\u65a5\u9501\u548c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u90fd\u662f\u8fd9\u6837\u521b\u5efa\u7684\uff0c\u4ee5\u4fbf\u901a\u8fc7\u5bf9\u8be5\u4fe1\u53f7\u91cf\u6216\u4e92\u65a5\u9501\u7684xSemaphoreTake()\u7684\u7b2c\u4e00\u4e2a\u8c03\u7528\u3002\u6ce8\u610fvSemaphoreCreateBinary()\u5df2\u5f03\u7528\uff0c\u4e0d\u80fd\u5728\u65b0\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u3002\u4f7f\u7528xSemaphoreCreateBinary()\u51fd\u6570\u521b\u5efa\u7684\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u88ab\u521b\u5efa\u4e3a\u201c\u7a7a\u201d\uff0c\u56e0\u6b64</p> <p>\u5728\u4f7f\u7528xSemaphoreTake()\u8c03\u7528\u83b7\u53d6(\u83b7\u53d6)\u4fe1\u53f7\u91cf\u4e4b\u524d\uff0c\u5fc5\u987b\u5148\u7ed9\u51fa\u4fe1\u53f7\u91cf\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_357","title":"\u793a\u4f8b","text":"<pre><code>SemaphoreHandle_t xSemaphoreHandle;StaticSemaphore_t xSemaphoreBuffer;void vATask( void * pvParameters ){/* Create a binary semaphore without using any dynamic memory allocation. */xSemaphoreHandle = xSemaphoreCreateBinaryStatic( &amp;xSemaphoreBuffer );/* pxSemaphoreBuffer was not NULL so the binary semaphore will have been created,and xSemaphoreHandle will be a valid handle.The rest of the task code goes here. */}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#44-xsemaphorecreatecounting","title":"4.4 xSemaphoreCreateCounting()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201csemphr.h\u201dSemaphoreHandle_t xSemaphoreCreateCounting( UBaseType_t uxMaxCount,                                         UBaseType_t uxInitialCount );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_358","title":"\u6982\u8981","text":"<p>\u521b\u5efa\u4e00\u4e2a\u8ba1\u6570\u4fe1\u53f7\u91cf\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u53e5\u67c4\uff0c\u901a\u8fc7\u8be5\u53e5\u67c4\u53ef\u4ee5\u5f15\u7528\u8be5\u4fe1\u53f7\u91cf\u3002</p> <p>\u6bcf\u4e2a\u8ba1\u6570\u4fe1\u53f7\u91cf\u90fd\u9700\u8981\u5c11\u91cf\u7684RAM\u6765\u4fdd\u5b58\u4fe1\u53f7\u91cf\u7684\u72b6\u6001\u3002\u5982\u679c\u4f7f\u7528xSemaphoreCreateCounting()\u521b\u5efa\u8ba1\u6570\u4fe1\u53f7\u91cf\uff0c\u90a3\u4e48\u5c06\u81ea\u52a8\u4eceFreeRTOS\u5806\u4e2d\u5206\u914d\u6240\u9700\u7684RAM\u3002\u5982\u679c\u4f7f\u7528xSemaphoreCreateCountingStatic()\u521b\u5efa\u8ba1\u6570\u4fe1\u53f7\u91cf\uff0c\u90a3\u4e48\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u5c06\u63d0\u4f9bRAM\uff0c\u8fd9\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u53c2\u6570\uff0c\u4f46\u5141\u8bb8\u5728\u7f16\u8bd1\u65f6\u9759\u6001\u5730\u5206\u914dRAM\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_359","title":"\u53c2\u6570","text":"<p>uxMaxCount</p> <ul> <li>\u53ef\u4ee5\u8fbe\u5230\u7684\u6700\u5927\u8ba1\u6570\u503c\u3002\u5f53\u4fe1\u53f7\u91cf\u8fbe\u5230\u8fd9\u4e2a\u503c\u65f6\uff0c\u5b83\u5c31\u4e0d\u518d\u88ab\u201c\u7ed9\u5b9a\u201d\u4e86\u3002</li> </ul> <p>uxInitialCount</p> <ul> <li>\u521b\u5efa\u4fe1\u53f7\u91cf\u65f6\u5206\u914d\u7ed9\u5b83\u7684\u8ba1\u6570\u503c\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_360","title":"\u8fd4\u56de\u503c","text":"<p>NULL</p> <ul> <li>\u5982\u679c\u56e0\u4e3a\u6ca1\u6709\u8db3\u591f\u7684\u5806\u5185\u5b58\u4f9bFreeRTOS\u5206\u914d\u4fe1\u53f7\u91cf\u6570\u636e\u7ed3\u6784\u800c\u4e0d\u80fd\u521b\u5efa\u4fe1\u53f7\u91cf\u65f6\u8fd4\u56de\u3002</li> </ul> <p>\u5176\u4ed6\u4efb\u4f55\u503c</p> <ul> <li>\u6210\u529f\u521b\u5efa\u4fe1\u53f7\u91cf\u3002\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u53e5\u67c4\uff0c\u521b\u5efa\u7684\u4fe1\u53f7\u91cf\u53ef\u4ee5\u901a\u8fc7\u5b83\u6765\u5f15\u7528\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_361","title":"\u63d0\u793a","text":"<p>\u76f4\u63a5\u5230\u4efb\u52a1\u901a\u77e5\u901a\u5e38\u63d0\u4f9b\u4e86\u6bd4\u8ba1\u6570\u4fe1\u53f7\u91cf\u66f4\u8f7b\u3001\u66f4\u5feb\u7684\u66ff\u4ee3\u65b9\u6cd5\u3002</p> <p>\u8ba1\u6570\u4fe1\u53f7\u91cf\u901a\u5e38\u7528\u4e8e\u4e24\u79cd\u60c5\u51b5:</p> <ol> <li>\u8ba1\u7b97\u4e8b\u4ef6</li> </ol> <p>\u5728\u8fd9\u4e2a\u4f7f\u7528\u573a\u666f\u4e2d\uff0c\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u5c06\u5728\u6bcf\u6b21\u4e8b\u4ef6\u53d1\u751f\u65f6'\u7ed9\u51fa'\u4fe1\u53f7\u91cf\uff0c\u800c\u5904\u7406\u7a0b\u5e8f\u4efb\u52a1\u5c06\u5728\u6bcf\u6b21\u5904\u7406\u4e8b\u4ef6\u65f6'\u83b7\u53d6'\u4fe1\u53f7\u91cf\u3002</p> <p>\u4fe1\u53f7\u91cf\u7684\u8ba1\u6570\u503c\u5c06\u5728\u6bcf\u6b21\u201c\u7ed9\u5b9a\u201d\u65f6\u9012\u589e\uff0c\u5728\u6bcf\u6b21\u201c\u83b7\u53d6\u201d\u65f6\u9012\u51cf\u3002\u56e0\u6b64\uff0c\u8ba1\u6570\u503c\u5c31\u662f\u5df2\u7ecf\u53d1\u751f\u7684\u4e8b\u4ef6\u6570\u548c\u5df2\u7ecf\u5904\u7406\u7684\u4e8b\u4ef6\u6570\u4e4b\u95f4\u7684\u5dee\u503c\u3002</p> <p>\u4e3a\u8ba1\u6570\u4e8b\u4ef6\u800c\u521b\u5efa\u7684\u4fe1\u53f7\u91cf\u7684\u521d\u59cb\u8ba1\u6570\u503c\u5e94\u8be5\u4e3a0\uff0c\u56e0\u4e3a\u5728\u521b\u5efa\u4fe1\u53f7\u91cf\u4e4b\u524d\u6ca1\u6709\u4e8b\u4ef6\u88ab\u8ba1\u6570\u3002</p> <ol> <li>\u8d44\u6e90\u7ba1\u7406</li> </ol> <p>\u5728\u8fd9\u4e2a\u4f7f\u7528\u573a\u666f\u4e2d\uff0c\u4fe1\u53f7\u91cf\u7684\u8ba1\u6570\u503c\u8868\u793a\u53ef\u7528\u8d44\u6e90\u7684\u6570\u91cf\u3002</p> <p>\u4e3a\u4e86\u83b7\u5f97\u5bf9\u8d44\u6e90\u7684\u63a7\u5236\uff0c\u4efb\u52a1\u5fc5\u987b\u9996\u5148\u6210\u529f\u5730\u201c\u83b7\u53d6\u201d\u4fe1\u53f7\u91cf\u3002\u201c\u83b7\u53d6\u201d\u4fe1\u53f7\u91cf\u7684\u64cd\u4f5c\u5c06\u51cf\u5c11\u4fe1\u53f7\u91cf\u7684\u8ba1\u6570\u503c\u3002\u5f53count\u503c\u8fbe\u52300\u65f6\uff0c\u6ca1\u6709\u66f4\u591a\u53ef\u7528\u7684\u8d44\u6e90\uff0c\u8fdb\u4e00\u6b65\u5c1d\u8bd5\u201c\u83b7\u53d6\u201d\u4fe1\u53f7\u91cf\u5c06\u5931\u8d25\u3002</p> <p>\u5f53\u4e00\u4e2a\u4efb\u52a1\u7528\u4e00\u4e2a\u8d44\u6e90\u5b8c\u6210\u65f6\uff0c\u5b83\u5fc5\u987b\u201c\u7ed9\u51fa\u201d\u4fe1\u53f7\u91cf\u3002\u201c\u7ed9\u51fa\u201d\u4fe1\u53f7\u91cf\u7684\u64cd\u4f5c\u5c06\u589e\u52a0\u4fe1\u53f7\u91cf\u7684\u8ba1\u6570\u503c\uff0c\u8868\u660e\u4e00\u4e2a\u8d44\u6e90\u662f\u53ef\u7528\u7684\uff0c\u5e76\u5141\u8bb8\u672a\u6765\u201c\u83b7\u53d6\u201d\u4fe1\u53f7\u91cf\u7684\u5c1d\u8bd5\u6210\u529f\u3002</p> <p>\u521b\u5efa\u7528\u4e8e\u7ba1\u7406\u8d44\u6e90\u7684\u4fe1\u53f7\u91cf\u7684\u521d\u59cb\u8ba1\u6570\u503c\u5e94\u8be5\u7b49\u4e8e\u53ef\u7528\u8d44\u6e90\u7684\u6570\u91cf\u3002</p> <p>configSUPPORT_DYNAMIC_ALLOCATION\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u8bbe\u7f6e\u4e3a1\uff0c\u6216\u8005\u4e0d\u8bbe\u7f6e\u4e3a\u672a\u5b9a\u4e49\uff0c\u4ee5\u4f7f\u8be5\u51fd\u6570\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_362","title":"\u793a\u4f8b","text":"<pre><code>void vATask( void * pvParameters ){ SemaphoreHandle_t xSemaphore;   /* The semaphore cannot be used before it is created using a call to    xSemaphoreCreateCounting(). The maximum value to which the semaphore can    count in this example case is set to 10, and the initial value assigned to  the count is set to 0. */   xSemaphore = xSemaphoreCreateCounting( 10, 0 ); if( xSemaphore != NULL )    {       /* The semaphore was created successfully. The semaphore can now be used. */    }}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#45-xsemaphorecreatecountingstatic","title":"4.5  xSemaphoreCreateCountingStatic()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201csemphr.h\u201dSemaphoreHandle_t xSemaphoreCreateCountingStatic( UBaseType_t uxMaxCount,                                                 UBaseType_t uxInitialCount,                                                 StaticSemaphore_t pxSempahoreBuffer );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_363","title":"\u6982\u8981","text":"<p>\u521b\u5efa\u4e00\u4e2a\u8ba1\u6570\u4fe1\u53f7\u91cf\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u53e5\u67c4\uff0c\u901a\u8fc7\u8be5\u53e5\u67c4\u53ef\u4ee5\u5f15\u7528\u8be5\u4fe1\u53f7\u91cf\u3002</p> <p>\u6bcf\u4e2a\u8ba1\u6570\u4fe1\u53f7\u91cf\u90fd\u9700\u8981\u5c11\u91cf\u7684RAM\u6765\u4fdd\u5b58\u4fe1\u53f7\u91cf\u7684\u72b6\u6001\u3002\u5982\u679c\u4f7f\u7528xSemaphoreCreateCounting()\u521b\u5efa\u8ba1\u6570\u4fe1\u53f7\u91cf\uff0c\u90a3\u4e48\u5c06\u81ea\u52a8\u4eceFreeRTOS\u5806\u4e2d\u5206\u914d\u6240\u9700\u7684RAM\u3002\u5982\u679c\u4f7f\u7528xSemaphoreCreateCountingStatic()\u521b\u5efa\u8ba1\u6570\u4fe1\u53f7\u91cf\uff0c\u90a3\u4e48\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u5c06\u63d0\u4f9bRAM\uff0c\u8fd9\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u53c2\u6570\uff0c\u4f46\u5141\u8bb8\u5728\u7f16\u8bd1\u65f6\u9759\u6001\u5730\u5206\u914dRAM\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_364","title":"\u53c2\u6570","text":"<p>uxMaxCount</p> <ul> <li>\u53ef\u4ee5\u8fbe\u5230\u7684\u6700\u5927\u8ba1\u6570\u503c\u3002\u5f53\u4fe1\u53f7\u91cf\u8fbe\u5230\u8fd9\u4e2a\u503c\u65f6\uff0c\u5b83\u5c31\u4e0d\u518d\u88ab\u201c\u7ed9\u5b9a\u201d\u4e86\u3002</li> </ul> <p>uxInitialCount</p> <ul> <li>\u521b\u5efa\u4fe1\u53f7\u91cf\u65f6\u5206\u914d\u7ed9\u5b83\u7684\u8ba1\u6570\u503c\u3002</li> </ul> <p>pxSemaphoreBuffer</p> <ul> <li>\u5fc5\u987b\u6307\u5411\u7c7b\u578b\u4e3aStaticSemaphore_t\u7684\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u5c06\u7528\u4e8e\u4fdd\u5b58\u4fe1\u53f7\u91cf\u7684\u72b6\u6001\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_365","title":"\u8fd4\u56de\u503c","text":"<p>NULL</p> <ul> <li>\u65e0\u6cd5\u521b\u5efa\u4fe1\u53f7\u91cf\uff0c\u56e0\u4e3apxSemaphoreBuffer\u4e3aNULL\u3002</li> </ul> <p>\u5176\u4ed6\u4efb\u4f55\u503c</p> <ul> <li>\u6210\u529f\u521b\u5efa\u4fe1\u53f7\u91cf\u3002\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u53e5\u67c4\uff0c\u521b\u5efa\u7684\u4fe1\u53f7\u91cf\u53ef\u4ee5\u901a\u8fc7\u5b83\u6765\u5f15\u7528\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_366","title":"\u63d0\u793a","text":"<p>\u4e0e4.4\u4e00\u81f4</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_367","title":"\u793a\u4f8b","text":"<pre><code>void vATask( void * pvParameters ){ SemaphoreHandle_t xSemaphoreHandle; StaticSemaphore_t xSemaphoreBuffer; /* Create a counting semaphore without using dynamic memory allocation. The maximum value to which the semaphore can count in this example case is set to   10, and the initial value assigned to the count is set to 0. */ xSemaphoreHandle = xSemaphoreCreateCountingStatic( 10, 0, &amp;xSemaphoreBuffer );  /* The pxSemaphoreBuffer parameter was not NULL, so the semaphore will have been    created and is now ready for use. */}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#46-xsemaphorecreatemutex","title":"4.6 xSemaphoreCreateMutex()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201csemphr.h\u201dSemaphoreHandle_t xSemaphoreCreateMutex( void );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_368","title":"\u6982\u8981","text":"<p>\u521b\u5efa\u4e00\u4e2a\u4e92\u65a5\u91cf\u7c7b\u578b\u4fe1\u53f7\u91cf\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u53ef\u4ee5\u5f15\u7528\u8be5\u4e92\u65a5\u91cf\u7684\u53e5\u67c4\u3002</p> <p>\u6bcf\u4e2a\u4e92\u65a5\u91cf\u7c7b\u578b\u7684\u4fe1\u53f7\u91cf\u90fd\u9700\u8981\u5c11\u91cf\u7684RAM\u6765\u4fdd\u5b58\u4fe1\u53f7\u91cf\u7684\u72b6\u6001\u3002\u5982\u679c\u4f7f\u7528xSemaphoreCreateMutex()\u521b\u5efa\u4e92\u65a5\u9501\uff0c\u5219\u4f1a\u81ea\u52a8\u4eceFreeRTOS\u5806\u4e2d\u5206\u914d\u6240\u9700\u7684RAM\u3002\u5982\u679c\u4f7f\u7528xSemaphoreCreateMutexStatic()\u521b\u5efa\u4e00\u4e2a\u4e92\u65a5\u9501\uff0c\u90a3\u4e48\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u5c06\u63d0\u4f9bRAM\uff0c\u8fd9\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u53c2\u6570\uff0c\u4f46\u5141\u8bb8\u5728\u7f16\u8bd1\u65f6\u9759\u6001\u5730\u5206\u914dRAM\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_369","title":"\u53c2\u6570","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_370","title":"\u8fd4\u56de\u503c","text":"<p>NULL</p> <ul> <li>\u5982\u679c\u56e0\u4e3a\u6ca1\u6709\u8db3\u591f\u7684\u5806\u5185\u5b58\u4f9bFreeRTOS\u5206\u914d\u4fe1\u53f7\u91cf\u6570\u636e\u7ed3\u6784\u800c\u4e0d\u80fd\u521b\u5efa\u4fe1\u53f7\u91cf\u65f6\u8fd4\u56de\u3002</li> </ul> <p>\u5176\u4ed6\u4efb\u4f55\u503c</p> <ul> <li>\u6210\u529f\u521b\u5efa\u4fe1\u53f7\u91cf\u3002\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u53e5\u67c4\uff0c\u521b\u5efa\u7684\u4fe1\u53f7\u91cf\u53ef\u4ee5\u901a\u8fc7\u5b83\u6765\u5f15\u7528\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_371","title":"\u63d0\u793a","text":"<p>\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u548c\u4e92\u65a5\u91cf\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u6709\u4e00\u4e9b\u7ec6\u5fae\u7684\u533a\u522b\u3002\u4e92\u65a5\u9501\u5305\u542b\u4f18\u5148\u7ea7\u7ee7\u627f\u673a\u5236\uff0c\u800c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u6ca1\u6709\u3002\u8fd9\u4f7f\u5f97\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u6210\u4e3a\u5b9e\u73b0\u540c\u6b65(\u5728\u4efb\u52a1\u4e4b\u95f4\u6216\u4efb\u52a1\u4e0e\u4e2d\u65ad\u4e4b\u95f4)\u7684\u66f4\u597d\u9009\u62e9\uff0c\u800c\u4e92\u65a5\u4f53\u5219\u6210\u4e3a\u5b9e\u73b0\u7b80\u5355\u4e92\u65a5\u7684\u66f4\u597d\u9009\u62e9\u3002</p> <p>\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u2014\u2014\u7528\u4e8e\u540c\u6b65\u7684\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u5728\u88ab\u6210\u529f\u201c\u83b7\u53d6\u201d(\u83b7\u5f97)\u540e\u4e0d\u9700\u8981\u201c\u8fd4\u56de\u201d\u3002\u4efb\u52a1\u540c\u6b65\u662f\u901a\u8fc7\u4e00\u4e2a\u4efb\u52a1\u6216\u4e2d\u65ad\u201c\u7ed9\u51fa\u201d\u4fe1\u53f7\u91cf\uff0c\u53e6\u4e00\u4e2a\u4efb\u52a1\u201c\u83b7\u53d6\u201d\u4fe1\u53f7\u91cf\u6765\u5b9e\u73b0\u7684(\u53c2\u89c1xsemaphoregvefromisr()\u6587\u6863)\u3002</p> <p>\u4e92\u65a5\u9501\u2014\u2014\u6301\u6709\u4e92\u65a5\u9501\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u5c06\u88ab\u63d0\u9ad8\uff0c\u5982\u679c\u53e6\u4e00\u4e2a\u4f18\u5148\u7ea7\u66f4\u9ad8\u7684\u4efb\u52a1\u8bd5\u56fe\u83b7\u53d6\u76f8\u540c\u7684\u4e92\u65a5\u9501\u3002\u5df2\u7ecf\u62e5\u6709\u4e92\u65a5\u9501\u7684\u4efb\u52a1\u88ab\u8ba4\u4e3a\u201c\u7ee7\u627f\u201d\u4e86\u8bd5\u56fe\u201c\u83b7\u53d6\u201d\u76f8\u540c\u4e92\u65a5\u9501\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002\u5f53\u4e92\u65a5\u9501\u88ab\u8fd4\u56de\u65f6\uff0c\u7ee7\u627f\u7684\u4f18\u5148\u7ea7\u5c06\u88ab\u53d6\u6d88(\u6301\u6709\u4e92\u65a5\u9501\u65f6\u7ee7\u627f\u7684\u4f18\u5148\u7ea7\u66f4\u9ad8\u7684\u4efb\u52a1\u5c06\u5728\u4e92\u65a5\u9501\u88ab\u8fd4\u56de\u65f6\u8fd4\u56de\u5176\u539f\u6765\u7684\u4f18\u5148\u7ea7)\u3002</p> <p>\u4e00\u4e2a\u83b7\u5f97\u4e92\u65a5\u9501\u7684\u4efb\u52a1\u5fc5\u987b\u5c06\u8be5\u4e92\u65a5\u9501\u8fd4\u56de\u2014\u2014\u5426\u5219\u5176\u4ed6\u4efb\u52a1\u5c06\u65e0\u6cd5\u83b7\u5f97\u76f8\u540c\u7684\u4e92\u65a5\u9501\u3002\u672c\u624b\u518c\u7684xSemaphoreTake()\u4e00\u8282\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e92\u65a5\u5bf9\u8c61\u7528\u6765\u5b9e\u73b0\u4e92\u65a5\u7684\u793a\u4f8b\u3002</p> <p>\u4e92\u65a5\u9501\u548c\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u90fd\u662f\u4f7f\u7528\u5177\u6709SemaphoreHandle_t\u7c7b\u578b\u7684\u53d8\u91cf\u5f15\u7528\u7684\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u4efb\u4f55\u63a5\u53d7\u8be5\u7c7b\u578b\u53c2\u6570\u7684API\u51fd\u6570\u4e2d\u4f7f\u7528\u3002</p> <p>\u5728FreeRTOSConfig.h\u4e2d\uff0cconfigSUPPORT_DYNAMIC_ALLOCATION\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\uff0c\u6216\u8005\u4fdd\u6301\u672a\u5b9a\u4e49\uff0c\u8fd9\u6837\u8fd9\u4e2a\u51fd\u6570\u624d\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_372","title":"\u793a\u4f8b","text":"<pre><code>SemaphoreHandle_t xSemaphore;void vATask( void * pvParameters ){    /* Attempt to create a mutex type semaphore. */ xSemaphore = xSemaphoreCreateMutex();   if( xSemaphore == NULL )    {       /* There was insufficient heap memory available for the mutex to be     created. */ }   else    {       /* The mutex can now be used. The handle of the created mutex will be       stored in the xSemaphore variable. */   }}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#47-xsemaphorecreatemutexstatic","title":"4.7 xSemaphoreCreateMutexStatic()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201csemphr.h\u201dSemaphoreHandle_t xSemaphoreCreateMutexStatic( StaticSemaphore_t *pxMutexBuffer );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_373","title":"\u6982\u8981","text":"<p>\u521b\u5efa\u4e00\u4e2a\u4e92\u65a5\u91cf\u7c7b\u578b\u4fe1\u53f7\u91cf\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u53ef\u4ee5\u5f15\u7528\u8be5\u4e92\u65a5\u91cf\u7684\u53e5\u67c4\u3002</p> <p>\u6bcf\u4e2a\u4e92\u65a5\u91cf\u7c7b\u578b\u7684\u4fe1\u53f7\u91cf\u90fd\u9700\u8981\u5c11\u91cf\u7684RAM\u6765\u4fdd\u5b58\u4fe1\u53f7\u91cf\u7684\u72b6\u6001\u3002\u5982\u679c\u4f7f\u7528xSemaphoreCreateMutex()\u521b\u5efa\u4e92\u65a5\u9501\uff0c\u5219\u4f1a\u81ea\u52a8\u4eceFreeRTOS\u5806\u4e2d\u5206\u914d\u6240\u9700\u7684RAM\u3002\u5982\u679c\u4f7f\u7528xSemaphoreCreateMutexStatic()\u521b\u5efa\u4e00\u4e2a\u4e92\u65a5\u9501\uff0c\u90a3\u4e48\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u5c06\u63d0\u4f9bRAM</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_374","title":"\u53c2\u6570","text":"<p>pxMutexBuffer</p> <ul> <li>\u5fc5\u987b\u6307\u5411\u7c7b\u578b\u4e3aStaticSemaphore_t\u7684\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u5c06\u7528\u4e8e\u4fdd\u5b58\u4e92\u65a5\u9501\u7684\u72b6\u6001\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_375","title":"\u8fd4\u56de\u503c","text":"<p>NULL</p> <ul> <li>\u5982\u679c\u56e0\u4e3a\u6ca1\u6709\u8db3\u591f\u7684\u5806\u5185\u5b58\u4f9bFreeRTOS\u5206\u914d\u4fe1\u53f7\u91cf\u6570\u636e\u7ed3\u6784\u800c\u4e0d\u80fd\u521b\u5efa\u4fe1\u53f7\u91cf\u65f6\u8fd4\u56de\u3002</li> </ul> <p>\u5176\u4ed6\u4efb\u4f55\u503c</p> <ul> <li>\u6210\u529f\u521b\u5efa\u4fe1\u53f7\u91cf\u3002\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u53e5\u67c4\uff0c\u521b\u5efa\u7684\u4fe1\u53f7\u91cf\u53ef\u4ee5\u901a\u8fc7\u5b83\u6765\u5f15\u7528\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_376","title":"\u63d0\u793a","text":"<p>\u4e0e4.6\u4e00\u81f4</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_377","title":"\u793a\u4f8b","text":"<pre><code>SemaphoreHandle_t xSemaphoreHandle;StaticSemaphore_t xSemaphoreBuffer;void vATask( void * pvParameters ){   /* Create a mutex without using any dynamic memory allocation. */   xSemaphoreHandle = xSemaphoreCreateMutexStatic( &amp;xSemaphoreBuffer );    /* The pxMutexBuffer parameter was not NULL so the mutex will have been created and is now ready for use. */}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#48-xsemaphorecreaterecursivemutex","title":"4.8  xSemaphoreCreateRecursiveMutex()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201csemphr.h\u201dSemaphoreHandle_t xSemaphoreCreateRecursiveMutex( void );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_378","title":"\u6982\u8981","text":"<p>\u521b\u5efa\u9012\u5f52\u4e92\u65a5\u91cf\u7c7b\u578b\u4fe1\u53f7\u91cf\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u53e5\u67c4\uff0c\u901a\u8fc7\u8be5\u53e5\u67c4\u53ef\u4ee5\u5f15\u7528\u9012\u5f52\u4e92\u65a5\u91cf\u3002</p> <p>\u6bcf\u4e2a\u9012\u5f52\u4e92\u65a5\u9501\u90fd\u9700\u8981\u5c11\u91cf\u7684RAM\u6765\u4fdd\u5b58\u4e92\u65a5\u9501\u7684\u72b6\u6001\u3002\u5982\u679c\u4f7f\u7528xSemaphoreCreateRecursiveMutex()\u521b\u5efa\u9012\u5f52\u4e92\u65a5\u9501\uff0c\u5219\u4f1a\u81ea\u52a8\u4eceFreeRTOS\u5806\u4e2d\u5206\u914d\u6240\u9700\u7684RAM\u3002\u5982\u679c\u4f7f\u7528xSemaphoreCreateRecursiveMutexStatic()\u521b\u5efa\u9012\u5f52\u4e92\u65a5\u9501\uff0c\u90a3\u4e48\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u5c06\u63d0\u4f9bRAM\uff0c\u8fd9\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u53c2\u6570\uff0c\u4f46\u5141\u8bb8\u5728\u7f16\u8bd1\u65f6\u9759\u6001\u5730\u5206\u914dRAM\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_379","title":"\u53c2\u6570","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_380","title":"\u8fd4\u56de\u503c","text":"<p>NULL</p> <ul> <li>\u5982\u679c\u56e0\u4e3a\u6ca1\u6709\u8db3\u591f\u7684\u5806\u5185\u5b58\u4f9bFreeRTOS\u5206\u914d\u4fe1\u53f7\u91cf\u6570\u636e\u7ed3\u6784\u800c\u4e0d\u80fd\u521b\u5efa\u4fe1\u53f7\u91cf\u65f6\u8fd4\u56de\u3002</li> </ul> <p>\u5176\u4ed6\u4efb\u4f55\u503c</p> <ul> <li>\u6210\u529f\u521b\u5efa\u4fe1\u53f7\u91cf\u3002\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u53e5\u67c4\uff0c\u521b\u5efa\u7684\u4fe1\u53f7\u91cf\u53ef\u4ee5\u901a\u8fc7\u5b83\u6765\u5f15\u7528\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_381","title":"\u63d0\u793a","text":"<p>configUSE_RECURSIVE_MUTEXES\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u4fbfxSemaphoreCreateRecursiveMutex() API\u51fd\u6570\u53ef\u7528\u3002</p> <p>\u4f7f\u7528xSemaphoreTakeRecursive()\u51fd\u6570\u201c\u83b7\u53d6\u201d\u9012\u5f52\u4e92\u65a5\uff0c\u4f7f\u7528xSemaphoreGiveRecursive()\u51fd\u6570\u201c\u7ed9\u51fa\u201d\u9012\u5f52\u4e92\u65a5\u3002xSemaphoreTake()\u548cxSemaphoreGive()\u51fd\u6570\u4e0d\u80fd\u4e0e\u9012\u5f52\u4e92\u65a5\u4f53\u4e00\u8d77\u4f7f\u7528\u3002</p> <p>\u5bf9xSemaphoreTakeRecursive()\u7684\u8c03\u7528\u53ef\u4ee5\u5d4c\u5957\u3002\u56e0\u6b64\uff0c\u4e00\u65e6\u4e00\u4e2a\u4efb\u52a1\u6210\u529f\u5730\u201c\u83b7\u53d6\u201d\u4e86\u4e00\u4e2a\u9012\u5f52\u4e92\u65a5\u9501\uff0c\u540c\u6837\u7684\u4efb\u52a1\u5bf9xSemaphoreTakeRecursive()\u7684\u8fdb\u4e00\u6b65\u8c03\u7528\u4e5f\u4f1a\u6210\u529f\u3002\u5fc5\u987b\u5bf9xsemaphoregverecursive()\u8fdb\u884c\u4e0e\u4e4b\u524d\u5bf9xSemaphoreTakeRecursive()\u8fdb\u884c\u76f8\u540c\u6570\u91cf\u7684\u8c03\u7528\uff0c\u624d\u80fd\u8ba9\u4e92\u65a5\u5bf9\u8c61\u5bf9\u4efb\u4f55\u5176\u4ed6\u4efb\u52a1\u53ef\u7528\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4e00\u4e2a\u4efb\u52a1\u6210\u529f\u5730\u9012\u5f52\u5730\u201c\u83b7\u53d6\u201d\u4e86\u76f8\u540c\u7684\u4e92\u65a5\u95015\u6b21\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4e92\u65a5\u9501\u5c06\u4e0d\u80fd\u88ab\u5176\u4ed6\u4efb\u4f55\u4efb\u52a1\u4f7f\u7528\uff0c\u76f4\u5230\u6210\u529f\u83b7\u53d6\u4e92\u65a5\u9501\u7684\u4efb\u52a1\u540c\u65f6\u5c06\u4e92\u65a5\u9501\u201c\u8fd4\u56de\u201d5\u6b21\u3002</p> <p>\u4e0e\u6807\u51c6\u4e92\u65a5\u9501\u4e00\u6837\uff0c\u9012\u5f52\u4e92\u65a5\u9501\u5728\u4efb\u4f55\u65f6\u5019\u90fd\u53ea\u80fd\u88ab\u5355\u4e2a\u4efb\u52a1\u6301\u6709\u6216\u83b7\u53d6\u3002</p> <p>\u6301\u6709\u9012\u5f52\u4e92\u65a5\u9501\u7684\u4efb\u52a1\uff0c\u5982\u679c\u53e6\u4e00\u4e2a\u5177\u6709\u66f4\u9ad8\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\u8bd5\u56fe\u83b7\u53d6\u76f8\u540c\u7684\u4e92\u65a5\u9501\uff0c\u5219\u8be5\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u5c06\u88ab\u63d0\u9ad8\u3002\u5df2\u7ecf\u62e5\u6709\u9012\u5f52\u4e92\u65a5\u9501\u7684\u4efb\u52a1\u88ab\u79f0\u4e3a\u201c\u7ee7\u627f\u201d\u8bd5\u56fe\u201c\u83b7\u53d6\u201d\u76f8\u540c\u4e92\u65a5\u9501\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002\u5f53\u4e92\u65a5\u9501\u88ab\u8fd4\u56de\u65f6\uff0c\u7ee7\u627f\u7684\u4f18\u5148\u7ea7\u5c06\u88ab\u53d6\u6d88(\u6301\u6709\u4e92\u65a5\u9501\u65f6\u7ee7\u627f\u7684\u4f18\u5148\u7ea7\u66f4\u9ad8\u7684\u4efb\u52a1\u5c06\u5728\u4e92\u65a5\u9501\u88ab\u8fd4\u56de\u65f6\u8fd4\u56de\u5176\u539f\u6765\u7684\u4f18\u5148\u7ea7)\u3002</p> <p>\u5728FreeRTOSConfig.h\u4e2d\uff0cconfigSUPPORT_DYNAMIC_ALLOCATION\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\uff0c\u6216\u8005\u4fdd\u6301\u672a\u5b9a\u4e49\uff0c\u8fd9\u6837\u8fd9\u4e2a\u51fd\u6570\u624d\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_382","title":"\u793a\u4f8b","text":"<pre><code>void vATask( void * pvParameters ){SemaphoreHandle_t xSemaphore;/* Recursive semaphores cannot be used before being explicitly created using acall to xSemaphoreCreateRecursiveMutex(). */xSemaphore = xSemaphoreCreateRecursiveMutex();if( xSemaphore != NULL ){/* The recursive mutex semaphore was created successfully and its handlewill be stored in xSemaphore variable. The recursive mutex can now beused. */}}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#49-xsemaphorecreaterecursivemutexstatic","title":"4.9 xSemaphoreCreateRecursiveMutexStatic()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201csemphr.h\u201dSemaphoreHandle_t xSemaphoreCreateRecursiveMutex( StaticSemaphore_t pxMutexBuffer );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_383","title":"\u6982\u8981","text":"<p>\u521b\u5efa\u9012\u5f52\u4e92\u65a5\u91cf\u7c7b\u578b\u4fe1\u53f7\u91cf\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u53e5\u67c4\uff0c\u901a\u8fc7\u8be5\u53e5\u67c4\u53ef\u4ee5\u5f15\u7528\u9012\u5f52\u4e92\u65a5\u91cf\u3002</p> <p>\u6bcf\u4e2a\u9012\u5f52\u4e92\u65a5\u9501\u90fd\u9700\u8981\u5c11\u91cf\u7684RAM\u6765\u4fdd\u5b58\u4e92\u65a5\u9501\u7684\u72b6\u6001\u3002\u5982\u679c\u4f7f\u7528xSemaphoreCreateRecursiveMutex()\u521b\u5efa\u9012\u5f52\u4e92\u65a5\u9501\uff0c\u5219\u4f1a\u81ea\u52a8\u4eceFreeRTOS\u5806\u4e2d\u5206\u914d\u6240\u9700\u7684RAM\u3002\u5982\u679c\u4f7f\u7528xSemaphoreCreateRecursiveMutexStatic()\u521b\u5efa\u9012\u5f52\u4e92\u65a5\u9501\uff0c\u90a3\u4e48\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u5c06\u63d0\u4f9bRAM\uff0c\u8fd9\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u53c2\u6570\uff0c\u4f46\u5141\u8bb8\u5728\u7f16\u8bd1\u65f6\u9759\u6001\u5730\u5206\u914dRAM\u3002</p> <p>pxMutexBuffer</p> <ul> <li>\u5fc5\u987b\u6307\u5411\u7c7b\u578b\u4e3aStaticSemaphore_t\u7684\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u5c06\u7528\u4e8e\u4fdd\u5b58\u4e92\u65a5\u9501\u7684\u72b6\u6001\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_384","title":"\u8fd4\u56de\u503c","text":"<p>NULL</p> <ul> <li>\u5982\u679c\u56e0\u4e3a\u6ca1\u6709\u8db3\u591f\u7684\u5806\u5185\u5b58\u4f9bFreeRTOS\u5206\u914d\u4fe1\u53f7\u91cf\u6570\u636e\u7ed3\u6784\u800c\u4e0d\u80fd\u521b\u5efa\u4fe1\u53f7\u91cf\u65f6\u8fd4\u56de\u3002</li> </ul> <p>\u5176\u4ed6\u4efb\u4f55\u503c</p> <ul> <li>\u6210\u529f\u521b\u5efa\u4fe1\u53f7\u91cf\u3002\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u53e5\u67c4\uff0c\u521b\u5efa\u7684\u4fe1\u53f7\u91cf\u53ef\u4ee5\u901a\u8fc7\u5b83\u6765\u5f15\u7528\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_385","title":"\u63d0\u793a","text":"<p>\u4e0e4.8\u4e00\u81f4</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_386","title":"\u793a\u4f8b","text":"<pre><code>void vATask( void * pvParameters ){SemaphoreHandle_t xSemaphoreHandle;StaticSemaphore_t xSemaphoreBuffer;/* Create a recursive mutex without using any dynamic memory allocation. */xSemaphoreHandle = xSemaphoreCreateRecursiveMutexStatic( &amp;xSemaphoreBuffer );/* The pxMutexBuffer parameter was not NULL so the recursive mutex will havebeen created and is now ready for use. */}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#410-vsemaphoredelete","title":"4.10  vSemaphoreDelete()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201csemphr.h\u201dvoid vSemaphoreDelete( SemaphoreHandle_t xSemaphore );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_387","title":"\u6982\u8981","text":"<p>\u5220\u9664\u5148\u524d\u4f7f\u7528vSemaphoreCreateBinary()\u3001xSemaphoreCreateCounting()\u3001xSemaphoreCreateRecursiveMutex()\u6216xSemaphoreCreateMutex()\u521b\u5efa\u7684\u4fe1\u53f7\u91cf\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_388","title":"\u53c2\u6570","text":"<p>xSemaphore</p> <ul> <li>\u6b63\u5728\u5220\u9664\u7684\u4fe1\u53f7\u91cf\u7684\u53e5\u67c4\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_389","title":"\u8fd4\u56de\u503c","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_390","title":"\u63d0\u793a","text":"<p>\u5982\u679c\u4efb\u52a1\u8bd5\u56fe\u83b7\u53d6\u4e00\u4e2a\u4e0d\u53ef\u7528\u7684\u4fe1\u53f7\u91cf\uff0c\u5b83\u4eec\u53ef\u4ee5\u9009\u62e9\u963b\u585e\u4e00\u4e2a\u4fe1\u53f7\u91cf(\u6709\u4e00\u4e2a\u53ef\u9009\u7684\u8d85\u65f6)\u3002\u5982\u679c\u4e00\u4e2a\u4fe1\u53f7\u91cf\u4e0a\u6709\u4efb\u4f55\u5f53\u524d\u963b\u585e\u7684\u4efb\u52a1\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4fe1\u53f7\u91cf\u4e0d\u80fd\u88ab\u5220\u9664\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#411-uxsemaphoregetcount","title":"4.11 uxSemaphoreGetCount()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d\n#include \u201csemphr.h\u201d\nUBaseType_t uxSemaphoreGetCount( SemaphoreHandle_t xSemaphore );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_391","title":"\u6982\u8981","text":"<p>\u8fd4\u56de\u4fe1\u53f7\u91cf\u7684\u8ba1\u6570\u3002</p> <p>\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u7684\u8ba1\u6570\u53ea\u80fd\u4e3a0\u62161\u3002\u8ba1\u6570\u4fe1\u53f7\u91cf\u7684\u8ba1\u6570\u53ef\u4ee5\u57280\u548c\u521b\u5efa\u8ba1\u6570\u4fe1\u53f7\u91cf\u65f6\u6307\u5b9a\u7684\u6700\u5927\u8ba1\u6570\u4e4b\u95f4\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_392","title":"\u53c2\u6570","text":"<p>xSemaphore </p> <ul> <li>\u6b63\u5728\u67e5\u8be2\u7684\u4fe1\u53f7\u91cf\u7684\u53e5\u67c4\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_393","title":"\u8fd4\u56de\u503c","text":"<p>\u5728xSemaphore\u53c2\u6570\u4e2d\u4f20\u9012\u7684\u53e5\u67c4\u6240\u5f15\u7528\u7684\u4fe1\u53f7\u91cf\u7684\u8ba1\u6570\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#412-xsemaphoregetmutexholder","title":"4.12  xSemaphoreGetMutexHolder()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201csemphr.h\u201dTaskHandle_t xSemaphoreGetMutexHolder( SemaphoreHandle_t xMutex );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_394","title":"\u6982\u8981","text":"<p>\u8fd4\u56de\u5305\u542b\u7531\u51fd\u6570\u53c2\u6570\u6307\u5b9a\u7684\u4e92\u65a5\u9501\u7684\u4efb\u52a1\u53e5\u67c4(\u5982\u679c\u6709)\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_395","title":"\u53c2\u6570","text":"<p>xMutex</p> <ul> <li>\u6b63\u5728\u67e5\u8be2\u7684\u4e92\u65a5\u9501\u53e5\u67c4\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_396","title":"\u8fd4\u56de\u503c","text":"<p>NULL(\u4e8c\u9009\u4e00)</p> <ul> <li>\u7531xMutex\u53c2\u6570\u6307\u5b9a\u7684\u4fe1\u53f7\u91cf\u4e0d\u662f\u4e92\u65a5\u91cf\u7c7b\u578b\u7684\u4fe1\u53f7\u91cf</li> <li>\u4fe1\u53f7\u91cf\u662f\u53ef\u7528\u7684\uff0c\u5e76\u4e14\u4e0d\u88ab\u4efb\u4f55\u4efb\u52a1\u5360\u7528\u3002</li> </ul> <p>\u5176\u4ed6\u4efb\u4f55\u503c</p> <ul> <li>\u4fdd\u5b58\u7531xMutex\u53c2\u6570\u6307\u5b9a\u7684\u4fe1\u53f7\u91cf\u7684\u4efb\u52a1\u53e5\u67c4\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_397","title":"\u63d0\u793a","text":"<p>xSemaphoreGetMutexHolder()\u53ef\u4ee5\u53ef\u9760\u5730\u7528\u4e8e\u786e\u5b9a\u8c03\u7528\u4efb\u52a1\u662f\u5426\u662f\u4e92\u65a5\u9501\u7684\u6301\u6709\u8005\uff0c\u4f46\u5982\u679c\u4e92\u65a5\u9501\u7531\u8c03\u7528\u4efb\u52a1\u4ee5\u5916\u7684\u4efb\u4f55\u4efb\u52a1\u6301\u6709\uff0c\u5219\u4e0d\u80fd\u53ef\u9760\u5730\u4f7f\u7528\u5b83\u3002\u8fd9\u662f\u56e0\u4e3a\u4e92\u65a5\u9501\u4fdd\u6301\u5668\u53ef\u80fd\u5728\u8c03\u7528\u4efb\u52a1\u8c03\u7528\u51fd\u6570\u548c\u8c03\u7528\u4efb\u52a1\u6d4b\u8bd5\u51fd\u6570\u8fd4\u56de\u503c\u4e4b\u95f4\u53d1\u751f\u53d8\u5316\u3002</p> <p>\u4e3a\u4e86xSemaphoreGetMutexHolder()\u53ef\u7528\uff0c\u5728FreeRTOSConfig.h\u4e2dconfigUSE_MUTEXES\u548cINCLUDE_xSemaphoreGetMutexHolder\u5fc5\u987b\u90fd\u8bbe\u7f6e\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#413-xsemaphoregive","title":"4.13  xSemaphoreGive()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201csemphr.h\u201dBaseType_t xSemaphoreGive( SemaphoreHandle_t xSemaphore );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_398","title":"\u6982\u8981","text":"<p>\u7ed9\u51fa(\u6216\u91ca\u653e)\u4e00\u4e2a\u5148\u524d\u901a\u8fc7\u8c03\u7528vSemaphoreCreateBinary()\u3001xSemaphoreCreateCounting()\u6216xSemaphoreCreateMutex()\u521b\u5efa\u7684\u4fe1\u53f7\u91cf\uff0c\u5e76\u4e14\u5df2\u7ecf\u6210\u529f\u201c\u83b7\u53d6\u201d\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_399","title":"\u53c2\u6570","text":"<p>xSemaphore</p> <ul> <li>\u4fe1\u53f7\u91cf\u88ab\u201c\u7ed9\u5b9a\u201d\u3002\u4fe1\u53f7\u91cf\u7531\u7c7b\u578b\u4e3aSemaphoreHandle_t\u7684\u53d8\u91cf\u5f15\u7528\uff0c\u5728\u4f7f\u7528\u4e4b\u524d\u5fc5\u987b\u663e\u5f0f\u5730\u521b\u5efa\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_400","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS</p> <ul> <li>\u4fe1\u53f7\u91cf' give '\u64cd\u4f5c\u6210\u529f\u3002</li> </ul> <p>pdFAIL</p> <ul> <li>\u4fe1\u53f7\u91cf' give '\u64cd\u4f5c\u6ca1\u6709\u6210\u529f\uff0c\u56e0\u4e3a\u8c03\u7528xsemaphoregve()\u7684\u4efb\u52a1\u4e0d\u662f\u4fe1\u53f7\u91cf\u6301\u6709\u8005\u3002\u4e00\u4e2a\u4efb\u52a1\u5fc5\u987b\u6210\u529f\u5730\u201c\u83b7\u53d6\u201d\u4e00\u4e2a\u4fe1\u53f7\u91cf\uff0c\u7136\u540e\u624d\u80fd\u6210\u529f\u5730\u201c\u8fd4\u56de\u201d\u5b83\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_401","title":"\u793a\u4f8b","text":"<pre><code>SemaphoreHandle_t xSemaphore = NULL;void vATask( void * pvParameters ){/* A semaphore is going to be used to guard a shared resource. In this case amutex type semaphore is created because it includes priority inheritancefunctionality. */xSemaphore = xSemaphoreCreateMutex();for( ;; ){if( xSemaphore != NULL ){if( xSemaphoreGive( xSemaphore ) != pdTRUE ){/* This call should fail because the semaphore has not yet been\u2018taken\u2019. */}/* Obtain the semaphore \u2013 don\u2019t block if the semaphore is notimmediately available (the specified block time is zero). */if( xSemaphoreTake( xSemaphore, 0 ) == pdPASS ){/* The semaphore was \u2018taken\u2019 successfully, so the resource it isguarding can be accessed safely. *//* ... *//* Access to the resource the semaphore is guarding is complete, sothe semaphore must be \u2018given\u2019 back. */if( xSemaphoreGive( xSemaphore ) != pdPASS ){/* This call should not fail because the calling task hasalready successfully \u2018taken\u2019 the semaphore. */}}}else{/* The semaphore was not created successfully because there is notenough FreeRTOS heap remaining for the semaphore data structures to beallocated. */}}}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#414-xsemaphoregivefromisr","title":"4.14  xSemaphoreGiveFromISR()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201csemphr.h\u201dBaseType_t xSemaphoreGiveFromISR( SemaphoreHandle_t xSemaphore,BaseType_t *pxHigherPriorityTaskWoken );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_402","title":"\u6982\u8981","text":"<p>\u53ef\u4ee5\u5728ISR\u4e2d\u4f7f\u7528\u7684xSemaphoreGive()\u7248\u672c\u3002\u4e0exSemaphoreGive()\u4e0d\u540c\uff0cxSemaphoreGiveFromISR()\u4e0d\u5141\u8bb8\u6307\u5b9a\u5757\u65f6\u95f4\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_403","title":"\u53c2\u6570","text":"<p>xSemaphore</p> <ul> <li>\u4fe1\u53f7\u91cf\u88ab\u201c\u7ed9\u5b9a\u201d\u3002</li> <li>\u4fe1\u53f7\u91cf\u7531\u7c7b\u578b\u4e3aSemaphoreHandle_t\u7684\u53d8\u91cf\u5f15\u7528\uff0c\u5728\u4f7f\u7528\u4e4b\u524d\u5fc5\u987b\u663e\u5f0f\u5730\u521b\u5efa\u3002</li> </ul> <p>*pxHigherPriorityTaskWoken</p> <ul> <li>\u4e00\u4e2a\u4fe1\u53f7\u91cf\u53ef\u80fd\u4f1a\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u4efb\u52a1\u963b\u585e\u5728\u5176\u4e0a\uff0c\u7b49\u5f85\u8be5\u4fe1\u53f7\u91cf\u53d8\u5f97\u53ef\u7528\u3002\u8c03\u7528xsemaphoregvefromisr()\u53ef\u4ee5\u4f7f\u4fe1\u53f7\u91cf\u53ef\u7528\uff0c\u4ece\u800c\u5bfc\u81f4\u8fd9\u6837\u7684\u4efb\u52a1\u79bb\u5f00Blocked\u72b6\u6001\u3002\u5982\u679c\u8c03\u7528xSemaphoreGiveFromISR()\u5bfc\u81f4\u4efb\u52a1\u79bb\u5f00Blocked\u72b6\u6001\uff0c\u5e76\u4e14\u672a\u963b\u585e\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u6216\u7b49\u4e8e\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1(\u88ab\u4e2d\u65ad\u7684\u4efb\u52a1)\uff0c\u90a3\u4e48\uff0c\u5728\u5185\u90e8\uff0cxSemaphoreGiveFromISR()\u5c06*pxHigherPriorityTaskWoken\u8bbe\u7f6e\u4e3apdTRUE\u3002</li> <li>\u5982\u679cxSemaphoreGiveFromISR()\u5c06\u8fd9\u4e2a\u503c\u8bbe\u7f6e\u4e3apdTRUE\uff0c\u90a3\u4e48\u5e94\u8be5\u5728\u4e2d\u65ad\u9000\u51fa\u4e4b\u524d\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u3002\u8fd9\u5c06\u786e\u4fdd\u4e2d\u65ad\u76f4\u63a5\u8fd4\u56de\u5230\u6700\u9ad8\u4f18\u5148\u7ea7\u7684\u5c31\u7eea\u72b6\u6001\u4efb\u52a1\u3002</li> <li>\u5728FreeRTOS V7.3.0\u4e2d\uff0cpxhigherprioritytaskawake\u662f\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3aNULL\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_404","title":"\u8fd4\u56de\u503c","text":"<p>pdTRUE</p> <ul> <li>\u5bf9xsemaphoregvefromisr()\u7684\u8c03\u7528\u6210\u529f\u3002</li> </ul> <p>errQUEUE_FULL</p> <ul> <li>\u5982\u679c\u4e00\u4e2a\u4fe1\u53f7\u91cf\u5df2\u7ecf\u53ef\u7528\uff0c\u5219\u4e0d\u80fd\u7ed9\u51fa\u5b83\uff0c\u5e76\u4e14xsemaphoregvefromisr()\u5c06\u8fd4\u56deerrQUEUE_FULL\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_405","title":"\u63d0\u793a","text":"<p>\u5728\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u8c03\u7528xsemaphoregvefromisr()\u53ef\u80fd\u4f1a\u5bfc\u81f4\u88ab\u963b\u585e\u7684\u4efb\u52a1\u7b49\u5f85\u63a5\u6536\u4fe1\u53f7\u91cf\u79bb\u5f00\u963b\u585e\u72b6\u6001\u3002\u5982\u679c\u8fd9\u6837\u4e00\u4e2a\u672a\u963b\u585e\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u6216\u7b49\u4e8e\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1(\u88ab\u4e2d\u65ad\u7684\u4efb\u52a1)\uff0c\u5219\u5e94\u8be5\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u3002\u4e0a\u4e0b\u6587\u5207\u6362\u5c06\u786e\u4fdd\u4e2d\u65ad\u76f4\u63a5\u8fd4\u56de\u5230\u6700\u9ad8\u4f18\u5148\u7ea7\u7684\u5c31\u7eea\u72b6\u6001\u4efb\u52a1\u3002</p> <p>\u4e0exSemaphoreGive() API\u51fd\u6570\u4e0d\u540c\uff0cxSemaphoreGiveFromISR()\u672c\u8eab\u4e0d\u4f1a\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u3002\u76f8\u53cd\uff0c\u5b83\u5c06\u6307\u793a\u662f\u5426\u9700\u8981\u8fdb\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u3002</p> <p>xsemaphoregvefromisr()\u4e0d\u80fd\u5728\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u4e4b\u524d\u8c03\u7528\u3002\u56e0\u6b64\uff0c\u5728\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u4e4b\u524d\uff0c\u5fc5\u987b\u4e0d\u5141\u8bb8\u8c03\u7528xSemaphoreGiveFromISR()\u7684\u4e2d\u65ad\u6267\u884c\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_406","title":"\u793a\u4f8b","text":"<pre><code>#define LONG_TIME 0xffff#define TICKS_TO_WAIT 10SemaphoreHandle_t xSemaphore = NULL;/* Define a task that performs an action each time an interrupt occurs. TheInterrupt processing is deferred to this task. The task is synchronized with theinterrupt using a semaphore. */void vATask( void * pvParameters ){/* It is assumed the semaphore has already been created outside of this task. */for( ;; ){/* Wait for the next event. */if( xSemaphoreTake( xSemaphore, portMAX_DELAY ) == pdTRUE ){/* The event has occurred, process it here. */.../* Processing is complete, return to wait for the next event. */}}}/* An ISR that defers its processing to a task by using a semaphore to indicatewhen events that require processing have occurred. */void vISR( void * pvParameters ){BaseType_t xHigherPriorityTaskWoken = pdFALSE;/* The event has occurred, use the semaphore to unblock the task so the taskcan process the event. */xSemaphoreGiveFromISR( xSemaphore, &amp;xHigherPriorityTaskWoken );/* Clear the interrupt here. *//* Now the task has been unblocked a context switch should be performed ifxHigherPriorityTaskWoken is equal to pdTRUE. NOTE: The syntax required to performa context switch from an ISR varies from port to port, and from compiler tocompiler. Check the web documentation and examples for the port being used tofind the syntax required for your application. */portYIELD_FROM_ISR( xHigherPriorityTaskWoken );}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#415-xsemaphoregiverecursive","title":"4.15   xSemaphoreGiveRecursive()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201csemphr.h\u201dBaseType_t xSemaphoreGiveRecursive( SemaphoreHandle_t xMutex );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_407","title":"\u6982\u8981","text":"<p>'\u7ed9\u51fa'(\u6216\u91ca\u653e)\u4e00\u4e2a\u5148\u524d\u4f7f\u7528xSemaphoreCreateRecursiveMutex()\u521b\u5efa\u7684\u9012\u5f52\u4e92\u65a5\u91cf\u7c7b\u578b\u4fe1\u53f7\u91cf\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_408","title":"\u53c2\u6570","text":"<p>xMutex</p> <ul> <li>\u4fe1\u53f7\u91cf\u88ab\u201c\u7ed9\u5b9a\u201d\u3002\u4fe1\u53f7\u91cf\u7531\u7c7b\u578b\u4e3aSemaphoreHandle_t\u7684\u53d8\u91cf\u5f15\u7528\uff0c\u5728\u4f7f\u7528\u4e4b\u524d\u5fc5\u987b\u663e\u5f0f\u5730\u521b\u5efa\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_409","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS</p> <ul> <li>\u5bf9xSemaphoreGiveRecursive()\u7684\u8c03\u7528\u6210\u529f\u3002</li> </ul> <p>pdFAIL</p> <ul> <li>\u5bf9xsemaphoregiverrecursive()\u7684\u8c03\u7528\u5931\u8d25\uff0c\u56e0\u4e3a\u8c03\u7528\u4efb\u52a1\u4e0d\u662f\u4e92\u65a5\u9501\u7684\u6301\u6709\u8005\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_410","title":"\u63d0\u793a","text":"<p>\u4f7f\u7528xSemaphoreTakeRecursive()\u51fd\u6570\u201c\u83b7\u53d6\u201d\u9012\u5f52\u4e92\u65a5\uff0c\u4f7f\u7528xSemaphoreGiveRecursive()\u51fd\u6570\u201c\u7ed9\u51fa\u201d\u9012\u5f52\u4e92\u65a5\u3002xSemaphoreTake()\u548cxSemaphoreGive()\u51fd\u6570\u4e0d\u80fd\u4e0e\u9012\u5f52\u4e92\u65a5\u4f53\u4e00\u8d77\u4f7f\u7528\u3002</p> <p>\u5bf9xSemaphoreTakeRecursive()\u7684\u8c03\u7528\u53ef\u4ee5\u5d4c\u5957\u3002\u56e0\u6b64\uff0c\u4e00\u65e6\u4e00\u4e2a\u4efb\u52a1\u6210\u529f\u5730\u201c\u83b7\u53d6\u201d\u4e86\u4e00\u4e2a\u9012\u5f52\u4e92\u65a5\u9501\uff0c\u540c\u6837\u7684\u4efb\u52a1\u5bf9xSemaphoreTakeRecursive()\u7684\u8fdb\u4e00\u6b65\u8c03\u7528\u4e5f\u4f1a\u6210\u529f\u3002\u5fc5\u987b\u5bf9xsemaphoregverecursive()\u8fdb\u884c\u4e0e\u4e4b\u524d\u5bf9xSemaphoreTakeRecursive()\u8fdb\u884c\u76f8\u540c\u6570\u91cf\u7684\u8c03\u7528\uff0c\u624d\u80fd\u8ba9\u4e92\u65a5\u5bf9\u8c61\u5bf9\u4efb\u4f55\u5176\u4ed6\u4efb\u52a1\u53ef\u7528\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4e00\u4e2a\u4efb\u52a1\u6210\u529f\u5730\u9012\u5f52\u5730\u201c\u83b7\u53d6\u201d\u76f8\u540c\u7684\u4e92\u65a5\u95015\u6b21\uff0c\u90a3\u4e48\u8be5\u4e92\u65a5\u9501\u5c06\u4e0d\u80fd\u88ab\u5176\u4ed6\u4efb\u52a1\u4f7f\u7528\u4efb\u52a1\uff0c\u76f4\u5230\u6210\u529f\u83b7\u5f97\u4e92\u65a5\u9501\u7684\u4efb\u52a1\u4e5f\u4f1a\u5c06\u4e92\u65a5\u9501\u201c\u8fd4\u56de\u201d\u4e94\u6b21\u3002</p> <p>xSemaphoreGiveRecursive()\u53ea\u80fd\u4ece\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1\u4e2d\u8c03\u7528\uff0c\u56e0\u6b64\u5728\u8c03\u5ea6\u7a0b\u5e8f\u5904\u4e8e\u521d\u59cb\u5316\u72b6\u6001\u65f6(\u5728\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u4e4b\u524d)\u4e0d\u80fd\u8c03\u7528\u5b83\u3002</p> <p>xSemaphoreGiveRecursive()\u4e0d\u80fd\u5728\u4e34\u754c\u533a\u6bb5\u5185\u6216\u8c03\u5ea6\u7a0b\u5e8f\u6302\u8d77\u65f6\u8c03\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_411","title":"\u793a\u4f8b","text":"<pre><code>/* A task that creates a recursive mutex. */void vATask( void * pvParameters ){/* Recursive mutexes cannot be used before being explicitly created using a callto xSemaphoreCreateRecursiveMutex(). */xMutex = xSemaphoreCreateRecursiveMutex();/* Rest of task code goes here. */for( ;; ){}}/* A function (called by a task) that uses the mutex. */void vAFunction( void ){/* ... Do other things. */if( xMutex != NULL ){/* See if the mutex can be obtained. If the mutex is not available wait 10ticks to see if it becomes free. */if( xSemaphoreTakeRecursive( xMutex, 10 ) == pdTRUE ){/* The mutex was successfully \u2018taken\u2019. */.../* For some reason, due to the nature of the code, further calls toxSemaphoreTakeRecursive() are made on the same mutex. In real code thesewould not be just sequential calls, as that would serve no purpose.Instead, the calls are likely to be buried inside a more complex callstructure, for example in a TCP/IP stack.*/xSemaphoreTakeRecursive( xMutex, ( TickType_t ) 10 );xSemaphoreTakeRecursive( xMutex, ( TickType_t ) 10 );/* The mutex has now been \u2018taken\u2019 three times, so will not be availableto another task until it has also been given back three times. Again itis unlikely that real code would have these calls sequentially, butinstead buried in a more complex call structure. This is just forillustrative purposes. */xSemaphoreGiveRecursive( xMutex );xSemaphoreGiveRecursive( xMutex );xSemaphoreGiveRecursive( xMutex );/* Now the mutex can be taken by other tasks. */}else{/* The mutex was not successfully \u2018taken\u2019. */}}}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#416-xsemaphoretake","title":"4.16 xSemaphoreTake()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201csemphr.h\u201dBaseType_t xSemaphoreTake( SemaphoreHandle_t xSemaphore, TickType_t xTicksToWait );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_412","title":"\u6982\u8981","text":"<p>'Takse'(\u6216obtains)\u5148\u524d\u901a\u8fc7\u8c03\u7528vSemaphoreCreateBinary()\u3001xSemaphoreCreateCounting()\u6216xSemaphoreCreateMutex()\u521b\u5efa\u7684\u4fe1\u53f7\u91cf\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_413","title":"\u53c2\u6570","text":"<p>xSemaphore</p> <ul> <li>\u4fe1\u53f7\u91cf\u6b63\u5728\u88ab\u201c\u83b7\u53d6\u201d\u3002\u4fe1\u53f7\u91cf\u7531\u7c7b\u578b\u4e3aSemaphoreHandle_t\u7684\u53d8\u91cf\u5f15\u7528\uff0c\u5728\u4f7f\u7528\u4e4b\u524d\u5fc5\u987b\u663e\u5f0f\u5730\u521b\u5efa\u3002</li> </ul> <p>xTicksToWait</p> <ul> <li>\u5982\u679c\u4fe1\u53f7\u91cf\u4e0d\u80fd\u7acb\u5373\u53ef\u7528\uff0c\u5219\u4efb\u52a1\u5e94\u8be5\u4fdd\u6301\u5728Blocked\u72b6\u6001\u7b49\u5f85\u4fe1\u53f7\u91cf\u53ef\u7528\u7684\u6700\u957f\u65f6\u95f4\u3002</li> <li>\u5982\u679cxTicksToWait\u4e3a\u96f6\uff0c\u90a3\u4e48\u5982\u679c\u4fe1\u53f7\u91cf\u4e0d\u53ef\u7528\uff0cxSemaphoreTake()\u5c06\u7acb\u5373\u8fd4\u56de\u3002</li> <li>\u5757\u65f6\u95f4\u4ee5\u6ef4\u7b54\u5468\u671f\u6307\u5b9a\uff0c\u56e0\u6b64\u5b83\u8868\u793a\u7684\u7edd\u5bf9\u65f6\u95f4\u53d6\u51b3\u4e8e\u6ef4\u7b54\u9891\u7387\u3002\u53ef\u4ee5\u4f7f\u7528pdMS_TO_TICKS()\u5b8f\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5ticks\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u3002</li> <li>\u5982\u679c\u5728FreeRTOSConfig.h\u4e2d\u5c06INCLUDE_vTaskSuspend\u8bbe\u7f6e\u4e3a1\uff0c\u5c06xTicksToWait\u8bbe\u7f6e\u4e3aportMAX_DELAY\u4f1a\u5bfc\u81f4\u4efb\u52a1\u65e0\u9650\u671f\u5730\u7b49\u5f85(\u6ca1\u6709\u8d85\u65f6)\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_414","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS</p> <ul> <li>\u4ec5\u5f53\u5bf9xSemaphoreTake()\u7684\u8c03\u7528\u6210\u529f\u83b7\u53d6\u4fe1\u53f7\u91cf\u65f6\u8fd4\u56de\u3002</li> <li>\u5982\u679c\u6307\u5b9a\u4e86\u4e00\u4e2a\u5757\u65f6\u95f4(xTicksToWait\u4e0d\u4e3a\u96f6)\uff0c\u90a3\u4e48\u6709\u53ef\u80fd\u8c03\u7528\u4efb\u52a1\u88ab\u653e\u7f6e\u5230Blocked\u72b6\u6001\uff0c\u4ee5\u4fbf\u5728\u4fe1\u53f7\u91cf\u4e0d\u80fd\u7acb\u5373\u53ef\u7528\u7684\u60c5\u51b5\u4e0b\u7b49\u5f85\u4fe1\u53f7\u91cf\uff0c\u4f46\u4fe1\u53f7\u91cf\u5728\u5757\u65f6\u95f4\u8fc7\u671f\u4e4b\u524d\u5df2\u7ecf\u53ef\u7528\u3002</li> </ul> <p>pdFAIL</p> <ul> <li>\u5982\u679c\u5bf9xSemaphoreTake()\u7684\u8c03\u7528\u6ca1\u6709\u6210\u529f\u83b7\u5f97\u4fe1\u53f7\u91cf\uff0c\u5219\u8fd4\u56de\u3002</li> <li>\u5982\u679c\u6307\u5b9a\u4e86\u4e00\u4e2a\u5757\u65f6\u95f4(xTicksToWait\u4e0d\u4e3a\u96f6)\uff0c\u90a3\u4e48\u8c03\u7528\u4efb\u52a1\u5c06\u88ab\u653e\u7f6e\u5230Blocked\u72b6\u6001\uff0c\u7b49\u5f85\u4fe1\u53f7\u91cf\u53ef\u7528\uff0c\u4f46\u5728\u6b64\u4e4b\u524d\u5757\u65f6\u95f4\u5df2\u7ecf\u8fc7\u671f\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_415","title":"\u63d0\u793a","text":"<p>xSemaphoreTake()\u53ea\u80fd\u4ece\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1\u4e2d\u8c03\u7528\uff0c\u56e0\u6b64\u5728\u8c03\u5ea6\u7a0b\u5e8f\u5904\u4e8e\u521d\u59cb\u5316\u72b6\u6001\u65f6(\u5728\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u4e4b\u524d)\u4e0d\u80fd\u8c03\u7528\u5b83\u3002</p> <p>xSemaphoreTake()\u4e0d\u80fd\u5728\u5173\u952e\u6bb5\u5185\u6216\u8c03\u5ea6\u7a0b\u5e8f\u6302\u8d77\u65f6\u8c03\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_416","title":"\u793a\u4f8b","text":"<pre><code>SemaphoreHandle_t xSemaphore = NULL;/* A task that creates a mutex type semaphore. */void vATask( void * pvParameters ){/* A semaphore is going to be used to guard a shared resource. In this casea mutex type semaphore is created because it includes priority inheritancefunctionality. */xSemaphore = xSemaphoreCreateMutex();/* The rest of the task code goes here. */for( ;; ){/* ... */}}/* A task that uses the mutex. */void vAnotherTask( void * pvParameters ){for( ;; ){/* ... Do other things. */if( xSemaphore != NULL ){/* See if the mutex can be obtained. If the mutex is not availablewait 10 ticks to see if it becomes free. */if( xSemaphoreTake( xSemaphore, 10 ) == pdTRUE ){/* The mutex was successfully obtained so the shared resource can beaccessed safely. *//* ... *//* Access to the shared resource is complete, so the mutex isreturned. */xSemaphoreGive( xSemaphore );}else{/* The mutex could not be obtained even after waiting 10 ticks, sothe shared resource cannot be accessed. */}}}}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#417-xsemaphoretakefromisr","title":"4.17 xSemaphoreTakeFromISR()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cqueue.h\u201dBaseType_t xSemaphoreTakeFromISR( SemaphoreHandle_t xSemaphore,signed BaseType_t *pxHigherPriorityTaskWoken );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_417","title":"\u6982\u8981","text":"<p>\u53ef\u4ee5\u4eceISR\u8c03\u7528\u7684xSemaphoreTake()\u7684\u4e00\u4e2a\u7248\u672c\u3002\u4e0exSemaphoreTake()\u4e0d\u540c\uff0cxSemaphoreTakeFromISR()\u4e0d\u5141\u8bb8\u6307\u5b9a\u5757\u65f6\u95f4\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_418","title":"\u53c2\u6570","text":"<p>xSemaphore</p> <ul> <li>\u4fe1\u53f7\u91cf\u6b63\u5728\u88ab\u201c\u83b7\u53d6\u201d\u3002\u4fe1\u53f7\u91cf\u7531\u7c7b\u578b\u4e3aSemaphoreHandle_t\u7684\u53d8\u91cf\u5f15\u7528\uff0c\u5728\u4f7f\u7528\u4e4b\u524d\u5fc5\u987b\u663e\u5f0f\u5730\u521b\u5efa\u3002</li> </ul> <p>pxHigherPriorityTaskWoken</p> <ul> <li>\u6709\u53ef\u80fd(\u867d\u7136\u4e0d\u592a\u53ef\u80fd\uff0c\u53d6\u51b3\u4e8e\u4fe1\u53f7\u91cf\u7684\u7c7b\u578b)\u4e00\u4e2a\u4fe1\u53f7\u91cf\u4e0a\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u963b\u585e\u7684\u4efb\u52a1\u7b49\u5f85\u4fe1\u53f7\u91cf\u3002\u8c03\u7528xSemaphoreTakeFromISR()\u5c06\u4f7f\u4e00\u4e2a\u7b49\u5f85\u4fe1\u53f7\u91cf\u91ca\u653e\u7684\u88ab\u963b\u585e\u7684\u4efb\u52a1\u79bb\u5f00\u963b\u585e\u72b6\u6001\u3002\u5982\u679c\u8c03\u7528API\u51fd\u6570\u5bfc\u81f4\u4e00\u4e2a\u4efb\u52a1\u79bb\u5f00\u963b\u585e\u72b6\u6001\uff0c\u5e76\u4e14\u672a\u963b\u585e\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u7b49\u4e8e\u6216\u9ad8\u4e8e\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1(\u88ab\u4e2d\u65ad\u7684\u4efb\u52a1)\uff0c\u90a3\u4e48\uff0c\u5728\u5185\u90e8\uff0cAPI\u51fd\u6570\u5c06* pxhigherprioritytask\u53eb\u9192\u8bbe\u7f6e\u4e3apdTRUE\u3002</li> <li>\u5982\u679cxSemaphoreTakeFromISR()\u5c06* pxhigherprioritytaskwork\u8bbe\u7f6e\u4e3apdTRUE\uff0c\u90a3\u4e48\u5e94\u8be5\u5728\u4e2d\u65ad\u9000\u51fa\u4e4b\u524d\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u3002\u8fd9\u5c06\u786e\u4fdd\u4e2d\u65ad\u76f4\u63a5\u8fd4\u56de\u5230\u6700\u9ad8\u4f18\u5148\u7ea7\u7684\u5c31\u7eea\u72b6\u6001\u4efb\u52a1\u3002\u8be5\u673a\u5236\u4e0exQueueReceiveFromISR()\u51fd\u6570\u4e2d\u4f7f\u7528\u7684\u673a\u5236\u76f8\u540c\uff0c\u8bfb\u8005\u53ef\u4ee5\u53c2\u8003xQueueReceiveFromISR()\u6587\u6863\u8fdb\u884c\u8fdb\u4e00\u6b65\u89e3\u91ca\u3002</li> <li>\u5728FreeRTOS V7.3.0\u4e2d\uff0cpxhigherprioritytaskawake\u662f\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3aNULL\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_419","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS</p> <ul> <li>\u5df2\u6210\u529f\u83b7\u53d6(\u83b7\u53d6)\u4fe1\u53f7\u91cf\u3002</li> </ul> <p>pdFAIL</p> <ul> <li>\u7531\u4e8e\u4fe1\u53f7\u91cf\u4e0d\u53ef\u7528\uff0c\u6240\u4ee5\u6ca1\u6709\u6210\u529f\u83b7\u53d6\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#418-xsemaphoretakerecursive","title":"4.18 xSemaphoreTakeRecursive()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201csemphr.h\u201dBaseType_t xSemaphoreTakeRecursive( SemaphoreHandle_t xMutex,TickType_t xTicksToWait );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_420","title":"\u6982\u8981","text":"<p>\u83b7\u53d6'(\u6216\u83b7\u53d6)\u5148\u524d\u4f7f\u7528xSemaphoreCreateRecursiveMutex()\u521b\u5efa\u7684\u9012\u5f52\u4e92\u65a5\u91cf\u7c7b\u578b\u4fe1\u53f7\u91cf\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_421","title":"\u53c2\u6570","text":"<p>xMutex</p> <ul> <li>\u4fe1\u53f7\u91cf\u6b63\u5728\u88ab\u201c\u83b7\u53d6\u201d\u3002\u4fe1\u53f7\u91cf\u7531\u7c7b\u578b\u4e3aSemaphoreHandle_t\u7684\u53d8\u91cf\u5f15\u7528\uff0c\u5728\u4f7f\u7528\u4e4b\u524d\u5fc5\u987b\u663e\u5f0f\u5730\u521b\u5efa\u3002</li> </ul> <p>xTicksToWait</p> <ul> <li>\u5982\u679c\u4fe1\u53f7\u91cf\u4e0d\u80fd\u7acb\u5373\u53ef\u7528\uff0c\u5219\u4efb\u52a1\u5e94\u8be5\u4fdd\u6301\u5728Blocked\u72b6\u6001\u7b49\u5f85\u4fe1\u53f7\u91cf\u53ef\u7528\u7684\u6700\u957f\u65f6\u95f4\u3002</li> <li>\u5982\u679cxTicksToWait\u4e3a\u96f6\uff0c\u90a3\u4e48\u5982\u679c\u4fe1\u53f7\u91cf\u4e0d\u53ef\u7528\uff0cxSemaphoreTakeRecursive()\u5c06\u7acb\u5373\u8fd4\u56de\u3002</li> <li>\u5757\u65f6\u95f4\u4ee5\u6ef4\u7b54\u5468\u671f\u6307\u5b9a\uff0c\u56e0\u6b64\u5b83\u8868\u793a\u7684\u7edd\u5bf9\u65f6\u95f4\u53d6\u51b3\u4e8e\u6ef4\u7b54\u9891\u7387\u3002\u53ef\u4ee5\u4f7f\u7528pdMS_TO_TICKS()\u5b8f\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5ticks\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u3002</li> <li>\u5982\u679c\u5728FreeRTOSConfig.h\u4e2d\u5c06INCLUDE_vTaskSuspend\u8bbe\u7f6e\u4e3a1\uff0c\u5c06xTicksToWait\u8bbe\u7f6e\u4e3aportMAX_DELAY\u4f1a\u5bfc\u81f4\u4efb\u52a1\u65e0\u9650\u671f\u5730\u7b49\u5f85(\u6ca1\u6709\u8d85\u65f6)\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_422","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS</p> <ul> <li>\u4ec5\u5f53\u5bf9xSemaphoreTakeRecursive()\u7684\u8c03\u7528\u6210\u529f\u83b7\u5f97\u4fe1\u53f7\u91cf\u65f6\u8fd4\u56de\u3002</li> <li>\u5982\u679c\u6307\u5b9a\u4e86\u4e00\u4e2a\u5757\u65f6\u95f4(xTicksToWait\u4e0d\u4e3a\u96f6)\uff0c\u90a3\u4e48\u6709\u53ef\u80fd\u8c03\u7528\u4efb\u52a1\u88ab\u653e\u7f6e\u5230Blocked\u72b6\u6001\uff0c\u4ee5\u4fbf\u5728\u4fe1\u53f7\u91cf\u4e0d\u80fd\u7acb\u5373\u53ef\u7528\u7684\u60c5\u51b5\u4e0b\u7b49\u5f85\u4fe1\u53f7\u91cf\uff0c\u4f46\u4fe1\u53f7\u91cf\u5728\u5757\u65f6\u95f4\u8fc7\u671f\u4e4b\u524d\u5df2\u7ecf\u53ef\u7528\u3002</li> </ul> <p>pdFAIL</p> <ul> <li>\u5982\u679c\u5bf9xSemaphoreTakeRecursive()\u7684\u8c03\u7528\u6ca1\u6709\u6210\u529f\u83b7\u5f97\u4fe1\u53f7\u91cf\uff0c\u5219\u8fd4\u56de\u3002</li> <li>\u5982\u679c\u6307\u5b9a\u4e86\u4e00\u4e2a\u5757\u65f6\u95f4(xTicksToWait\u4e0d\u4e3a\u96f6)\uff0c\u90a3\u4e48\u8c03\u7528\u4efb\u52a1\u5c06\u88ab\u653e\u7f6e\u5230Blocked\u72b6\u6001\uff0c\u7b49\u5f85\u4fe1\u53f7\u91cf\u53ef\u7528\uff0c\u4f46\u5728\u6b64\u4e4b\u524d\u5757\u65f6\u95f4\u5df2\u7ecf\u8fc7\u671f\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_423","title":"\u63d0\u793a","text":"<p>\u4f7f\u7528xSemaphoreTakeRecursive()\u51fd\u6570\u201c\u83b7\u53d6\u201d\u9012\u5f52\u4e92\u65a5\uff0c\u4f7f\u7528xSemaphoreGiveRecursive()\u51fd\u6570\u201c\u7ed9\u51fa\u201d\u9012\u5f52\u4e92\u65a5\u3002xSemaphoreTake()\u548cxSemaphoreGive()\u51fd\u6570\u4e0d\u80fd\u4e0e\u9012\u5f52\u4e92\u65a5\u4f53\u4e00\u8d77\u4f7f\u7528\u3002</p> <p>\u5bf9xSemaphoreTakeRecursive()\u7684\u8c03\u7528\u53ef\u4ee5\u5d4c\u5957\u3002\u56e0\u6b64\uff0c\u4e00\u65e6\u4e00\u4e2a\u4efb\u52a1\u6210\u529f\u5730\u201c\u83b7\u53d6\u201d\u4e86\u4e00\u4e2a\u9012\u5f52\u4e92\u65a5\u9501\uff0c\u540c\u6837\u7684\u4efb\u52a1\u5bf9xSemaphoreTakeRecursive()\u7684\u8fdb\u4e00\u6b65\u8c03\u7528\u4e5f\u4f1a\u6210\u529f\u3002\u5fc5\u987b\u5bf9xsemaphoregverecursive()\u8fdb\u884c\u4e0e\u4e4b\u524d\u5bf9xSemaphoreTakeRecursive()\u8fdb\u884c\u76f8\u540c\u6570\u91cf\u7684\u8c03\u7528\uff0c\u624d\u80fd\u8ba9\u4e92\u65a5\u5bf9\u8c61\u5bf9\u4efb\u4f55\u5176\u4ed6\u4efb\u52a1\u53ef\u7528\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4e00\u4e2a\u4efb\u52a1\u6210\u529f\u5730\u9012\u5f52\u5730\u201c\u83b7\u53d6\u201d\u4e86\u76f8\u540c\u7684\u4e92\u65a5\u95015\u6b21\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4e92\u65a5\u9501\u5c06\u4e0d\u80fd\u88ab\u5176\u4ed6\u4efb\u4f55\u4efb\u52a1\u4f7f\u7528\uff0c\u76f4\u5230\u6210\u529f\u83b7\u53d6\u4e92\u65a5\u9501\u7684\u4efb\u52a1\u540c\u65f6\u5c06\u4e92\u65a5\u9501\u201c\u8fd4\u56de\u201d5\u6b21\u3002</p> <p>xSemaphoreTakeRecursive()\u53ea\u80fd\u4ece\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1\u4e2d\u8c03\u7528\uff0c\u56e0\u6b64\u5728\u8c03\u5ea6\u7a0b\u5e8f\u5904\u4e8e\u521d\u59cb\u5316\u72b6\u6001\u65f6(\u5728\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u4e4b\u524d)\u4e0d\u80fd\u8c03\u7528\u5b83\u3002</p> <p>xSemaphoreTakeRecursive()\u4e0d\u80fd\u5728\u5173\u952e\u6bb5\u5185\u6216\u8c03\u5ea6\u7a0b\u5e8f\u6302\u8d77\u65f6\u8c03\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_424","title":"\u793a\u4f8b","text":"<pre><code>/* A task that creates a recursive mutex. */void vATask( void * pvParameters ){/* Recursive mutexes cannot be used before being explicitly created using a callto xSemaphoreCreateRecursiveMutex(). */xMutex = xSemaphoreCreateRecursiveMutex();/* Rest of task code goes here. */for( ;; ){}}/* A function (called by a task) that uses the mutex. */void vAFunction( void ){/* ... Do other things. */if( xMutex != NULL ){/* See if the mutex can be obtained. If the mutex is not available wait 10ticks to see if it becomes free. */if( xSemaphoreTakeRecursive( xMutex, 10 ) == pdTRUE ){/* The mutex was successfully \u2018taken\u2019. */.../* For some reason, due to the nature of the code, further calls toxSemaphoreTakeRecursive() are made on the same mutex. In real code thesewould not be just sequential calls, as that would serve no purpose.Instead, the calls are likely to be buried inside a more complex callstructure, for example in a TCP/IP stack.*/xSemaphoreTakeRecursive( xMutex, ( TickType_t ) 10 );xSemaphoreTakeRecursive( xMutex, ( TickType_t ) 10 );/* The mutex has now been \u2018taken\u2019 three times, so will not be availableto another task until it has also been given back three times. Again itis unlikely that real code would have these calls sequentially, butinstead buried in a more complex call structure. This is just forillustrative purposes. */xSemaphoreGiveRecursive( xMutex );xSemaphoreGiveRecursive( xMutex );xSemaphoreGiveRecursive( xMutex );/* Now the mutex can be taken by other tasks. */}else{/* The mutex was not successfully \u2018taken\u2019. */}}}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#5","title":"\u7ae0\u82825 \u8f6f\u4ef6\u5b9a\u65f6\u5668","text":""},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#51-xtimerchangeperiod","title":"5.1 xTimerChangePeriod()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d\n#include \u201ctimers.h\u201d\nBaseType_t xTimerChangePeriod( TimerHandle_t xTimer,\n                               TickType_t xNewPeriod,\n                               TickType_t xTicksToWait );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_425","title":"\u6982\u8981","text":"<p>\u4fee\u6539\u5b9a\u65f6\u5668\u7684\u5468\u671f\u3002xTimerChangePeriodFormISR()\u662f\u4e00\u4e2a\u7b49\u6548\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u8c03\u7528\u3002</p> <p>\u5982\u679cxTimerChangePeriod()\u7528\u4e8e\u66f4\u6539\u5df2\u7ecf\u8fd0\u884c\u7684\u8ba1\u65f6\u5668\u7684\u5468\u671f\uff0c\u5219\u8ba1\u65f6\u5668\u5c06\u4f7f\u7528\u65b0\u7684\u5468\u671f\u503c\u91cd\u65b0\u8ba1\u7b97\u5176\u8fc7\u671f\u65f6\u95f4\u3002\u91cd\u65b0\u8ba1\u7b97\u7684\u5230\u671f\u65f6\u95f4\u5c06\u76f8\u5bf9\u4e8e\u8c03\u7528xTimerChangePeriod()\u65f6\uff0c\u800c\u4e0d\u662f\u76f8\u5bf9\u4e8e\u8ba1\u65f6\u5668\u6700\u521d\u542f\u52a8\u65f6\u3002</p> <p>\u5982\u679c\u4f7f\u7528xTimerChangePeriod()\u6765\u66f4\u6539\u5c1a\u672a\u8fd0\u884c\u7684\u8ba1\u65f6\u5668\u7684\u5468\u671f\uff0c\u5219\u8ba1\u65f6\u5668\u5c06\u4f7f\u7528\u65b0\u7684period\u503c\u6765\u8ba1\u7b97\u8fc7\u671f\u65f6\u95f4\uff0c\u8ba1\u65f6\u5668\u5c06\u5f00\u59cb\u8fd0\u884c\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_426","title":"\u53c2\u6570","text":"<p>xTimer</p> <ul> <li>\u65b0\u5468\u671f\u88ab\u5206\u914d\u7ed9\u7684\u8ba1\u65f6\u5668\u3002</li> </ul> <p>xNewPeriod</p> <ul> <li>\u7531xTimer\u53c2\u6570\u5f15\u7528\u7684\u5b9a\u65f6\u5668\u7684\u65b0\u5468\u671f\u3002</li> <li>\u8ba1\u65f6\u5668\u5468\u671f\u4ee5\u591a\u4e2a\u8ba1\u65f6\u5468\u671f\u6307\u5b9a\u3002\u53ef\u4ee5\u4f7f\u7528pdMS_TO_TICKS()\u5b8f\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5\u8ba1\u65f6\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8ba1\u65f6\u5668\u5fc5\u987b\u5728100\u5600\u55d2\u4e4b\u540e\u8fc7\u671f\uff0c\u90a3\u4e48xNewPeriod\u53ef\u4ee5\u76f4\u63a5\u8bbe\u7f6e\u4e3a100\u3002\u6216\u8005\uff0c\u5982\u679c\u8ba1\u65f6\u5668\u5fc5\u987b\u5728500ms\u4e4b\u540e\u8fc7\u671f\uff0c\u90a3\u4e48\u53ef\u4ee5\u5c06xNewPeriod\u8bbe\u7f6e\u4e3apdMS_TO_TICKS(500)\uff0c\u524d\u63d0\u662fconfigTICK_RATE_HZ\u5c0f\u4e8e\u6216\u7b49\u4e8e1000\u3002</li> </ul> <p>xTicksToWait</p> <ul> <li>\u8ba1\u65f6\u5668\u529f\u80fd\u4e0d\u662f\u7531\u6838\u5fc3FreeRTOS\u4ee3\u7801\u63d0\u4f9b\u7684\uff0c\u800c\u662f\u7531\u4e00\u4e2a\u8ba1\u65f6\u5668\u670d\u52a1(\u6216\u5b88\u62a4\u8fdb\u7a0b)\u4efb\u52a1\u63d0\u4f9b\u7684\u3002FreeRTOS\u5b9a\u65f6\u5668API\u901a\u8fc7\u4e00\u4e2a\u540d\u4e3a\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u7684\u961f\u5217\u5411\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u53d1\u9001\u547d\u4ee4\u3002xTicksToWait\u6307\u5b9a\u5f53\u8ba1\u65f6\u5668\u547d\u4ee4\u961f\u5217\u5df2\u7ecf\u6ee1\u65f6\uff0c\u4efb\u52a1\u5e94\u4fdd\u6301\u5728Blocked\u72b6\u6001\u4ee5\u7b49\u5f85\u7a7a\u95f4\u53ef\u7528\u7684\u6700\u5927\u65f6\u95f4\u91cf\u3002</li> <li>\u963b\u585e\u65f6\u95f4\u4ee5\u6ef4\u7b54\u5468\u671f\u6307\u5b9a\uff0c\u56e0\u6b64\u5b83\u8868\u793a\u7684\u7edd\u5bf9\u65f6\u95f4\u53d6\u51b3\u4e8e\u6ef4\u7b54\u9891\u7387\u3002\u4e0exNewPeriod\u53c2\u6570\u4e00\u6837\uff0c\u53ef\u4ee5\u4f7f\u7528pdMS_TO_TICKS()\u5b8f\u5c06\u6307\u5b9a\u7684\u65f6\u95f4(\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d)\u8f6c\u6362\u4e3a\u4ee5ticks\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u3002</li> <li>\u5c06xTicksToWait\u8bbe\u7f6e\u4e3aportMAX_DELAY\u5c06\u5bfc\u81f4\u4efb\u52a1\u65e0\u9650\u671f\u7b49\u5f85(\u6ca1\u6709\u8d85\u65f6)\uff0c\u524d\u63d0\u662fFreeRTOSConfig.h\u4e2dINCLUDE_vTaskSuspend\u8bbe\u7f6e\u4e3a1\u3002</li> <li>\u5982\u679c\u5728\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u4e4b\u524d\u8c03\u7528xTimerChangePeriod()\uff0c\u5219xTicksToWait\u5c06\u88ab\u5ffd\u7565\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_427","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS</p> <ul> <li>\u65e5\u5fd7\u542b\u4e49change period\u547d\u4ee4\u6210\u529f\u4e0b\u53d1\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u3002</li> <li>\u5982\u679c\u4e00\u5757\u6307\u5b9a\u65f6\u95f4(xTicksToWait\u4e0d\u662f\u96f6),\u7136\u540e\u8c03\u7528\u4efb\u52a1\u53ef\u80fd\u88ab\u8fdb\u5165\u963b\u585e\u72b6\u6001\u7b49\u5f85\u7a7a\u95f4\u53ef\u7528\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u51fd\u6570\u8fd4\u56de\u4e4b\u524d,\u4f46\u6570\u636e\u6210\u529f\u5199\u5165\u961f\u5217\u963b\u585e\u65f6\u95f4\u5230\u671f\u4e4b\u524d\u3002</li> <li>\u8be5\u547d\u4ee4\u5b9e\u9645\u88ab\u5904\u7406\u7684\u65f6\u95f4\u53d6\u51b3\u4e8e\u8ba1\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u76f8\u5bf9\u4e8e\u7cfb\u7edf\u4e2d\u5176\u4ed6\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff0c\u5c3d\u7ba1\u8ba1\u65f6\u5668\u7684\u5230\u671f\u65f6\u95f4\u76f8\u5bf9\u4e8e\u5b9e\u9645\u8c03\u7528xTimerChangePeriod()\u7684\u65f6\u95f4\u3002\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u7531configTIMER_TASK_PRIORITY\u914d\u7f6e\u5e38\u91cf\u8bbe\u7f6e\u3002</li> </ul> <p>pdFAIL</p> <ul> <li>change period\u547d\u4ee4\u6ca1\u6709\u53d1\u9001\u5230\u8ba1\u65f6\u5668\u547d\u4ee4\u961f\u5217\uff0c\u56e0\u4e3a\u961f\u5217\u5df2\u7ecf\u6ee1\u4e86\u3002</li> <li>\u5982\u679c\u6307\u5b9a\u4e86\u4e00\u4e2a\u5757\u65f6\u95f4(xTicksToWait\u4e0d\u4e3a\u96f6)\uff0c\u90a3\u4e48\u8c03\u7528\u4efb\u52a1\u5c06\u88ab\u7f6e\u4e8eBlocked\u72b6\u6001\uff0c\u7b49\u5f85\u8ba1\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u5728\u961f\u5217\u4e2d\u817e\u51fa\u7a7a\u95f4\uff0c\u4f46\u6307\u5b9a\u7684\u5757\u65f6\u95f4\u5728\u6b64\u4e4b\u524d\u5df2\u7ecf\u8fc7\u671f\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_428","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86\u4f7fxTimerChangePeriod()\u53ef\u7528\uff0c\u5728FreeRTOSConfig.h\u4e2dconfigUSE_TIMERS\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_429","title":"\u793a\u4f8b","text":"<pre><code>/* This function assumes xTimer has already been created. If the timer referenced by xTimer is already active when it is called, then the timer is deleted. If the timer referenced by xTimer is not active when it is called, then the period of the timer is set to 500ms, and the timer is started. */void vAFunction( TimerHandle_t xTimer ){   if( xTimerIsTimerActive( xTimer ) != pdFALSE )  {       /* xTimer is already active - delete it. */     xTimerDelete( xTimer ); }   else    {       /* xTimer is not active, change its period to 500ms. This will also cause       the timer to start. Block for a maximum of 100 ticks if the change period       command cannot immediately be sent to the timer command queue. */       if( xTimerChangePeriod( xTimer, pdMS_TO_TICKS( 500 ), 100 ) == pdPASS )     {           /* The command was successfully sent. */        }       else        {           /* The command could not be sent, even after waiting for 100 ticks to           pass. Take appropriate action here. */      }   }}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#52-xtimerchangeperiodfromisr","title":"5.2  xTimerChangePeriodFromISR()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctimers.h\u201dBaseType_t xTimerChangePeriodFromISR( TimerHandle_t xTimer,                                   TickType_t xNewPeriod,                                      BaseType_t *pxHigherPriorityTaskWoken );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_430","title":"\u6982\u8981","text":"<p>\u53ef\u4ee5\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u8c03\u7528\u7684xTimerChangePeriod()\u7684\u4e00\u4e2a\u7248\u672c\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_431","title":"\u53c2\u6570","text":"<p>xTimer</p> <ul> <li>\u65b0\u5468\u671f\u88ab\u5206\u914d\u7ed9\u7684\u8ba1\u65f6\u5668\u3002</li> </ul> <p>xNewPeriod</p> <ul> <li>\u7531xTimer\u53c2\u6570\u5f15\u7528\u7684\u5b9a\u65f6\u5668\u7684\u65b0\u5468\u671f\u3002</li> <li>\u8ba1\u65f6\u5668\u5468\u671f\u4ee5\u591a\u4e2a\u8ba1\u65f6\u5468\u671f\u6307\u5b9a\u3002\u53ef\u4ee5\u4f7f\u7528pdMS_TO_TICKS()\u5b8f\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5\u8ba1\u65f6\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8ba1\u65f6\u5668\u5fc5\u987b\u5728100\u5600\u55d2\u4e4b\u540e\u8fc7\u671f\uff0c\u90a3\u4e48xNewPeriod\u53ef\u4ee5\u76f4\u63a5\u8bbe\u7f6e\u4e3a100\u3002\u6216\u8005\uff0c\u5982\u679c\u8ba1\u65f6\u5668\u5fc5\u987b\u5728500ms\u4e4b\u540e\u8fc7\u671f\uff0c\u90a3\u4e48\u53ef\u4ee5\u5c06xNewPeriod\u8bbe\u7f6e\u4e3apdMS_TO_TICKS(500)\uff0c\u524d\u63d0\u662fconfigTICK_RATE_HZ\u5c0f\u4e8e\u6216\u7b49\u4e8e1000\u3002</li> </ul> <p>pxHigherPriorityTaskWoken</p> <ul> <li>xTimerChangePeriodFromISR()\u5c06\u547d\u4ee4\u5199\u5165\u8ba1\u65f6\u5668\u547d\u4ee4\u961f\u5217\u3002\u5982\u679c\u5199\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4f7f\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u79bb\u5f00\u963b\u585e\u72b6\u6001,\u548c\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u4f18\u5148\u7ea7\u7b49\u4e8e\u6216\u5927\u4e8e\u5f53\u524d\u6267\u884c\u7684\u4efb\u52a1(\u4efb\u52a1\u88ab\u6253\u65ad),\u7136\u540e*pxHigherPriorityTaskWoken\u5c06\u88ab\u8bbe\u7f6e\u5728xTimerChangePeriodFromISR pdTRUE\u5185\u90e8()\u51fd\u6570\u3002\u5982\u679cxTimerChangePeriodFromISR()\u5c06\u8fd9\u4e2a\u503c\u8bbe\u7f6e\u4e3apdTRUE\uff0c\u90a3\u4e48\u5e94\u8be5\u5728\u4e2d\u65ad\u9000\u51fa\u4e4b\u524d\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_432","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS</p> <ul> <li>change period\u547d\u4ee4\u6210\u529f\u4e0b\u53d1\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u3002\u5f53\u547d\u4ee4\u88ab\u5b9e\u9645\u5904\u7406\u65f6\uff0c\u5c06\u53d6\u51b3\u4e8e\u8ba1\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u76f8\u5bf9\u4e8e\u7cfb\u7edf\u4e2d\u5176\u4ed6\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff0c\u5c3d\u7ba1\u8ba1\u65f6\u5668\u7684\u5230\u671f\u65f6\u95f4\u662f\u76f8\u5bf9\u4e8e\u5b9e\u9645\u8c03\u7528xTimerChangePeriodFromISR()\u7684\u65f6\u95f4\u3002\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u7531configTIMER_TASK_PRIORITY\u914d\u7f6e\u5e38\u91cf\u8bbe\u7f6e\u3002</li> </ul> <p>pdFAIL</p> <ul> <li>change period\u547d\u4ee4\u6ca1\u6709\u53d1\u9001\u5230\u8ba1\u65f6\u5668\u547d\u4ee4\u961f\u5217\uff0c\u56e0\u4e3a\u961f\u5217\u5df2\u7ecf\u6ee1\u4e86\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_433","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86\u4f7fxTimerChangePeriodFromISR()\u53ef\u7528\uff0c\u5728FreeRTOSConfig.h\u4e2dconfigUSE_TIMERS\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_434","title":"\u793a\u4f8b","text":"<pre><code>/* This scenario assumes xTimer has already been created and started. When an interrupt occurs, the period of xTimer should be changed to 500ms. *//* The interrupt service routine that changes the period of xTimer. */void vAnExampleInterruptServiceRoutine( void ){    BaseType_t xHigherPriorityTaskWoken = pdFALSE;  /* The interrupt has occurred - change the period of xTimer to 500ms.   xHigherPriorityTaskWoken was set to pdFALSE where it was defined (within this   function). As this is an interrupt service routine, only FreeRTOS API functions that end in \"FromISR\" can be used. */   if( xTimerChangePeriodFromISR( xTimer, &amp;xHigherPriorityTaskWoken ) != pdPASS )  {       /* The command to change the timer\u2019s period was not executed successfully.      Take appropriate action here. */    }   /* If xHigherPriorityTaskWoken equals pdTRUE, then a context switch should be   performed. The syntax required to perform a context switch from inside an ISR   varies from port to port, and from compiler to compiler. Inspect the demos for  the port you are using to find the actual syntax required. */   if( xHigherPriorityTaskWoken != pdFALSE )   {       /* Call the interrupt safe yield function here (actual function depends on      the FreeRTOS port being used). */   }}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#53-xtimercreate","title":"5.3 xTimerCreate()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctimers.h\u201dTimerHandle_t xTimerCreate( const char *pcTimerName,                            const TickType_t xTimerPeriod,                          const UBaseType_t uxAutoReload,                         void * const pvTimerID,                         TimerCallbackFunction_t pxCallbackFunction );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_435","title":"\u6982\u8981","text":"<p>\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8f6f\u4ef6\u8ba1\u65f6\u5668\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u53e5\u67c4\uff0c\u901a\u8fc7\u8be5\u53e5\u67c4\u53ef\u4ee5\u5f15\u7528\u521b\u5efa\u7684\u8f6f\u4ef6\u8ba1\u65f6\u5668\u3002</p> <p>\u6bcf\u4e2a\u8f6f\u4ef6\u8ba1\u65f6\u5668\u90fd\u9700\u8981\u5c11\u91cf\u7684RAM\u6765\u4fdd\u5b58\u8ba1\u65f6\u5668\u7684\u72b6\u6001\u3002\u5982\u679c\u4f7f\u7528xTimerCreate()\u521b\u5efa\u4e00\u4e2a\u8f6f\u4ef6\u8ba1\u65f6\u5668\uff0c\u90a3\u4e48\u8fd9\u4e2aRAM\u5c06\u81ea\u52a8\u4eceFreeRTOS\u5806\u4e2d\u5206\u914d\u3002\u5982\u679c\u4f7f\u7528xTimerCreateStatic()\u521b\u5efa\u8f6f\u4ef6\u8ba1\u65f6\u5668\uff0c\u90a3\u4e48\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u5c06\u63d0\u4f9bRAM\uff0c\u8fd9\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u53c2\u6570\uff0c\u4f46\u5141\u8bb8\u5728\u7f16\u8bd1\u65f6\u9759\u6001\u5730\u5206\u914dRAM\u3002</p> <p>\u521b\u5efa\u5b9a\u65f6\u5668\u4e0d\u4f1a\u542f\u52a8\u5b9a\u65f6\u5668\u3002xTimerStart()\u3001xTimerReset()\u3001xTimerStartFromISR()\u3001xTimerResetFromISR()\u3001xTimerChangePeriod()\u548cxTimerChangePeriodFromISR() API\u51fd\u6570\u90fd\u53ef\u4ee5\u7528\u6765\u542f\u52a8\u8ba1\u65f6\u5668\u8fd0\u884c\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_436","title":"\u53c2\u6570","text":"<p>pcTimerName</p> <ul> <li>\u5206\u914d\u7ed9\u8ba1\u65f6\u5668\u7684\u7eaf\u6587\u672c\u540d\u79f0\uff0c\u7eaf\u7cb9\u662f\u4e3a\u4e86\u8f85\u52a9\u8c03\u8bd5\u3002</li> </ul> <p>xTimerPeriod</p> <ul> <li>\u8ba1\u65f6\u5668\u3002</li> <li>\u8ba1\u65f6\u5668\u5468\u671f\u4ee5\u591a\u4e2a\u8ba1\u65f6\u5468\u671f\u6307\u5b9a\u3002\u53ef\u4ee5\u4f7f\u7528pdMS_TO_TICKS()\u5b8f\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5\u8ba1\u65f6\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8ba1\u65f6\u5668\u5fc5\u987b\u5728100\u5600\u55d2\u4e4b\u540e\u8fc7\u671f\uff0c\u90a3\u4e48xNewPeriod\u53ef\u4ee5\u76f4\u63a5\u8bbe\u7f6e\u4e3a100\u3002\u6216\u8005\uff0c\u5982\u679c\u8ba1\u65f6\u5668\u5fc5\u987b\u5728500ms\u4e4b\u540e\u8fc7\u671f\uff0c\u90a3\u4e48\u53ef\u4ee5\u5c06xNewPeriod\u8bbe\u7f6e\u4e3apdMS_TO_TICKS(500)\uff0c\u524d\u63d0\u662fconfigTICK_RATE_HZ\u5c0f\u4e8e\u6216\u7b49\u4e8e1000\u3002</li> </ul> <p>uxAutoReload</p> <ul> <li>\u8bbe\u7f6e\u4e3apdTRUE\u4ee5\u521b\u5efa\u81ea\u52a8\u91cd\u65b0\u52a0\u8f7d\u8ba1\u65f6\u5668\u3002\u8bbe\u7f6e\u4e3apdFALSE\u4ee5\u521b\u5efa\u4e00\u6b21\u6027\u8ba1\u65f6\u5668\u3002</li> <li>\u4e00\u65e6\u542f\u52a8\uff0c\u81ea\u52a8\u91cd\u65b0\u52a0\u8f7d\u8ba1\u65f6\u5668\u5c06\u4ee5xTimerPeriod\u53c2\u6570\u8bbe\u7f6e\u7684\u9891\u7387\u91cd\u590d\u8fc7\u671f\u3002</li> <li>\u4e00\u65e6\u542f\u52a8\uff0c\u4e00\u6b21\u6027\u8ba1\u65f6\u5668\u5c06\u53ea\u8fc7\u671f\u4e00\u6b21\u3002\u4e00\u6b21\u6027\u8ba1\u65f6\u5668\u53ef\u4ee5\u5728\u8fc7\u671f\u540e\u624b\u52a8\u91cd\u65b0\u542f\u52a8\u3002</li> </ul> <p>pvTimerID</p> <ul> <li>\u5206\u914d\u7ed9\u6b63\u5728\u521b\u5efa\u7684\u8ba1\u65f6\u5668\u7684\u6807\u8bc6\u7b26\u3002\u7a0d\u540e\u53ef\u4ee5\u4f7f\u7528vTimerSetTimerID() API\u51fd\u6570\u66f4\u65b0\u8be5\u6807\u8bc6\u7b26\u3002</li> <li>\u5982\u679c\u540c\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u88ab\u5206\u914d\u7ed9\u591a\u4e2a\u8ba1\u65f6\u5668\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u56de\u8c03\u51fd\u6570\u5185\u90e8\u68c0\u67e5\u8ba1\u65f6\u5668\u6807\u8bc6\u7b26\uff0c\u4ee5\u786e\u5b9a\u54ea\u4e2a\u8ba1\u65f6\u5668\u5b9e\u9645\u4e0a\u5df2\u7ecf\u8fc7\u671f\u3002\u6b64\u5916\uff0c\u8ba1\u65f6\u5668\u6807\u8bc6\u7b26\u53ef\u4ee5\u7528\u4e8e\u5728\u8ba1\u65f6\u5668\u7684\u56de\u8c03\u51fd\u6570\u8c03\u7528\u4e4b\u95f4\u5b58\u50a8\u4e00\u4e2a\u503c\u3002</li> </ul> <p>pxCallbackFunction</p> <ul> <li>\u8ba1\u65f6\u5668\u5230\u671f\u65f6\u8981\u8c03\u7528\u7684\u51fd\u6570\u3002\u56de\u8c03\u51fd\u6570\u5fc5\u987b\u6709TimerCallbackFunction_t\u7c7b\u578b\u5b9a\u4e49\u7684\u539f\u578b\u3002\u6240\u9700\u7684\u539f\u578b\u5982\u4e0b\u6240\u793a\u3002</li> </ul> <pre><code>void vCallbackFunctionExample( TimerHandle_t xTimer );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_437","title":"\u8fd4\u56de\u503c","text":"<p>NULL</p> <ul> <li>\u65e0\u6cd5\u521b\u5efa\u8f6f\u4ef6\u8ba1\u65f6\u5668\uff0c\u56e0\u4e3a\u6ca1\u6709\u8db3\u591f\u7684FreeRTOS\u5806\u5185\u5b58\u6765\u6210\u529f\u5206\u914d\u8ba1\u65f6\u5668\u6570\u636e\u7ed3\u6784\u3002</li> </ul> <p>\u5176\u4ed6\u4efb\u4f55\u503c</p> <ul> <li>\u8f6f\u4ef6\u5b9a\u65f6\u5668\u521b\u5efa\u6210\u529f\uff0c\u8fd4\u56de\u503c\u4e3a\u6240\u521b\u5efa\u7684\u8f6f\u4ef6\u5b9a\u65f6\u5668\u5f15\u7528\u7684\u53e5\u67c4\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_438","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86\u4f7fxTimerCreate()\u53ef\u7528\uff0c\u5728FreeRTOSConfig.h\u4e2dconfigUSE_TIMERS\u548cconfigSUPPORT_DYNAMIC_ALLOCATION\u5fc5\u987b\u540c\u65f6\u8bbe\u7f6e\u4e3a1\u3002\u5982\u679c\u672a\u5b9a\u4e49\uff0cconfigSUPPORT_DYNAMIC_ALLOCATION\u5c06\u9ed8\u8ba4\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_439","title":"\u793a\u4f8b","text":"<pre><code>/* Define a callback function that will be used by multiple timer instances. The callback function does nothing but count the number of times the associated timer expires, and stop the timer once the timer has expired 10 times. The count is saved as the ID of the timer. */void vTimerCallback( TimerHandle_t xTimer ){   const uint32_t ulMaxExpiryCountBeforeStopping = 10; uint32_t ulCount;   /* The number of times this timer has expired is saved as the timer's ID. Obtain the    count. */   ulCount = ( uint32_t ) pvTimerGetTimerID( xTimer ); /* Increment the count, then test to see if the timer has expired   ulMaxExpiryCountBeforeStopping yet. */  ulCount++;  /* If the timer has expired 10 times then stop it from running. */  if( ulCount &gt;= xMaxExpiryCountBeforeStopping )  {       /* Do not use a block time if calling a timer API function from a timer callback        function, as doing so could cause a deadlock! */        xTimerStop( pxTimer, 0 );   }   else    {       /* Store the incremented count back into the timer's ID field so it can be read             back again          the next time this software timer expires. */       vTimerSetTimerID( xTimer, ( void * ) ulCount ); }}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#54-xtimercreatestatic","title":"5.4  xTimerCreateStatic()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctimers.h\u201dTimerHandle_t xTimerCreateStatic( const char *pcTimerName,                                const TickType_t xTimerPeriod,                                  const UBaseType_t uxAutoReload,                                 void * const pvTimerID,                                 TimerCallbackFunction_t pxCallbackFunction,                                 StaticTimer_t *pxTimerBuffer );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_440","title":"\u6982\u8981","text":"<p>\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8f6f\u4ef6\u8ba1\u65f6\u5668\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u53e5\u67c4\uff0c\u53ef\u901a\u8fc7\u8be5\u53e5\u67c4\u5f15\u7528\u521b\u5efa\u7684\u8f6f\u4ef6\u8ba1\u65f6\u5668\u3002</p> <p>\u6bcf\u4e2a\u8f6f\u4ef6\u5b9a\u65f6\u5668\u90fd\u9700\u8981\u5c11\u91cf\u7684RAM\u6765\u4fdd\u5b58\u5b9a\u65f6\u5668\u7684\u72b6\u6001\u3002\u5982\u679c\u4f7f\u7528xTimerCreate()\u521b\u5efa\u4e00\u4e2a\u8f6f\u4ef6\u8ba1\u65f6\u5668\uff0c\u90a3\u4e48\u8fd9\u4e2aRAM\u5c06\u81ea\u52a8\u4eceFreeRTOS\u5806\u4e2d\u5206\u914d\u3002\u5982\u679c\u4f7f\u7528xTimerCreateStatic()\u521b\u5efa\u8f6f\u4ef6\u8ba1\u65f6\u5668\uff0c\u90a3\u4e48\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u5c06\u63d0\u4f9bRAM\uff0c\u8fd9\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u53c2\u6570\uff0c\u4f46\u5141\u8bb8\u5728\u7f16\u8bd1\u65f6\u9759\u6001\u5730\u5206\u914dRAM\u3002</p> <p>\u521b\u5efa\u5b9a\u65f6\u5668\u4e0d\u4f1a\u542f\u52a8\u5b9a\u65f6\u5668\u3002xTimerStart()\u3001xTimerReset()\u3001xTimerStartFromISR()\u3001xTimerResetFromISR()\u3001xTimerChangePeriod()\u548cxTimerChangePeriodFromISR() API\u51fd\u6570\u90fd\u53ef\u4ee5\u7528\u6765\u542f\u52a8\u8ba1\u65f6\u5668\u8fd0\u884c\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_441","title":"\u53c2\u6570","text":"<p>pcTimerName</p> <ul> <li>\u5206\u914d\u7ed9\u8ba1\u65f6\u5668\u7684\u7eaf\u6587\u672c\u540d\u79f0\uff0c\u7eaf\u7cb9\u662f\u4e3a\u4e86\u8f85\u52a9\u8c03\u8bd5\u3002</li> </ul> <p>xTimerPeriod</p> <ul> <li> <p>\u8ba1\u65f6\u5668\u3002</p> </li> <li> <p>\u8ba1\u65f6\u5668\u5468\u671f\u4ee5\u591a\u4e2a\u8ba1\u65f6\u5468\u671f\u6307\u5b9a\u3002\u53ef\u4ee5\u4f7f\u7528pdMS_TO_TICKS()\u5b8f\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5\u8ba1\u65f6\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8ba1\u65f6\u5668\u5fc5\u987b\u5728100\u5600\u55d2\u4e4b\u540e\u8fc7\u671f\uff0c\u90a3\u4e48xNewPeriod\u53ef\u4ee5\u76f4\u63a5\u8bbe\u7f6e\u4e3a100\u3002\u6216\u8005\uff0c\u5982\u679c\u8ba1\u65f6\u5668\u5fc5\u987b\u5728500ms\u4e4b\u540e\u8fc7\u671f\uff0c\u90a3\u4e48\u53ef\u4ee5\u5c06xNewPeriod\u8bbe\u7f6e\u4e3apdMS_TO_TICKS(500)\uff0c\u524d\u63d0\u662fconfigTICK_RATE_HZ\u5c0f\u4e8e\u6216\u7b49\u4e8e1000\u3002</p> </li> </ul> <p>uxAutoReload</p> <ul> <li> <p>\u8bbe\u7f6e\u4e3apdTRUE\u4ee5\u521b\u5efa\u81ea\u52a8\u91cd\u65b0\u52a0\u8f7d\u8ba1\u65f6\u5668\u3002\u8bbe\u7f6e\u4e3apdFALSE\u4ee5\u521b\u5efa\u4e00\u6b21\u6027\u8ba1\u65f6\u5668\u3002</p> </li> <li> <p>\u4e00\u65e6\u542f\u52a8\uff0c\u81ea\u52a8\u91cd\u65b0\u52a0\u8f7d\u8ba1\u65f6\u5668\u5c06\u4ee5xTimerPeriod\u53c2\u6570\u8bbe\u7f6e\u7684\u9891\u7387\u91cd\u590d\u8fc7\u671f\u3002</p> </li> <li> <p>\u4e00\u65e6\u542f\u52a8\uff0c\u4e00\u6b21\u6027\u8ba1\u65f6\u5668\u5c06\u53ea\u8fc7\u671f\u4e00\u6b21\u3002\u4e00\u6b21\u6027\u8ba1\u65f6\u5668\u53ef\u4ee5\u5728\u8fc7\u671f\u540e\u624b\u52a8\u91cd\u65b0\u542f\u52a8\u3002</p> </li> </ul> <p>pvTimerID</p> <ul> <li>\u5206\u914d\u7ed9\u6b63\u5728\u521b\u5efa\u7684\u8ba1\u65f6\u5668\u7684\u6807\u8bc6\u7b26\u3002\u7a0d\u540e\u53ef\u4ee5\u4f7f\u7528vTimerSetTimerID() API\u51fd\u6570\u66f4\u65b0\u8be5\u6807\u8bc6\u7b26\u3002</li> <li>\u5982\u679c\u540c\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u88ab\u5206\u914d\u7ed9\u591a\u4e2a\u8ba1\u65f6\u5668\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u56de\u8c03\u51fd\u6570\u5185\u90e8\u68c0\u67e5\u8ba1\u65f6\u5668\u6807\u8bc6\u7b26\uff0c\u4ee5\u786e\u5b9a\u54ea\u4e2a\u8ba1\u65f6\u5668\u5b9e\u9645\u4e0a\u5df2\u7ecf\u8fc7\u671f\u3002\u6b64\u5916\uff0c\u8ba1\u65f6\u5668\u6807\u8bc6\u7b26\u53ef\u4ee5\u7528\u4e8e\u5728\u8ba1\u65f6\u5668\u7684\u56de\u8c03\u51fd\u6570\u8c03\u7528\u4e4b\u95f4\u5b58\u50a8\u4e00\u4e2a\u503c\u3002</li> </ul> <p>pxCallbackFunction</p> <ul> <li>\u8ba1\u65f6\u5668\u5230\u671f\u65f6\u8981\u8c03\u7528\u7684\u51fd\u6570\u3002\u56de\u8c03\u51fd\u6570\u5fc5\u987b\u6709TimerCallbackFunction_t\u7c7b\u578b\u5b9a\u4e49\u7684\u539f\u578b\u3002\u6240\u9700\u7684\u539f\u578b\u5982\u4e0b\u6240\u793a\u3002</li> </ul> <pre><code>void vCallbackFunctionExample( TimerHandle_t xTimer );\n</code></pre> <p>pxTimerBuffer</p> <ul> <li>\u5fc5\u987b\u6307\u5411\u7c7b\u578b\u4e3aStaticTimer_t\u7684\u53d8\u91cf\uff0c\u7136\u540e\u4f7f\u7528\u8be5\u53d8\u91cf\u4fdd\u5b58\u8ba1\u65f6\u5668\u7684\u72b6\u6001\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_442","title":"\u8fd4\u56de\u503c","text":"<p>NULL</p> <ul> <li>\u65e0\u6cd5\u521b\u5efa\u8f6f\u4ef6\u8ba1\u65f6\u5668\uff0c\u56e0\u4e3apxTimerBuffer\u4e3aNULL\u3002</li> </ul> <p>\u4efb\u4f55\u5176\u4ed6\u503c</p> <ul> <li>\u8f6f\u4ef6\u5b9a\u65f6\u5668\u521b\u5efa\u6210\u529f\uff0c\u8fd4\u56de\u503c\u4e3a\u6240\u521b\u5efa\u7684\u8f6f\u4ef6\u5b9a\u65f6\u5668\u5f15\u7528\u7684\u53e5\u67c4\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_443","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86\u4f7fxTimerCreateStatic()\u53ef\u7528\uff0c\u5728FreeRTOSConfig.h\u4e2dconfigUSE_TIMERS\u548cconfigSUPPORT_STATIC_ALLOCATION\u5fc5\u987b\u540c\u65f6\u8bbe\u7f6e\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_444","title":"\u793a\u4f8b","text":"<pre><code>/* Define a callback function that will be used by multiple timer instances. The callback function does nothing but count the number of times the associated timer expires, and stop the timer once the timer has expired 10 times. The count is saved as the ID of the timer. */void vTimerCallback( TimerHandle_t xTimer ){   const uint32_t ulMaxExpiryCountBeforeStopping = 10; uint32_t ulCount;   /* The number of times this timer has expired is saved as the timer's ID. Obtain the    count. */   ulCount = ( uint32_t ) pvTimerGetTimerID( xTimer ); /* Increment the count, then test to see if the timer has expired   ulMaxExpiryCountBeforeStopping yet. */  ulCount++;  /* If the timer has expired 10 times then stop it from running. */  if( ulCount &gt;= xMaxExpiryCountBeforeStopping )  {       /* Do not use a block time if calling a timer API function from a timer callback        function, as doing so could cause a deadlock! */        xTimerStop( pxTimer, 0 );   }   else    {       /* Store the incremented count back into the timer's ID field so it can be read             back again the next time this software timer expires. */        vTimerSetTimerID( xTimer, ( void * ) ulCount ); }}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#55-xtimerdelete","title":"5.5 xTimerDelete()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctimers.h\u201dBaseType_t xTimerDelete( TimerHandle_t xTimer, TickType_t xTicksToWait );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_445","title":"\u6982\u8981","text":"<p>\u5220\u9664\u4e00\u4e2a\u8ba1\u65f6\u5668\u3002\u8ba1\u65f6\u5668\u5fc5\u987b\u9996\u5148\u4f7f\u7528xTimerCreate() API\u51fd\u6570\u521b\u5efa\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_446","title":"\u53c2\u6570","text":"<p>xTimer</p> <ul> <li>\u6b63\u5728\u5220\u9664\u7684\u5b9a\u65f6\u5668\u7684\u53e5\u67c4\u3002</li> </ul> <p>xTicksToWait</p> <ul> <li>\u8ba1\u65f6\u5668\u529f\u80fd\u4e0d\u662f\u7531\u6838\u5fc3FreeRTOS\u4ee3\u7801\u63d0\u4f9b\u7684\uff0c\u800c\u662f\u7531\u4e00\u4e2a\u8ba1\u65f6\u5668\u670d\u52a1(\u6216\u5b88\u62a4\u8fdb\u7a0b)\u4efb\u52a1\u63d0\u4f9b\u7684\u3002FreeRTOS\u5b9a\u65f6\u5668API\u901a\u8fc7\u4e00\u4e2a\u540d\u4e3a\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u7684\u961f\u5217\u5411\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u53d1\u9001\u547d\u4ee4\u3002xTicksToWait\u6307\u5b9a\u4efb\u52a1\u5e94\u8be5\u4fdd\u6301\u5728Blocked\u72b6\u6001\uff0c\u7b49\u5f85\u8ba1\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4e0a\u7684\u7a7a\u95f4\u53ef\u7528\u7684\u6700\u5927\u65f6\u95f4\uff0c\u5982\u679c\u961f\u5217\u5df2\u7ecf\u6ee1\u4e86\u3002</li> <li>\u5757\u65f6\u95f4\u4ee5\u6ef4\u7b54\u5468\u671f\u6307\u5b9a\uff0c\u56e0\u6b64\u5b83\u8868\u793a\u7684\u7edd\u5bf9\u65f6\u95f4\u53d6\u51b3\u4e8e\u6ef4\u7b54\u9891\u7387\u3002\u53ef\u4ee5\u4f7f\u7528pdMS_TO_TICKS()\u5b8f\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5ticks\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u3002</li> <li>\u5c06xTicksToWait\u8bbe\u7f6e\u4e3aportMAX_DELAY\u5c06\u5bfc\u81f4\u4efb\u52a1\u65e0\u9650\u671f\u7b49\u5f85(\u6ca1\u6709\u8d85\u65f6)\uff0c\u524d\u63d0\u662fFreeRTOSConfig.h\u4e2dINCLUDE_vTaskSuspend\u8bbe\u7f6e\u4e3a1\u3002</li> <li>\u5982\u679c\u5728\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u4e4b\u524d\u8c03\u7528xTimerDelete()\uff0c\u5219xTicksToWait\u5c06\u88ab\u5ffd\u7565</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_447","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS</p> <ul> <li>delete\u547d\u4ee4\u6210\u529f\u53d1\u9001\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u3002\u5982\u679c\u4e00\u5757\u6307\u5b9a\u65f6\u95f4(xTicksToWait\u4e0d\u662f\u96f6),\u7136\u540e\u8c03\u7528\u4efb\u52a1\u53ef\u80fd\u88ab\u8fdb\u5165\u963b\u585e\u72b6\u6001\u7b49\u5f85\u7a7a\u95f4\u53ef\u7528\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u51fd\u6570\u8fd4\u56de\u4e4b\u524d,\u4f46\u6570\u636e\u6210\u529f\u5199\u5165\u961f\u5217\u963b\u585e\u65f6\u95f4\u5230\u671f\u4e4b\u524d\u3002</li> <li>\u5f53\u547d\u4ee4\u88ab\u5b9e\u9645\u5904\u7406\u65f6\uff0c\u5c06\u53d6\u51b3\u4e8e\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u76f8\u5bf9\u4e8e\u7cfb\u7edf\u4e2d\u5176\u4ed6\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u7531configTIMER_TASK_PRIORITY\u914d\u7f6e\u5e38\u91cf\u8bbe\u7f6e\u3002</li> </ul> <p>pdFAIL</p> <ul> <li>\u5220\u9664\u547d\u4ee4\u6ca1\u6709\u53d1\u9001\u5230\u8ba1\u65f6\u5668\u547d\u4ee4\u961f\u5217\uff0c\u56e0\u4e3a\u961f\u5217\u5df2\u7ecf\u6ee1\u4e86\u3002</li> <li>\u5982\u679c\u6307\u5b9a\u4e86\u4e00\u4e2a\u5757\u65f6\u95f4(xTicksToWait\u4e0d\u4e3a\u96f6)\uff0c\u90a3\u4e48\u8c03\u7528\u4efb\u52a1\u5c06\u88ab\u7f6e\u4e8eBlocked\u72b6\u6001\uff0c\u7b49\u5f85\u8ba1\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u5728\u961f\u5217\u4e2d\u817e\u51fa\u7a7a\u95f4\uff0c\u4f46\u6307\u5b9a\u7684\u5757\u65f6\u95f4\u5728\u6b64\u4e4b\u524d\u5df2\u7ecf\u8fc7\u671f\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_448","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86\u4f7fxTimerDelete()\u53ef\u7528\uff0c\u5728FreeRTOSConfig.h\u4e2dconfigUSE_TIMERS\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_449","title":"\u793a\u4f8b","text":"<p>\u8bf7\u53c2\u9605\u63d0\u4f9b\u7684xTimerChangePeriod() API\u51fd\u6570\u7684\u793a\u4f8b\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#56-xtimergetexpirytime","title":"5.6 xTimerGetExpiryTime()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctimers.h\u201dTickType_t xTimerGetExpiryTime( TimerHandle_t xTimer );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_450","title":"\u6982\u8981","text":"<p>\u8fd4\u56de\u8f6f\u4ef6\u8ba1\u65f6\u5668\u5c06\u8fc7\u671f\u7684\u65f6\u95f4\uff0c\u8fd9\u662f\u8f6f\u4ef6\u8ba1\u65f6\u5668\u7684\u56de\u8c03\u51fd\u6570\u5c06\u6267\u884c\u7684\u65f6\u95f4\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_451","title":"\u53c2\u6570","text":"<p>xTimer</p> <ul> <li>\u6b63\u5728\u67e5\u8be2\u7684\u5b9a\u65f6\u5668\u7684\u53e5\u67c4\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_452","title":"\u8fd4\u56de\u503c","text":"<p>\u5982\u679cxTimer\u5f15\u7528\u7684\u5b9a\u65f6\u5668\u662f\u6d3b\u52a8\u7684\uff0c\u90a3\u4e48\u5c06\u8fd4\u56de\u8be5\u5b9a\u65f6\u5668\u7684\u56de\u8c03\u51fd\u6570\u4e0b\u4e00\u6b21\u6267\u884c\u7684\u65f6\u95f4\u3002\u65f6\u95f4\u4ee5RTOS\u8282\u62cd\u6307\u5b9a\u3002</p> <p>\u5982\u679cxTimer\u6240\u5f15\u7528\u7684\u5b9a\u65f6\u5668\u672a\u6fc0\u6d3b\uff0c\u5219\u8fd4\u56de\u503c\u4e3aundefined\u3002\u53ef\u4ee5\u4f7f\u7528xTimerIsTimerActive() API\u51fd\u6570\u6765\u786e\u5b9a\u8ba1\u65f6\u5668\u662f\u5426\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_453","title":"\u63d0\u793a","text":"<p>\u5982\u679cxTimerGetExpiryTime()\u8fd4\u56de\u7684\u503c\u5c0f\u4e8e\u5f53\u524d\u8ba1\u65f6\u8ba1\u6570\uff0c\u90a3\u4e48\u8ba1\u65f6\u5668\u5c06\u4e0d\u4f1a\u8fc7\u671f\uff0c\u76f4\u5230\u8ba1\u65f6\u8ba1\u6570\u6ea2\u51fa\u5e76\u5305\u88c5\u56de0\u3002\u6ea2\u51fa\u662f\u5728RTOS\u5b9e\u73b0\u672c\u8eab\u4e2d\u5904\u7406\u7684\uff0c\u56e0\u6b64\u8ba1\u65f6\u5668\u7684\u56de\u8c03\u51fd\u6570\u5c06\u5728\u6b63\u786e\u7684\u65f6\u95f4\u6267\u884c\uff0c\u65e0\u8bba\u5b83\u662f\u5728tick\u8ba1\u6570\u6ea2\u51fa\u4e4b\u524d\u8fd8\u662f\u4e4b\u540e\u3002</p> <p>\u4e3a\u4e86\u4f7fxTimerGetExpiryTime()\u53ef\u7528\uff0c\u5728FreeRTOSConfig.h\u4e2dconfigUSE_TIMERS\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_454","title":"\u793a\u4f8b","text":"<pre><code>static void vAFunction( TimerHandle_t xTimer ){ TickType_t xRemainingTime;  /* Calculate the time that remains before the timer referenced by xTimer        Expires and executes its callback function.     TickType_t is an unsigned type, so the subtraction will result in the correct       answer even if the timer will not expire until after the tick count has     overflowed. */  xRemainingTime = xTimerGetExpiryTime( xTimer ) - xTaskGetTickCount();}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#57-pctimergetname","title":"5.7 pcTimerGetName()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctimers.h\u201dconst char * pcTimerGetName( TimerHandle_t xTimer );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_455","title":"\u6982\u8981","text":"<p>\u8fd4\u56de\u521b\u5efa\u8ba1\u65f6\u5668\u65f6\u5206\u914d\u7ed9\u8ba1\u65f6\u5668\u7684\u4eba\u7c7b\u53ef\u8bfb\u6587\u672c\u540d\u79f0\u3002\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u89c1xTimerCreate() API\u51fd\u6570\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_456","title":"\u53c2\u6570","text":"<p>xTimer</p> <ul> <li>\u6b63\u5728\u67e5\u8be2\u7684\u5b9a\u65f6\u5668\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_457","title":"\u8fd4\u56de\u503c","text":"<p>\u8ba1\u65f6\u5668\u540d\u79f0\u662f\u6807\u51c6\u7684\u4ee5NULL\u7ed3\u5c3e\u7684C\u5b57\u7b26\u4e32\u3002\u8fd4\u56de\u7684\u503c\u662f\u4e00\u4e2a\u6307\u5411\u4e3b\u9898\u8ba1\u65f6\u5668\u540d\u79f0\u7684\u6307\u9488\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_458","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86\u4f7fpcTimerGetName()\u53ef\u7528\uff0c\u5728FreeRTOSConfig.h\u4e2dconfigUSE_TIMERS\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#58-xtimergetperiod","title":"5.8 xTimerGetPeriod()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctimers.h\u201dTickType_t xTimerGetPeriod( TimerHandle_t xTimer );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_459","title":"\u6982\u8981","text":"<p>\u8fd4\u56de\u8f6f\u4ef6\u8ba1\u65f6\u5668\u7684\u5468\u671f\u3002\u5468\u671f\u4ee5RTOS\u8282\u62cd\u6307\u5b9a\u3002</p> <p>\u8f6f\u4ef6\u8ba1\u65f6\u5668\u7684\u5468\u671f\u6700\u521d\u7531\u7528\u4e8e\u521b\u5efa\u8ba1\u65f6\u5668\u7684xTimerCreate()\u8c03\u7528\u7684xTimerPeriod\u53c2\u6570\u6307\u5b9a\u3002\u968f\u540e\u53ef\u4ee5\u4f7f\u7528xTimerChangePeriod()\u548cxTimerChangePeriodFromISR() API\u51fd\u6570\u66f4\u6539\u5b83\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_460","title":"\u53c2\u6570","text":"<p>xTimer</p> <ul> <li>\u6b63\u5728\u67e5\u8be2\u7684\u5b9a\u65f6\u5668\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_461","title":"\u8fd4\u56de\u503c","text":"<p>\u5b9a\u65f6\u5668\u7684\u5468\u671f\uff0c\u4ee5\u6ef4\u7b54\u4e3a\u5355\u4f4d\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_462","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86\u4f7fxTimerGetPeriod()\u53ef\u7528\uff0c\u5728FreeRTOSConfig.h\u4e2dconfigUSE_TIMERS\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_463","title":"\u793a\u4f8b","text":"<pre><code>/* A callback function assigned to a software timer. */static void prvTimerCallback( TimerHandle_t xTimer ){    TickType_t xTimerPeriod;    /* Query the period of the timer that expired. */   xTimerPeriod = xTimerGetPeriod( xTimer );}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#59-xtimergettimerdaemontaskhandle","title":"5.9 xTimerGetTimerDaemonTaskHandle()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctimers.h\u201dTaskHandle_t xTimerGetTimerDaemonTaskHandle( void );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_464","title":"\u6982\u8981","text":"<p>\u8fd4\u56de\u4e0e\u8f6f\u4ef6\u5b9a\u65f6\u5668\u5b88\u62a4\u8fdb\u7a0b(\u6216\u670d\u52a1)\u4efb\u52a1\u76f8\u5173\u8054\u7684\u4efb\u52a1\u53e5\u67c4\u3002\u5982\u679c\u5728FreeRTOSConfig.h\u4e2d\u5c06configUSE_TIMERS\u8bbe\u7f6e\u4e3a1\uff0c\u90a3\u4e48\u8ba1\u65f6\u5668\u5b88\u62a4\u8fdb\u7a0b\u4efb\u52a1\u5c06\u5728\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u65f6\u81ea\u52a8\u521b\u5efa\u3002\u6240\u6709FreeRTOS\u8f6f\u4ef6\u5b9a\u65f6\u5668\u56de\u8c03\u51fd\u6570\u90fd\u8fd0\u884c\u5728\u5b9a\u65f6\u5668\u5b88\u62a4\u8fdb\u7a0b\u4efb\u52a1\u7684\u4e0a\u4e0b\u6587\u4e2d\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_465","title":"\u53c2\u6570","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_466","title":"\u8fd4\u56de\u503c","text":"<p>\u5b9a\u65f6\u5668\u5b88\u62a4\u8fdb\u7a0b\u4efb\u52a1\u7684\u53e5\u67c4\u3002FreeRTOS\u8f6f\u4ef6\u5b9a\u65f6\u5668\u56de\u8c03\u51fd\u6570\u8fd0\u884c\u5728\u8f6f\u4ef6\u5b88\u62a4\u8fdb\u7a0b\u4efb\u52a1\u7684\u4e0a\u4e0b\u6587\u4e2d\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_467","title":"\u63d0\u793a","text":"<p>configUSE_TIMERS must be set to 1 in FreeRTOSConfig.h for xTimerGetTimerDaemonTaskHandle() to be available.</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#510-pvtimergettimerid","title":"5.10 pvTimerGetTimerID()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctimers.h\u201dvoid *pvTimerGetTimerID( TimerHandle_t xTimer );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_468","title":"\u6982\u8981","text":"<p>\u8fd4\u56de\u5206\u914d\u7ed9\u8ba1\u65f6\u5668\u7684\u6807\u8bc6\u7b26(ID)\u3002\u4e00\u4e2a\u6807\u8bc6\u7b26\u5728\u521b\u5efa\u8ba1\u65f6\u5668\u65f6\u88ab\u5206\u914d\u7ed9\u8be5\u8ba1\u65f6\u5668\uff0c\u5e76\u4e14\u53ef\u4ee5\u4f7f\u7528vTimerSetTimerID() API\u51fd\u6570\u8fdb\u884c\u66f4\u65b0\u3002\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u89c1xTimerCreate() API\u51fd\u6570\u3002</p> <p>\u5982\u679c\u540c\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u88ab\u5206\u914d\u7ed9\u591a\u4e2a\u8ba1\u65f6\u5668\uff0c\u5219\u53ef\u4ee5\u5728\u56de\u8c03\u51fd\u6570\u5185\u90e8\u68c0\u67e5\u8ba1\u65f6\u5668\u6807\u8bc6\u7b26\uff0c\u4ee5\u786e\u5b9a\u54ea\u4e2a\u8ba1\u65f6\u5668\u5b9e\u9645\u4e0a\u5df2\u7ecf\u8fc7\u671f\u3002\u8fd9\u5728\u4e3axTimerCreate() API\u51fd\u6570\u63d0\u4f9b\u7684\u793a\u4f8b\u4ee3\u7801\u4e2d\u8fdb\u884c\u4e86\u6f14\u793a\u3002</p> <p>\u6b64\u5916\uff0c\u8ba1\u65f6\u5668\u7684\u6807\u8bc6\u7b26\u53ef\u4ee5\u7528\u4e8e\u5b58\u50a8\u8ba1\u65f6\u5668\u56de\u8c03\u51fd\u6570\u8c03\u7528\u4e4b\u95f4\u7684\u503c\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_469","title":"\u53c2\u6570","text":"<p>xTimer</p> <ul> <li>\u6b63\u5728\u67e5\u8be2\u7684\u5b9a\u65f6\u5668\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_470","title":"\u8fd4\u56de\u503c","text":"<p>\u5206\u914d\u7ed9\u6b63\u5728\u67e5\u8be2\u7684\u8ba1\u65f6\u5668\u7684\u6807\u8bc6\u7b26\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_471","title":"\u63d0\u793a","text":"<p>\u5982\u679cpvTimerGetTimerID()\u53ef\u7528\uff0c\u5219\u5728FreeRTOSConfig.h\u4e2dconfigUSE_TIMERS\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_472","title":"\u793a\u4f8b","text":"<pre><code>/* A callback function assigned to a timer. */void TimerCallbackFunction( TimerHandle_t pxExpiredTimer ){   uint32_t ulCallCount;   /* A count of the number of times this timer has expired and executed its       callback function is stored in the timer's ID. Retrieve the count, increment it,        then save it back into the timer's ID. */   ulCallCount = ( uint32_t ) pvTimerGetTimerID( pxExpiredTimer ); ulCallCount++;  vTimerSetTimerID( pxExpiredTimer, ( void * ) ulCallCount );}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#511-xtimeristimeractive","title":"5.11 xTimerIsTimerActive()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctimers.h\u201dBaseType_t xTimerIsTimerActive( TimerHandle_t xTimer );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_473","title":"\u6982\u8981","text":"<p>\u67e5\u8be2\u8ba1\u65f6\u5668\u4ee5\u786e\u5b9a\u8ba1\u65f6\u5668\u662f\u5426\u6b63\u5728\u8fd0\u884c\u3002</p> <p>\u5982\u679c:\u8ba1\u65f6\u5668\u5c06\u4e0d\u4f1a\u8fd0\u884c:</p> <ol> <li> <p>\u8ba1\u65f6\u5668\u5df2\u7ecf\u521b\u5efa\uff0c\u4f46\u5c1a\u672a\u542f\u52a8\u3002</p> </li> <li> <p>\u8be5\u8ba1\u65f6\u5668\u662f\u4e00\u4e2a\u4e00\u6b21\u6027\u8ba1\u65f6\u5668\uff0c\u5b83\u5728\u8fc7\u671f\u540e\u8fd8\u6ca1\u6709\u91cd\u65b0\u542f\u52a8\u3002</p> </li> </ol> <p>xTimerStart()\u3001xTimerReset()\u3001xTimerStartFromISR()\u3001xTimerResetFromISR()\u3001xTimerChangePeriod()\u548cxTimerChangePeriodFromISR() API\u51fd\u6570\u90fd\u53ef\u4ee5\u7528\u6765\u542f\u52a8\u8ba1\u65f6\u5668\u8fd0\u884c\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_474","title":"\u53c2\u6570","text":"<p>xTimer</p> <ul> <li>\u6b63\u5728\u67e5\u8be2\u7684\u5b9a\u65f6\u5668\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_475","title":"\u8fd4\u56de\u503c","text":"<p>pdFALSE</p> <ul> <li>\u8ba1\u65f6\u5668\u6ca1\u6709\u8fd0\u884c\u3002</li> </ul> <p>\u4efb\u4f55\u5176\u4ed6\u503c</p> <ul> <li>\u8ba1\u65f6\u5668\u6b63\u5728\u8fd0\u884c\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_476","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86\u4f7fxTimerIsTimerActive()\u53ef\u7528\uff0c\u5728FreeRTOSConfig.h\u4e2dconfigUSE_TIMERS\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_477","title":"\u793a\u4f8b","text":"<pre><code>/* This function assumes xTimer has already been created. */void vAFunction( TimerHandle_t xTimer ){    /* The following line could equivalently be written as: \"if( xTimerIsTimerActive( xTimer ) )\" */    if( xTimerIsTimerActive( xTimer ) != pdFALSE )  {       /* xTimer is active, do something. */   }   else    {       /* xTimer is not active, do something else. */  }}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#512-xtimerpendfunctioncall","title":"5.12 xTimerPendFunctionCall()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctimers.h\u201dBaseType_t xTimerPendFunctionCall( PendedFunction_t xFunctionToPend,                                   void *pvParameter1,                                 uint32_t ulParameter2,                                  TickType_t xTicksToWait );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_478","title":"\u6982\u8981","text":"<p>\u7528\u4e8e\u5ef6\u8fdf\u4e00\u4e2a\u51fd\u6570\u7684\u6267\u884c\u5230RTOS\u5b88\u62a4\u8fdb\u7a0b\u4efb\u52a1(\u4e5f\u79f0\u4e3a\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\uff0c\u56e0\u6b64\u8be5\u51fd\u6570\u5728timers.c\u4e2d\u5b9e\u73b0\uff0c\u5e76\u4ee5' timer '\u4f5c\u4e3a\u524d\u7f00)\u3002</p> <p>\u8fd9\u4e2a\u51fd\u6570\u4e0d\u80fd\u4ece\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u4e2d\u8c03\u7528\u3002\u8bf7\u53c2\u89c1xTimerPendFunctionCallFromISR()\u83b7\u53d6\u53ef\u4ee5\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u8c03\u7528\u7684\u7248\u672c\u3002</p> <p>\u53ef\u4ee5\u5ef6\u8fdf\u5230RTOS\u5b88\u62a4\u8fdb\u7a0b\u4efb\u52a1\u7684\u51fd\u6570\u5fc5\u987b\u5177\u6709\u4e0b\u8ff0\u539f\u578b\u3002</p> <pre><code>void vPendableFunction( void *pvParameter1, uint32_t ulParameter2 );\n</code></pre> <p>pvParameter1\u548culParameter2\u53c2\u6570\u4f9b\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u4f7f\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_479","title":"\u53c2\u6570","text":"<p>xFunctionToPend</p> <ul> <li>\u8981\u4ece\u8ba1\u65f6\u5668\u670d\u52a1/\u5b88\u62a4\u8fdb\u7a0b\u4efb\u52a1\u4e2d\u6267\u884c\u7684\u51fd\u6570\u3002\u8be5\u51fd\u6570\u5fc5\u987b\u7b26\u5408\u6982\u8981\u6240\u793a\u7684PendedFunction_t\u539f\u578b\u3002</li> </ul> <p>pvParameter1</p> <ul> <li>\u4f5c\u4e3a\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u9012\u7ed9\u56de\u8c03\u51fd\u6570\u7684\u503c\u3002\u8be5\u5f62\u53c2\u5177\u6709void *\u7c7b\u578b\uff0c\u5141\u8bb8\u5b83\u7528\u4e8e\u4f20\u9012\u4efb\u4f55\u7c7b\u578b\u3002\u4f8b\u5982\uff0c\u6574\u578b\u53ef\u4ee5\u88ab\u8f6c\u6362\u4e3avoid *\uff0c\u6216\u8005void *\u53ef\u4ee5\u7528\u6765\u6307\u5411\u4e00\u4e2a\u7ed3\u6784\u3002</li> </ul> <p>ulParameter2</p> <ul> <li>\u4f5c\u4e3a\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4f20\u9012\u7ed9\u56de\u8c03\u51fd\u6570\u7684\u503c\u3002</li> </ul> <p>xTicksToWait</p> <ul> <li>\u8c03\u7528xTimerPendFunctionCall()\u5c06\u5bfc\u81f4\u5728\u961f\u5217\u4e2d\u5411\u8ba1\u65f6\u5668\u5b88\u62a4\u8fdb\u7a0b\u4efb\u52a1(\u4e5f\u79f0\u4e3a\u8ba1\u65f6\u5668\u670d\u52a1\u4efb\u52a1)\u53d1\u9001\u6d88\u606f\u3002xTicksToWait\u6307\u5b9a\u8c03\u7528\u4efb\u52a1\u5728Blocked\u72b6\u6001\u4e0b\u7b49\u5f85(\u56e0\u6b64\u4e0d\u6d88\u8017\u4efb\u4f55\u5904\u7406\u65f6\u95f4)\u7684\u65f6\u95f4\u91cf\uff0c\u4ee5\u4fbf\u5728\u961f\u5217\u5df2\u6ee1\u65f6\u961f\u5217\u4e0a\u6709\u53ef\u7528\u7a7a\u95f4\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_480","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS</p> <ul> <li>\u6d88\u606f\u5df2\u6210\u529f\u53d1\u9001\u7ed9RTOS\u5b88\u62a4\u8fdb\u7a0b\u4efb\u52a1\u3002</li> </ul> <p>\u4efb\u4f55\u5176\u4ed6\u503c</p> <ul> <li>\u6d88\u606f\u6ca1\u6709\u53d1\u9001\u5230RTOS\u5b88\u62a4\u8fdb\u7a0b\u4efb\u52a1\uff0c\u56e0\u4e3a\u6d88\u606f\u961f\u5217\u5df2\u7ecf\u6ee1\u4e86\u3002\u961f\u5217\u7684\u957f\u5ea6\u7531FreeRTOSConfig.h\u4e2d\u7684configTIMER_QUEUE_LENGTH\u7684\u503c\u8bbe\u7f6e\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_481","title":"\u63d0\u793a","text":"<p>INCLUDE_xTimerPendFunctionCall()\u548cconfigUSE_TIMERS\u5fc5\u987b\u540c\u65f6\u5728FreeRTOSConfig.h\u4e2d\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u4fbfxTimerPendFunctionCall()\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#513-xtimerpendfunctioncallfromisr","title":"5.13 xTimerPendFunctionCallFromISR()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctimers.h\u201dBaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend,                                       void *pvParameter1,                                         uint32_t ulParameter2,                                          BaseType_t *pxHigherPriorityTaskWoken );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_482","title":"\u6982\u8981","text":"<p>\u7528\u4e8e\u5e94\u7528\u7a0b\u5e8f\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\uff0c\u5c06\u51fd\u6570\u7684\u6267\u884c\u5ef6\u8fdf\u5230RTOS\u5b88\u62a4\u8fdb\u7a0b\u4efb\u52a1(\u4e5f\u79f0\u4e3a\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\uff0c\u56e0\u6b64\u8be5\u51fd\u6570\u5728timers.c\u4e2d\u5b9e\u73b0\uff0c\u5e76\u4ee5' timer '\u4f5c\u4e3a\u524d\u7f00)\u3002</p> <p>\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f(ISR)\u5e94\u8be5\u4fdd\u6301\u5c3d\u53ef\u80fd\u77ed\u7684\u65f6\u95f4\uff0c\u4f46\u6709\u65f6ISR\u8981\u4e48\u6709\u5f88\u591a\u5904\u7406\u8981\u505a\uff0c\u8981\u4e48\u9700\u8981\u6267\u884c\u4e0d\u786e\u5b9a\u7684\u5904\u7406\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528xTimerPendFunctionCallFromISR()\u5c06\u51fd\u6570\u7684\u5904\u7406\u63a8\u8fdf\u5230RTOS\u5b88\u62a4\u8fdb\u7a0b\u4efb\u52a1\u3002</p> <p>\u63d0\u4f9b\u4e86\u4e00\u79cd\u673a\u5236\uff0c\u5141\u8bb8\u4e2d\u65ad\u76f4\u63a5\u8fd4\u56de\u5230\u968f\u540e\u5c06\u6267\u884c\u6302\u8d77\u51fd\u6570\u7684\u4efb\u52a1\u3002\u8fd9\u5141\u8bb8\u56de\u8c03\u51fd\u6570\u5728\u4e2d\u65ad\u65f6\u95f4\u5185\u8fde\u7eed\u6267\u884c\u2014\u2014\u5c31\u50cf\u56de\u8c03\u51fd\u6570\u5728\u4e2d\u65ad\u672c\u8eab\u4e2d\u6267\u884c\u4e00\u6837\u3002</p> <p>\u53ef\u4ee5\u5ef6\u8fdf\u5230RTOS\u5b88\u62a4\u8fdb\u7a0b\u4efb\u52a1\u7684\u51fd\u6570\u5fc5\u987b\u5177\u6709\u4e0b\u8ff0\u539f\u578b\u3002</p> <pre><code>void vPendableFunction( void *pvParameter1, uint32_t ulParameter2 );\n</code></pre> <p>pvParameter1\u548culParameter2\u53c2\u6570\u4f9b\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u4f7f\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_483","title":"\u53c2\u6570","text":"<p>xFunctionToPend</p> <ul> <li>\u8981\u4ece\u8ba1\u65f6\u5668\u670d\u52a1/\u5b88\u62a4\u8fdb\u7a0b\u4efb\u52a1\u4e2d\u6267\u884c\u7684\u51fd\u6570\u3002\u8be5\u51fd\u6570\u5fc5\u987b\u7b26\u5408\u6e05\u5355204\u6240\u793a\u7684PendedFunction_t\u539f\u578b\u3002</li> </ul> <p>pvParameter1</p> <ul> <li>\u5c06\u4f5c\u4e3a\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u9012\u7ed9\u56de\u8c03\u51fd\u6570\u7684\u503c\u3002\u8be5\u5f62\u53c2\u5177\u6709void *\u7c7b\u578b\uff0c\u5141\u8bb8\u5b83\u7528\u4e8e\u4f20\u9012\u4efb\u4f55\u7c7b\u578b\u3002\u4f8b\u5982\uff0c\u6574\u578b\u53ef\u4ee5\u88ab\u8f6c\u6362\u4e3avoid *\uff0c\u6216\u8005void *\u53ef\u4ee5\u7528\u6765\u6307\u5411\u4e00\u4e2a\u7ed3\u6784\u3002</li> </ul> <p>ulParameter2</p> <ul> <li>\u5c06\u4f5c\u4e3a\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4f20\u9012\u7ed9\u56de\u8c03\u51fd\u6570\u7684\u503c\u3002</li> </ul> <p>pxHigherPriorityTaskWoken</p> <ul> <li>\u8c03\u7528xTimerPendFunctionCallFromISR()\u5c06\u5bfc\u81f4\u4e00\u6761\u6d88\u606f\u5728\u961f\u5217\u4e2d\u88ab\u53d1\u9001\u5230RTOS\u8ba1\u65f6\u5668\u5b88\u62a4\u8fdb\u7a0b\u4efb\u52a1\u3002\u5982\u679c\u5b88\u62a4\u8fdb\u7a0b\u7684\u4f18\u5148\u7ea7\u7684\u4efb\u52a1(\u8fd9\u662f\u7531configTIMER_TASK_PRIORITY FreeRTOSConfig.h)\u7684\u4ef7\u503c\u9ad8\u4e8e\u5f53\u524d\u8fd0\u884c\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7(\u4efb\u52a1\u4e2d\u65ad\u6253\u65ad\u4e86)\u7136\u540e* pxHigherPriorityTaskWoken\u5c06\u88ab\u8bbe\u7f6e\u5728xTimerPendFunctionCallFromISR pdTRUE (),\u6307\u793a\u5728\u4e2d\u65ad\u9000\u51fa\u4e4b\u524d\u5e94\u8be5\u8bf7\u6c42\u4e00\u4e2a\u4e0a\u4e0b\u6587\u5207\u6362\u3002\u56e0\u6b64\uff0c* pxhigherprioritytask\u5524\u9192\u5fc5\u987b\u521d\u59cb\u5316\u4e3apdFALSE\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_484","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS</p> <ul> <li>\u6d88\u606f\u5df2\u6210\u529f\u53d1\u9001\u7ed9RTOS\u5b88\u62a4\u8fdb\u7a0b\u4efb\u52a1\u3002</li> </ul> <p>\u4efb\u4f55\u5176\u4ed6\u503c</p> <ul> <li>\u6d88\u606f\u6ca1\u6709\u53d1\u9001\u5230RTOS\u5b88\u62a4\u8fdb\u7a0b\u4efb\u52a1\uff0c\u56e0\u4e3a\u6d88\u606f\u961f\u5217\u5df2\u7ecf\u6ee1\u4e86\u3002\u961f\u5217\u7684\u957f\u5ea6\u7531FreeRTOSConfig.h\u4e2d\u7684configTIMER_QUEUE_LENGTH\u7684\u503c\u8bbe\u7f6e\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_485","title":"\u63d0\u793a","text":"<p>INCLUDE_xTimerPendFunctionCall()\u548cconfigUSE_TIMERS\u5fc5\u987b\u540c\u65f6\u5728FreeRTOSConfig.h\u4e2d\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u4fbfxTimerPendFunctionCallFromISR()\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_486","title":"\u793a\u4f8b","text":"<pre><code>/* The callback function that will execute in the context of the daemon task.Note callback functions must all use this same prototype. */void vProcessInterface( void *pvParameter1, uint32_t ulParameter2 ){   BaseType_t xInterfaceToService; /* The interface that requires servicing is passed in the second parameter. The first parameter is not used in this case. */    xInterfaceToService = ( BaseType_t ) ulParameter2;  /* ...Perform the processing here... */}/* An ISR that receives data packets from multiple interfaces */void vAnISR( void ){    BaseType_t xInterfaceToService, xHigherPriorityTaskWoken;   /* Query the hardware to determine which interface needs processing. */ xInterfaceToService = prvCheckInterfaces(); /* The actual processing is to be deferred to a task. Request the       vProcessInterface() callback function is executed, passing in the number of     the interface that needs processing. The interface to service is passed in      the second parameter. The first parameter is not used in this case. */  xHigherPriorityTaskWoken = pdFALSE; xTimerPendFunctionCallFromISR( vProcessInterface,                                   NULL,                                   ( uint32_t ) xInterfaceToService,                                   &amp;xHigherPriorityTaskWoken );    /* If xHigherPriorityTaskWoken is now set to pdTRUE then a context switch   should be requested. The macro used is port specific and will be either portYIELD_FROM_ISR() or portEND_SWITCHING_ISR() - refer to the documentation    page for the port being used. */    portYIELD_FROM_ISR( xHigherPriorityTaskWoken );}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#514-xtimerreset","title":"5.14 xTimerReset()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctimers.h\u201dBaseType_t xTimerReset( TimerHandle_t xTimer, TickType_t xTicksToWait );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_487","title":"\u6982\u8981","text":"<p>\u91cd\u542f\u4e00\u4e2a\u8ba1\u65f6\u5668\u3002xTimerResetFromISR()\u662f\u4e00\u4e2a\u53ef\u4ee5\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u8c03\u7528\u7684\u7b49\u4ef7\u51fd\u6570\u3002</p> <p>\u5982\u679c\u8ba1\u65f6\u5668\u5df2\u7ecf\u5728\u8fd0\u884c\uff0c\u90a3\u4e48\u8ba1\u65f6\u5668\u5c06\u6839\u636e\u8c03\u7528xTimerReset()\u7684\u65f6\u95f4\u91cd\u65b0\u8ba1\u7b97\u5176\u5230\u671f\u65f6\u95f4\u3002</p> <p>\u5982\u679c\u8ba1\u65f6\u5668\u6ca1\u6709\u8fd0\u884c\uff0c\u90a3\u4e48\u8be5\u8ba1\u65f6\u5668\u5c06\u8ba1\u7b97\u4e00\u4e2a\u76f8\u5bf9\u4e8e\u8c03\u7528xTimerReset()\u65f6\u7684\u5230\u671f\u65f6\u95f4\uff0c\u7136\u540e\u8ba1\u65f6\u5668\u5c06\u5f00\u59cb\u8fd0\u884c\u3002\u5728\u672c\u4f8b\u4e2d\uff0cxTimerReset()\u5728\u529f\u80fd\u4e0a\u7b49\u540c\u4e8exTimerStart()\u3002</p> <p>\u91cd\u7f6e\u8ba1\u65f6\u5668\u53ef\u786e\u4fdd\u8ba1\u65f6\u5668\u6b63\u5728\u8fd0\u884c\u3002\u5982\u679c\u5728\u6b64\u671f\u95f4\u8ba1\u65f6\u5668\u6ca1\u6709\u505c\u6b62\u3001\u5220\u9664\u6216\u91cd\u7f6e\uff0c\u5219\u5728\u8c03\u7528xTimerReset()\u4e4b\u540e\uff0c\u4e0e\u8ba1\u65f6\u5668\u5173\u8054\u7684\u56de\u8c03\u51fd\u6570\u5c06\u88ab\u8c03\u7528' n ' ticks\uff0c\u5176\u4e2d' n '\u662f\u8ba1\u65f6\u5668\u5b9a\u4e49\u7684\u5468\u671f\u3002</p> <p>\u5982\u679c\u5728\u542f\u52a8\u8c03\u5ea6\u5668\u4e4b\u524d\u8c03\u7528xTimerReset()\uff0c\u90a3\u4e48\u5b9a\u65f6\u5668\u5728\u542f\u52a8\u8c03\u5ea6\u5668\u4e4b\u524d\u4e0d\u4f1a\u5f00\u59cb\u8fd0\u884c\uff0c\u5e76\u4e14\u5b9a\u65f6\u5668\u7684\u5230\u671f\u65f6\u95f4\u5c06\u76f8\u5bf9\u4e8e\u542f\u52a8\u8c03\u5ea6\u5668\u7684\u65f6\u95f4\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_488","title":"\u53c2\u6570","text":"<p>xTimer</p> <ul> <li>\u5b9a\u65f6\u5668\u6b63\u5728\u91cd\u7f6e\u3001\u542f\u52a8\u6216\u91cd\u65b0\u542f\u52a8\u3002</li> </ul> <p>xTicksToWait</p> <ul> <li> <p>\u8ba1\u65f6\u5668\u529f\u80fd\u4e0d\u662f\u7531\u6838\u5fc3FreeRTOS\u4ee3\u7801\u63d0\u4f9b\u7684\uff0c\u800c\u662f\u7531\u8ba1\u65f6\u5668\u670d\u52a1(\u6216\u5b88\u62a4\u8fdb\u7a0b)\u4efb\u52a1\u63d0\u4f9b\u7684\u3002FreeRTOS\u5b9a\u65f6\u5668API\u901a\u8fc7\u4e00\u4e2a\u540d\u4e3a\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u7684\u961f\u5217\u5411\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u53d1\u9001\u547d\u4ee4\u3002xTicksToWait\u6307\u5b9a\u4efb\u52a1\u5e94\u8be5\u4fdd\u6301\u5728Blocked\u72b6\u6001\uff0c\u7b49\u5f85\u8ba1\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4e0a\u7684\u7a7a\u95f4\u53ef\u7528\u7684\u6700\u5927\u65f6\u95f4\uff0c\u5982\u679c\u961f\u5217\u5df2\u7ecf\u6ee1\u4e86\u3002</p> </li> <li> <p>\u5757\u65f6\u95f4\u4ee5\u6ef4\u7b54\u5468\u671f\u6307\u5b9a\uff0c\u56e0\u6b64\u5b83\u8868\u793a\u7684\u7edd\u5bf9\u65f6\u95f4\u53d6\u51b3\u4e8e\u6ef4\u7b54\u9891\u7387\u3002\u53ef\u4ee5\u4f7f\u7528pdMS_TO_TICKS()\u5b8f\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5ticks\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u3002</p> </li> <li>\u5c06xTicksToWait\u8bbe\u7f6e\u4e3aportMAX_DELAY\u5c06\u5bfc\u81f4\u4efb\u52a1\u65e0\u9650\u671f\u7b49\u5f85(\u6ca1\u6709\u8d85\u65f6)\uff0c\u524d\u63d0\u662fFreeRTOSConfig.h\u4e2dINCLUDE_vTaskSuspend\u8bbe\u7f6e\u4e3a1\u3002</li> <li>\u5982\u679c\u5728\u542f\u52a8\u8c03\u5ea6\u5668\u4e4b\u524d\u8c03\u7528xTimerReset()\uff0c\u5219xTicksToWait\u5c06\u88ab\u5ffd\u7565\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_489","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS</p> <ul> <li> <p>\u6210\u529f\u5c06reset\u547d\u4ee4\u53d1\u9001\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u3002</p> </li> <li> <p>\u5982\u679c\u4e00\u5757\u6307\u5b9a\u65f6\u95f4(xTicksToWait\u4e0d\u662f\u96f6),\u7136\u540e\u8c03\u7528\u4efb\u52a1\u53ef\u80fd\u88ab\u8fdb\u5165\u963b\u585e\u72b6\u6001\u7b49\u5f85\u7a7a\u95f4\u53ef\u7528\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u51fd\u6570\u8fd4\u56de\u4e4b\u524d,\u4f46\u6570\u636e\u6210\u529f\u5199\u5165\u961f\u5217\u963b\u585e\u65f6\u95f4\u5230\u671f\u4e4b\u524d\u3002</p> </li> <li> <p>\u5f53\u547d\u4ee4\u88ab\u5b9e\u9645\u5904\u7406\u65f6\uff0c\u5c06\u53d6\u51b3\u4e8e\u8ba1\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u76f8\u5bf9\u4e8e\u7cfb\u7edf\u4e2d\u5176\u4ed6\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff0c\u5c3d\u7ba1\u8ba1\u65f6\u5668\u7684\u5230\u671f\u65f6\u95f4\u662f\u76f8\u5bf9\u4e8e\u5b9e\u9645\u8c03\u7528xTimerReset()\u65f6\u7684\u3002\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u7531configTIMER_TASK_PRIORITY\u914d\u7f6e\u5e38\u91cf\u8bbe\u7f6e\u3002</p> </li> </ul> <p>pdFAIL</p> <ul> <li> <p>reset\u547d\u4ee4\u6ca1\u6709\u53d1\u9001\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\uff0c\u56e0\u4e3a\u961f\u5217\u5df2\u7ecf\u6ee1\u4e86\u3002</p> </li> <li> <p>\u5982\u679c\u6307\u5b9a\u4e86\u4e00\u4e2a\u5757\u65f6\u95f4(xTicksToWait\u4e0d\u4e3a\u96f6)\uff0c\u90a3\u4e48\u8c03\u7528\u4efb\u52a1\u5c06\u88ab\u7f6e\u4e8eBlocked\u72b6\u6001\uff0c\u7b49\u5f85\u8ba1\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u5728\u961f\u5217\u4e2d\u817e\u51fa\u7a7a\u95f4\uff0c\u4f46\u6307\u5b9a\u7684\u5757\u65f6\u95f4\u5728\u6b64\u4e4b\u524d\u5df2\u7ecf\u8fc7\u671f\u3002</p> </li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_490","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86\u4f7fxTimerReset()\u53ef\u7528\uff0c\u5728FreeRTOSConfig.h\u4e2dconfigUSE_TIMERS\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_491","title":"\u793a\u4f8b","text":"<pre><code>/* In this example, when a key is pressed, an LCD back-light is switched on. If 5 seconds pass without a key being pressed, then the LCD back-light is switched off by a one-shot timer. */TimerHandle_t xBacklightTimer = NULL;/* The callback function assigned to the one-shot timer. In this case the parameter is not used. */void vBacklightTimerCallback( TimerHandle_t pxTimer ){   /* The timer expired, therefore 5 seconds must have passed since a key was pressed.     Switch off the LCD back-light. vSetBacklightState( BACKLIGHT_OFF );}/* The key press event handler. */void vKeyPressEventHandler( char cKey ){  /* Ensure the LCD back-light is on, then reset the timer that is responsible for        turning the back-light off after 5 seconds of key inactivity. Wait 10 ticks for the     reset command to be successfully sent if it cannot be sent immediately. */  vSetBacklightState( BACKLIGHT_ON ); if( xTimerReset( xBacklightTimer, 10 ) != pdPASS )  {       /* The reset command was not executed successfully. Take appropriate action here.           */  }   /* Perform the rest of the key processing here. */}void main( void ){   /* Create then start the one-shot timer that is responsible for turning the back-       light off if no keys are pressed within a 5 second period. */   xBacklightTimer = xTimerCreate( \"BcklghtTmr\" /* Just a text name, not used by the                                                                               kernel. */                                  pdMS_TO_TICKS( 5000 ), /* The timer period in ticks.                                                                                    */                                  pdFALSE, /* It is a one-shot timer. */                                  0, /* ID not used by the callback so can take any                                               value. */                                   vBacklightTimerCallback /* The callback function that                                                   switches the LCD back-light off. */                                 );  if( xBacklightTimer == NULL )   {       /* The timer was not created. */    }   else    {       /* Start the timer. No block time is specified, and even if one was it would be             ignored because the scheduler has not yet been started. */      if( xTimerStart( xBacklightTimer, 0 ) != pdPASS )       {           /* The timer could not be set into the Active state. */     }   }   /* Create tasks here. */    /* Starting the scheduler will start the timer running as xTimerStart has already       been called. */ xTaskStartScheduler();}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#515-xtimerresetfromisr","title":"5.15 xTimerResetFromISR()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctimers.h\u201dBaseType_t xTimerResetFromISR( TimerHandle_t xTimer,                               BaseType_t *pxHigherPriorityTaskWoken );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_492","title":"\u6982\u8981","text":"<p>xTimerReset()\u7684\u4e00\u4e2a\u7248\u672c\uff0c\u53ef\u4ee5\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e2d\u8c03\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_493","title":"\u53c2\u6570","text":"<p>xTimer</p> <ul> <li>\u6b63\u5728\u542f\u52a8\u3001\u91cd\u7f6e\u6216\u91cd\u65b0\u542f\u52a8\u7684\u5b9a\u65f6\u5668\u7684\u53e5\u67c4\u3002</li> </ul> <p>pxHigherPriorityTaskWoken</p> <ul> <li>xTimerResetFromISR()\u5c06\u547d\u4ee4\u5199\u5165\u8ba1\u65f6\u5668\u547d\u4ee4\u961f\u5217\u3002\u5982\u679c\u5199\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4f7f\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u79bb\u5f00\u963b\u585e\u72b6\u6001,\u548c\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u4f18\u5148\u7ea7\u7b49\u4e8e\u6216\u5927\u4e8e\u5f53\u524d\u6267\u884c\u7684\u4efb\u52a1(\u4efb\u52a1\u88ab\u6253\u65ad),\u7136\u540e* pxHigherPriorityTaskWoken\u5c06\u88ab\u8bbe\u7f6e\u5728xTimerResetFromISR pdTRUE\u5185\u90e8()\u51fd\u6570\u3002\u5982\u679cxTimerResetFromISR()\u5c06\u8fd9\u4e2a\u503c\u8bbe\u7f6e\u4e3apdTRUE\uff0c\u90a3\u4e48\u5e94\u8be5\u5728\u4e2d\u65ad\u9000\u51fa\u4e4b\u524d\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_494","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS</p> <ul> <li>\u6210\u529f\u5c06reset\u547d\u4ee4\u53d1\u9001\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u3002\u8be5\u547d\u4ee4\u5b9e\u9645\u88ab\u5904\u7406\u7684\u65f6\u95f4\u53d6\u51b3\u4e8e\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u76f8\u5bf9\u4e8e\u7cfb\u7edf\u4e2d\u5176\u4ed6\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff0c\u5c3d\u7ba1\u5b9a\u65f6\u5668\u7684\u5230\u671f\u65f6\u95f4\u76f8\u5bf9\u4e8e\u5b9e\u9645\u8c03\u7528xTimerResetFromISR()\u7684\u65f6\u95f4\u3002\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u7531configTIMER_TASK_PRIORITY\u914d\u7f6e\u5e38\u91cf\u8bbe\u7f6e\u3002</li> </ul> <p>pdFAIL</p> <ul> <li>reset\u547d\u4ee4\u6ca1\u6709\u53d1\u9001\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\uff0c\u56e0\u4e3a\u961f\u5217\u5df2\u7ecf\u6ee1\u4e86\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_495","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86xTimerResetFromISR()\u53ef\u7528\uff0c\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u5c06configUSE_TIMERS\u8bbe\u7f6e\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_496","title":"\u793a\u4f8b","text":"<pre><code>/* This scenario assumes xBacklightTimer has already been created. When a key is pressed, an LCD back-light is switched on. If 5 seconds pass without a key being pressed, then the LCD back-light is switched off by a one-shot timer. Unlike the example given for the xTimerReset() function, the key press event handler is an interrupt service routine. *//* The callback function assigned to the one-shot timer. In this case the parameter is not used. */void vBacklightTimerCallback( TimerHandle_t pxTimer ){   /* The timer expired, therefore 5 seconds must have passed since a key was  pressed. Switch off the LCD back-light. */  vSetBacklightState( BACKLIGHT_OFF );}/* The key press interrupt service routine. */void vKeyPressEventInterruptHandler( void ){ BaseType_t xHigherPriorityTaskWoken = pdFALSE;  /* Ensure the LCD back-light is on, then reset the timer that is responsible for    turning the back-light off after 5 seconds of key inactivity. This is an    interrupt service routine so can only call FreeRTOS API functions that end in   \"FromISR\". */   vSetBacklightState( BACKLIGHT_ON ); /* xTimerStartFromISR() or xTimerResetFromISR() could be called here as both    cause the timer to re-calculate its expiry time. xHigherPriorityTaskWoken was   initialized to pdFALSE when it was declared (in this function). */  if( xTimerResetFromISR( xBacklightTimer, &amp;xHigherPriorityTaskWoken ) != pdPASS )    {       /* The reset command was not executed successfully. Take appropriate action     here. */    }   /* Perform the rest of the key processing here. */  /* If xHigherPriorityTaskWoken equals pdTRUE, then a context switch should be   performed. The syntax required to perform a context switch from inside an ISR   varies from port to port, and from compiler to compiler. Inspect the demos for  the port you are using to find the actual syntax required. */   if( xHigherPriorityTaskWoken != pdFALSE )   {       /* Call the interrupt safe yield function here (actual function depends on      the FreeRTOS port being used). */   }}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#516-vtimersettimerid","title":"5.16 vTimerSetTimerID()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctimers.h\u201dvoid vTimerSetTimerID( TimerHandle_t xTimer, void *pvNewID );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_497","title":"\u6982\u8981","text":"<p>\u4e00\u4e2a\u6807\u8bc6\u7b26(ID)\u5728\u521b\u5efa\u8ba1\u65f6\u5668\u65f6\u88ab\u5206\u914d\u7ed9\u4e00\u4e2a\u8ba1\u65f6\u5668\uff0c\u5e76\u4e14\u53ef\u4ee5\u4f7f\u7528vTimerSetTimerID() API\u51fd\u6570\u5728\u4efb\u4f55\u65f6\u5019\u66f4\u6539\u5b83\u3002</p> <p>\u5982\u679c\u540c\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u88ab\u5206\u914d\u7ed9\u591a\u4e2a\u8ba1\u65f6\u5668\uff0c\u5219\u53ef\u4ee5\u5728\u56de\u8c03\u51fd\u6570\u5185\u90e8\u68c0\u67e5\u8ba1\u65f6\u5668\u6807\u8bc6\u7b26\uff0c\u4ee5\u786e\u5b9a\u54ea\u4e2a\u8ba1\u65f6\u5668\u5b9e\u9645\u4e0a\u5df2\u7ecf\u8fc7\u671f\u3002</p> <p>\u8ba1\u65f6\u5668\u6807\u8bc6\u7b26\u8fd8\u53ef\u4ee5\u7528\u4e8e\u5728\u8ba1\u65f6\u5668\u7684\u56de\u8c03\u51fd\u6570\u8c03\u7528\u4e4b\u95f4\u5b58\u50a8\u6570\u636e\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_498","title":"\u53c2\u6570","text":"<p>xTimer</p> <ul> <li>\u5b9a\u65f6\u5668\u7684\u53e5\u67c4\u88ab\u66f4\u65b0\u4e3a\u4e00\u4e2a\u65b0\u7684\u6807\u8bc6\u7b26\u3002</li> </ul> <p>pvNewID</p> <ul> <li>\u5b9a\u65f6\u5668\u6807\u8bc6\u7b26\u8981\u8bbe\u7f6e\u7684\u503c\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_499","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86xTimerSetTimerID()\u53ef\u7528\uff0c\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u5c06configUSE_TIMERS\u8bbe\u7f6e\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_500","title":"\u793a\u4f8b","text":"<pre><code>/* A callback function assigned to a timer. */void TimerCallbackFunction( TimerHandle_t pxExpiredTimer ){   uint32_t ulCallCount;   /* A count of the number of times this timer has expired and executed its   callback function is stored in the timer's ID. Retrieve the count, increment it,    then save it back into the timer's ID. */   ulCallCount = ( uint32_t ) pvTimerGetTimerID( pxExpiredTimer ); ulCallCount++;  vTimerSetTimerID( pxExpiredTimer, ( void * ) ulCallCount );}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#517-xtimerstart","title":"5.17 xTimerStart()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctimers.h\u201dBaseType_t xTimerStart( TimerHandle_t xTimer, TickType_t xTicksToWait );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_501","title":"\u6982\u8981","text":"<p>\u542f\u52a8\u8ba1\u65f6\u5668\u8fd0\u884c\u3002xTimerStartFromISR()\u662f\u4e00\u4e2a\u53ef\u4ee5\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u8c03\u7528\u7684\u7b49\u4ef7\u51fd\u6570\u3002</p> <p>\u5982\u679c\u8ba1\u65f6\u5668\u5c1a\u672a\u8fd0\u884c\uff0c\u90a3\u4e48\u8be5\u8ba1\u65f6\u5668\u5c06\u8ba1\u7b97\u76f8\u5bf9\u4e8e\u8c03\u7528xTimerStart()\u65f6\u7684\u5230\u671f\u65f6\u95f4\u3002</p> <p>\u5982\u679c\u8ba1\u65f6\u5668\u5df2\u7ecf\u8fd0\u884c\uff0c\u5219xTimerStart()\u5728\u529f\u80fd\u4e0a\u7b49\u540c\u4e8exTimerReset()\u3002</p> <p>\u5982\u679c\u5728\u6b64\u671f\u95f4\u6ca1\u6709\u505c\u6b62\u3001\u5220\u9664\u6216\u91cd\u7f6e\u8ba1\u65f6\u5668\uff0c\u5219\u5728\u8c03\u7528xTimerStart()\u540e\uff0c\u4e0e\u8ba1\u65f6\u5668\u5173\u8054\u7684\u56de\u8c03\u51fd\u6570\u5c06\u88ab\u79f0\u4e3a\u201cn\u201dticks\uff0c\u5176\u4e2d\u201cn\u201d\u662f\u8ba1\u65f6\u5668\u5b9a\u4e49\u7684\u5468\u671f\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_502","title":"\u53c2\u6570","text":"<p>xTimer</p> <ul> <li>\u8981\u91cd\u7f6e\u3001\u542f\u52a8\u6216\u91cd\u542f\u7684\u5b9a\u65f6\u5668\u3002</li> </ul> <p>xTicksToWait</p> <ul> <li> <p>\u8ba1\u65f6\u5668\u529f\u80fd\u4e0d\u662f\u7531\u6838\u5fc3FreeRTOS\u4ee3\u7801\u63d0\u4f9b\u7684\uff0c\u800c\u662f\u7531\u8ba1\u65f6\u5668\u670d\u52a1(\u6216\u5b88\u62a4\u8fdb\u7a0b)\u4efb\u52a1\u63d0\u4f9b\u7684\u3002FreeRTOS\u5b9a\u65f6\u5668API\u901a\u8fc7\u4e00\u4e2a\u540d\u4e3a\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u7684\u961f\u5217\u5411\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u53d1\u9001\u547d\u4ee4\u3002xTicksToWait\u6307\u5b9a\u5f53\u8ba1\u65f6\u5668\u547d\u4ee4\u961f\u5217\u5df2\u7ecf\u6ee1\u65f6\uff0c\u4efb\u52a1\u5e94\u4fdd\u6301\u5728Blocked\u72b6\u6001\u4ee5\u7b49\u5f85\u7a7a\u95f4\u53ef\u7528\u7684\u6700\u5927\u65f6\u95f4\u91cf\u3002</p> </li> <li> <p>\u5757\u65f6\u95f4\u4ee5\u6ef4\u7b54\u5468\u671f\u6307\u5b9a\uff0c\u56e0\u6b64\u5b83\u8868\u793a\u7684\u7edd\u5bf9\u65f6\u95f4\u53d6\u51b3\u4e8e\u6ef4\u7b54\u9891\u7387\u3002\u53ef\u4ee5\u4f7f\u7528pdMS_TO_TICKS()\u5b8f\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5ticks\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u3002</p> </li> <li>\u5c06xTicksToWait\u8bbe\u7f6e\u4e3aportMAX_DELAY\u5c06\u5bfc\u81f4\u4efb\u52a1\u65e0\u9650\u671f\u7b49\u5f85(\u6ca1\u6709\u8d85\u65f6)\uff0c\u524d\u63d0\u662fFreeRTOSConfig.h\u4e2dINCLUDE_vTaskSuspend\u8bbe\u7f6e\u4e3a1\u3002</li> <li>\u5982\u679c\u5728\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u4e4b\u524d\u8c03\u7528xTimerStart()\uff0c\u5219xTicksToWait\u5c06\u88ab\u5ffd\u7565\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_503","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS</p> <ul> <li>start\u547d\u4ee4\u6210\u529f\u53d1\u9001\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u3002</li> <li>\u5982\u679c\u4e00\u5757\u6307\u5b9a\u65f6\u95f4(xTicksToWait\u4e0d\u662f\u96f6),\u7136\u540e\u8c03\u7528\u4efb\u52a1\u53ef\u80fd\u88ab\u8fdb\u5165\u963b\u585e\u72b6\u6001\u7b49\u5f85\u7a7a\u95f4\u53ef\u7528\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u51fd\u6570\u8fd4\u56de\u4e4b\u524d,\u4f46\u6570\u636e\u6210\u529f\u5199\u5165\u961f\u5217\u963b\u585e\u65f6\u95f4\u5230\u671f\u4e4b\u524d\u3002</li> <li>\u5f53\u547d\u4ee4\u88ab\u5b9e\u9645\u5904\u7406\u65f6\uff0c\u5c06\u53d6\u51b3\u4e8e\u8ba1\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u76f8\u5bf9\u4e8e\u7cfb\u7edf\u4e2d\u5176\u4ed6\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff0c\u5c3d\u7ba1\u8ba1\u65f6\u5668\u7684\u5230\u671f\u65f6\u95f4\u662f\u76f8\u5bf9\u4e8e\u5b9e\u9645\u8c03\u7528xTimerStart()\u7684\u65f6\u95f4\u3002\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u7531configTIMER_TASK_PRIORITY\u914d\u7f6e\u5e38\u91cf\u8bbe\u7f6e\u3002</li> </ul> <p>pdFAIL</p> <ul> <li>\u542f\u52a8\u547d\u4ee4\u6ca1\u6709\u53d1\u9001\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\uff0c\u56e0\u4e3a\u961f\u5217\u5df2\u7ecf\u6ee1\u4e86\u3002</li> <li>\u5982\u679c\u6307\u5b9a\u4e86\u4e00\u4e2a\u5757\u65f6\u95f4(xTicksToWait\u4e0d\u4e3a\u96f6)\uff0c\u90a3\u4e48\u8c03\u7528\u4efb\u52a1\u5c06\u88ab\u7f6e\u4e8eBlocked\u72b6\u6001\uff0c\u7b49\u5f85\u8ba1\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u5728\u961f\u5217\u4e2d\u817e\u51fa\u7a7a\u95f4\uff0c\u4f46\u6307\u5b9a\u7684\u5757\u65f6\u95f4\u5728\u6b64\u4e4b\u524d\u5df2\u7ecf\u8fc7\u671f\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_504","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86\u4f7fxTimerStart()\u53ef\u7528\uff0c\u5728FreeRTOSConfig.h\u4e2dconfigUSE_TIMERS\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_505","title":"\u793a\u4f8b","text":"<p>\u8bf7\u53c2\u9605xTimerCreate() API\u51fd\u6570\u7684\u793a\u4f8b\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#518-xtimerstartfromisr","title":"5.18 xTimerStartFromISR()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctimers.h\u201dBaseType_t xTimerStartFromISR( TimerHandle_t xTimer,                               BaseType_t *pxHigherPriorityTaskWoken );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_506","title":"\u6982\u8981","text":"<p>\u53ef\u4ee5\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u8c03\u7528\u7684xTimerStart()\u7248\u672c\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_507","title":"\u53c2\u6570","text":"<p>xTimer</p> <ul> <li>\u6b63\u5728\u542f\u52a8\u3001\u91cd\u7f6e\u6216\u91cd\u65b0\u542f\u52a8\u7684\u5b9a\u65f6\u5668\u7684\u53e5\u67c4\u3002</li> </ul> <p>pxHigherPriorityTaskWoken</p> <ul> <li>xTimerStartFromISR()\u5c06\u547d\u4ee4\u5199\u5165\u8ba1\u65f6\u5668\u547d\u4ee4\u961f\u5217\u3002\u5982\u679c\u5199\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4f7f\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u79bb\u5f00\u963b\u585e\u72b6\u6001,\u548c\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u4f18\u5148\u7ea7\u7b49\u4e8e\u6216\u5927\u4e8e\u5f53\u524d\u6267\u884c\u7684\u4efb\u52a1(\u4efb\u52a1\u88ab\u6253\u65ad),\u7136\u540e* pxHigherPriorityTaskWoken\u5c06\u88ab\u8bbe\u7f6e\u5728xTimerStartFromISR pdTRUE\u5185\u90e8()\u51fd\u6570\u3002\u5982\u679cxTimerStartFromISR()\u5c06\u8fd9\u4e2a\u503c\u8bbe\u7f6e\u4e3apdTRUE\uff0c\u90a3\u4e48\u5e94\u8be5\u5728\u4e2d\u65ad\u9000\u51fa\u4e4b\u524d\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_508","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS</p> <ul> <li>start\u547d\u4ee4\u6210\u529f\u53d1\u9001\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u3002\u5f53\u547d\u4ee4\u88ab\u5b9e\u9645\u5904\u7406\u65f6\uff0c\u5c06\u53d6\u51b3\u4e8e\u8ba1\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u76f8\u5bf9\u4e8e\u7cfb\u7edf\u4e2d\u5176\u4ed6\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff0c\u5c3d\u7ba1\u8ba1\u65f6\u5668\u7684\u5230\u671f\u65f6\u95f4\u662f\u76f8\u5bf9\u4e8e\u5b9e\u9645\u8c03\u7528xTimerStartFromISR()\u7684\u65f6\u95f4\u3002\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u7531configTIMER_TASK_PRIORITY\u914d\u7f6e\u5e38\u91cf\u8bbe\u7f6e\u3002</li> </ul> <p>pdFAIL</p> <ul> <li>\u542f\u52a8\u547d\u4ee4\u6ca1\u6709\u53d1\u9001\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\uff0c\u56e0\u4e3a\u961f\u5217\u5df2\u7ecf\u6ee1\u4e86\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_509","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86\u4f7fxTimerStartFromISR()\u53ef\u7528\uff0c\u5728FreeRTOSConfig.h\u4e2dconfigUSE_TIMERS\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_510","title":"\u793a\u4f8b","text":"<pre><code>/* This scenario assumes xBacklightTimer has already been created. When a key is pressed, an LCD back-light is switched on. If 5 seconds pass without a key being pressed, then the LCD back-light is switched off by a one-shot timer. Unlike the example given for the xTimerReset() function, the key press event handler is an interrupt service routine. *//* The callback function assigned to the one-shot timer. In this case the parameter is not used. */void vBacklightTimerCallback( TimerHandle_t pxTimer ){   /* The timer expired, therefore 5 seconds must have passed since a key was  pressed. Switch off the LCD back-light. */  vSetBacklightState( BACKLIGHT_OFF );}/* The key press interrupt service routine. */void vKeyPressEventInterruptHandler( void ){ BaseType_t xHigherPriorityTaskWoken = pdFALSE;  /* Ensure the LCD back-light is on, then restart the timer that is responsible  for turning the back-light off after 5 seconds of key inactivity. This is an    interrupt service routine so can only call FreeRTOS API functions that end in   \"FromISR\". */   vSetBacklightState( BACKLIGHT_ON ); /* xTimerStartFromISR() or xTimerResetFromISR() could be called here as both    cause the timer to re-calculate its expiry time. xHigherPriorityTaskWoken was   initialized to pdFALSE when it was declared (in this function). */  if( xTimerStartFromISR( xBacklightTimer, &amp;xHigherPriorityTaskWoken ) != pdPASS )    {       /* The start command was not executed successfully. Take appropriate action        here. */ }   /* Perform the rest of the key processing here. */  /* If xHigherPriorityTaskWoken equals pdTRUE, then a context switch should be   performed. The syntax required to perform a context switch from inside an ISR   varies from port to port, and from compiler to compiler. Inspect the demos for  the port you are using to find the actual syntax required. */    if( xHigherPriorityTaskWoken != pdFALSE )  {       /* Call the interrupt safe yield function here (actual function depends on      the FreeRTOS port being used). */   }}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#519-xtimerstop","title":"5.19 xTimerStop()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctimers.h\u201dBaseType_t xTimerStop( TimerHandle_t xTimer, TickType_t xTicksToWait );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_511","title":"\u6982\u8981","text":"<p>\u505c\u6b62\u8ba1\u65f6\u5668\u8fd0\u884c\u3002xTimerStopFromISR()\u662f\u4e00\u4e2a\u53ef\u4ee5\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u8c03\u7528\u7684\u7b49\u4ef7\u51fd\u6570\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_512","title":"\u53c2\u6570","text":"<p>xTimer</p> <ul> <li>\u8981\u505c\u6b62\u7684\u8ba1\u65f6\u5668\u3002</li> </ul> <p>xTicksToWait</p> <ul> <li> <p>\u8ba1\u65f6\u5668\u529f\u80fd\u4e0d\u662f\u7531\u6838\u5fc3FreeRTOS\u4ee3\u7801\u63d0\u4f9b\u7684\uff0c\u800c\u662f\u7531\u8ba1\u65f6\u5668\u670d\u52a1(\u6216\u5b88\u62a4\u8fdb\u7a0b)\u4efb\u52a1\u63d0\u4f9b\u7684\u3002FreeRTOS\u5b9a\u65f6\u5668API\u901a\u8fc7\u4e00\u4e2a\u540d\u4e3a\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u7684\u961f\u5217\u5411\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u53d1\u9001\u547d\u4ee4\u3002xTicksToWait\u6307\u5b9a\u5f53\u8ba1\u65f6\u5668\u547d\u4ee4\u961f\u5217\u5df2\u7ecf\u6ee1\u65f6\uff0c\u4efb\u52a1\u5e94\u4fdd\u6301\u5728Blocked\u72b6\u6001\u4ee5\u7b49\u5f85\u7a7a\u95f4\u53ef\u7528\u7684\u6700\u5927\u65f6\u95f4\u91cf\u3002</p> </li> <li> <p>\u5757\u65f6\u95f4\u4ee5\u6ef4\u7b54\u5468\u671f\u6307\u5b9a\uff0c\u56e0\u6b64\u5b83\u8868\u793a\u7684\u7edd\u5bf9\u65f6\u95f4\u53d6\u51b3\u4e8e\u6ef4\u7b54\u9891\u7387\u3002\u53ef\u4ee5\u4f7f\u7528pdMS_TO_TICKS()\u5b8f\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5ticks\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u3002</p> </li> <li> <p>\u5c06xTicksToWait\u8bbe\u7f6e\u4e3aportMAX_DELAY\u5c06\u5bfc\u81f4\u4efb\u52a1\u65e0\u9650\u671f\u7b49\u5f85(\u6ca1\u6709\u8d85\u65f6)\uff0c\u524d\u63d0\u662fFreeRTOSConfig.h\u4e2dINCLUDE_vTaskSuspend\u8bbe\u7f6e\u4e3a1\u3002</p> </li> <li> <p>\u5982\u679c\u5728\u542f\u52a8\u8c03\u5ea6\u7a0b\u5e8f\u4e4b\u524d\u8c03\u7528xTimerStop()\uff0c\u5219xTicksToWait\u5c06\u88ab\u5ffd\u7565\u3002</p> </li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_513","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS</p> <ul> <li> <p>stop\u547d\u4ee4\u6210\u529f\u53d1\u9001\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u3002</p> </li> <li> <p>\u5982\u679c\u4e00\u5757\u6307\u5b9a\u65f6\u95f4(xTicksToWait\u4e0d\u662f\u96f6),\u7136\u540e\u8c03\u7528\u4efb\u52a1\u53ef\u80fd\u88ab\u8fdb\u5165\u963b\u585e\u72b6\u6001\u7b49\u5f85\u7a7a\u95f4\u53ef\u7528\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u51fd\u6570\u8fd4\u56de\u4e4b\u524d,\u4f46\u6570\u636e\u6210\u529f\u5199\u5165\u961f\u5217\u963b\u585e\u65f6\u95f4\u5230\u671f\u4e4b\u524d\u3002</p> </li> <li> <p>\u5f53\u547d\u4ee4\u88ab\u5b9e\u9645\u5904\u7406\u65f6\uff0c\u5c06\u53d6\u51b3\u4e8e\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u76f8\u5bf9\u4e8e\u7cfb\u7edf\u4e2d\u5176\u4ed6\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u7531configTIMER_TASK_PRIORITY\u914d\u7f6e\u5e38\u91cf\u8bbe\u7f6e\u3002</p> </li> </ul> <p>pdFAIL</p> <ul> <li> <p>\u505c\u6b62\u547d\u4ee4\u6ca1\u6709\u53d1\u9001\u5230\u8ba1\u65f6\u5668\u547d\u4ee4\u961f\u5217\uff0c\u56e0\u4e3a\u961f\u5217\u5df2\u7ecf\u6ee1\u4e86\u3002</p> </li> <li> <p>\u5982\u679c\u6307\u5b9a\u4e86\u4e00\u4e2a\u5757\u65f6\u95f4(xTicksToWait\u4e0d\u4e3a\u96f6)\uff0c\u90a3\u4e48\u8c03\u7528\u4efb\u52a1\u5c06\u88ab\u7f6e\u4e8eBlocked\u72b6\u6001\uff0c\u7b49\u5f85\u8ba1\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u5728\u961f\u5217\u4e2d\u817e\u51fa\u7a7a\u95f4\uff0c\u4f46\u6307\u5b9a\u7684\u5757\u65f6\u95f4\u5728\u6b64\u4e4b\u524d\u5df2\u7ecf\u8fc7\u671f\u3002</p> </li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_514","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86\u4f7fxTimerStop()\u53ef\u7528\uff0c\u5728FreeRTOSConfig.h\u4e2dconfigUSE_TIMERS\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_515","title":"\u793a\u4f8b","text":"<p>\u8bf7\u53c2\u9605xTimerCreate() API\u51fd\u6570\u7684\u793a\u4f8b\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#520-xtimerstopfromisr","title":"5.20 xTimerStopFromISR()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201ctimers.h\u201dBaseType_t xTimerStopFromISR( TimerHandle_t xTimer,                           BaseType_t *pxHigherPriorityTaskWoken );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_516","title":"\u6982\u8981","text":"<p>\u53ef\u4ee5\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u8c03\u7528\u7684xTimerStop()\u7248\u672c\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_517","title":"\u53c2\u6570","text":"<p>xTimer</p> <ul> <li>\u6b63\u5728\u505c\u6b62\u7684\u5b9a\u65f6\u5668\u7684\u53e5\u67c4\u3002</li> </ul> <p>pxHigherPriorityTaskWoken</p> <ul> <li>xTimerStopFromISR()\u5c06\u547d\u4ee4\u5199\u5165\u8ba1\u65f6\u5668\u547d\u4ee4\u961f\u5217\u3002\u5982\u679c\u5199\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4f7f\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u79bb\u5f00\u963b\u585e\u72b6\u6001,\u548c\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u4f18\u5148\u7ea7\u7b49\u4e8e\u6216\u5927\u4e8e\u5f53\u524d\u6267\u884c\u7684\u4efb\u52a1(\u4efb\u52a1\u88ab\u6253\u65ad),\u7136\u540e* pxHigherPriorityTaskWoken\u5c06\u88ab\u8bbe\u7f6e\u5728xTimerStopFromISR pdTRUE\u5185\u90e8()\u51fd\u6570\u3002\u5982\u679cxTimerStopFromISR()\u5c06\u8fd9\u4e2a\u503c\u8bbe\u7f6e\u4e3apdTRUE\uff0c\u90a3\u4e48\u5e94\u8be5\u5728\u4e2d\u65ad\u9000\u51fa\u4e4b\u524d\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_518","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS</p> <ul> <li>stop\u547d\u4ee4\u6210\u529f\u53d1\u9001\u5230\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u3002\u5f53\u547d\u4ee4\u88ab\u5b9e\u9645\u5904\u7406\u65f6\uff0c\u5c06\u53d6\u51b3\u4e8e\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u76f8\u5bf9\u4e8e\u7cfb\u7edf\u4e2d\u5176\u4ed6\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u7531configTIMER_TASK_PRIORITY\u914d\u7f6e\u5e38\u91cf\u8bbe\u7f6e\u3002</li> </ul> <p>pdFAIL</p> <ul> <li>\u505c\u6b62\u547d\u4ee4\u6ca1\u6709\u53d1\u9001\u5230\u8ba1\u65f6\u5668\u547d\u4ee4\u961f\u5217\uff0c\u56e0\u4e3a\u961f\u5217\u5df2\u7ecf\u6ee1\u4e86\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_519","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86xTimerStopFromISR()\u53ef\u7528\uff0c\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u5c06configUSE_TIMERS\u8bbe\u7f6e\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_520","title":"\u793a\u4f8b","text":"<pre><code>/* This scenario assumes xTimer has already been created and started. When an interrupt occurs, the timer should be simply stopped. *//* The interrupt service routine that stops the timer. */void vAnExampleInterruptServiceRoutine( void ){  BaseType_t xHigherPriorityTaskWoken = pdFALSE;  /* The interrupt has occurred - simply stop the timer. xHigherPriorityTaskWoken was set to pdFALSE where it was defined (within this function). As this is an   interrupt service routine, only FreeRTOS API functions that end in \"FromISR\" can    be used. */ if( xTimerStopFromISR( xTimer, &amp;xHigherPriorityTaskWoken ) != pdPASS )  {       /* The stop command was not executed successfully. Take appropriate action      here. */    }   /* If xHigherPriorityTaskWoken equals pdTRUE, then a context switch should be   performed. The syntax required to perform a context switch from inside an ISR   varies from port to port, and from compiler to compiler. Inspect the demos for  the port you are using to find the actual syntax required. */   if( xHigherPriorityTaskWoken != pdFALSE )   {       /* Call the interrupt safe yield function here (actual function depends on      the FreeRTOS port being used). */   }}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#6","title":"\u7ae0\u82826 \u4e8b\u4ef6\u7ec4","text":""},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#61-xeventgroupclearbits","title":"6.1 xEventGroupClearBits()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cevent_groups.h\u201dEventBits_t xEventGroupClearBits( EventGroupHandle_t xEventGroup,                               const EventBits_t uxBitsToClear );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_521","title":"\u6982\u8981","text":"<p>\u6e05\u9664RTOS\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u4f4d(\u6807\u5fd7)\u3002\u8fd9\u4e2a\u51fd\u6570\u4e0d\u80fd\u4ece\u4e2d\u65ad\u8c03\u7528\u3002\u8bf7\u53c2\u9605xEventGroupClearBitsFromISR()\u4e86\u89e3\u53ef\u4ee5\u4ece\u4e2d\u65ad\u8c03\u7528\u7684\u7248\u672c\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_522","title":"\u53c2\u6570","text":"<p>xEventGroup</p> <ul> <li>\u8981\u6e05\u9664\u7684\u4f4d\u6240\u5728\u7684\u4e8b\u4ef6\u7ec4\u3002\u4e4b\u524d\u5fc5\u987b\u4f7f\u7528\u5bf9xEventGroupCreate()\u7684\u8c03\u7528\u521b\u5efa\u4e8b\u4ef6\u7ec4\u3002</li> </ul> <p>uxBitsToClear</p> <ul> <li>\u4e00\u4e2a\u4f4d\u503c\uff0c\u6307\u793a\u4e8b\u4ef6\u7ec4\u4e2d\u8981\u6e05\u9664\u7684\u4f4d\u6216\u4f4d\u3002\u4f8b\u5982\uff0c\u5c06uxBitsToClear\u8bbe\u7f6e\u4e3a0x08\u4ee5\u6e05\u9664\u7b2c3\u4f4d\u3002\u8bbe\u7f6euxBitsToClear\u4e3a0x09\u4ee5\u6e05\u9664\u4f4d3\u548c\u4f4d0\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_523","title":"\u8fd4\u56de\u503c","text":"<p>\u6240\u6709\u7684\u503c</p> <ul> <li>\u6e05\u9664\u4e8b\u4ef6\u7ec4\u4e2d\u4efb\u4f55\u4f4d\u4e4b\u524d\u7684\u4f4d\u6570\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_524","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86\u4f7fxEventGroupClearBits()\u51fd\u6570\u53ef\u7528\uff0cRTOS\u6e90\u6587\u4ef6FreeRTOS/source/event_groups.c\u5fc5\u987b\u5305\u542b\u5728\u6784\u5efa\u4e2d\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_525","title":"\u793a\u4f8b","text":"<pre><code>#define BIT_0 ( 1 &lt;&lt; 0 )#define BIT_4 ( 1 &lt;&lt; 4 )void aFunction( EventGroupHandle_t xEventGroup ){   EventBits_t uxBits; /* Clear bit 0 and bit 4 in xEventGroup. */ uxBits = xEventGroupClearBits(                              xEventGroup, /* The event group being updated. */                               BIT_0 | BIT_4 );/* The bits being cleared. */   if( ( uxBits &amp; ( BIT_0 | BIT_4 ) ) == ( BIT_0 | BIT_4 ) )   {       /* Both bit 0 and bit 4 were set before xEventGroupClearBits()      was called. Both will now be clear (not set). */    }   else if( ( uxBits &amp; BIT_0 ) != 0 )  {       /* Bit 0 was set before xEventGroupClearBits() was called. It will      now be clear. */    }   else if( ( uxBits &amp; BIT_4 ) != 0 )  {       /* Bit 4 was set before xEventGroupClearBits() was called. It will      now be clear. */    }   else    {       /* Neither bit 0 nor bit 4 were set in the first place. */  }}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#62-xeventgroupclearbitsfromisr","title":"6.2 xEventGroupClearBitsFromISR()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cevent_groups.h\u201dBaseType_t xEventGroupClearBitsFromISR( EventGroupHandle_t xEventGroup,                                       const EventBits_t uxBitsToClear );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_526","title":"\u6982\u8981","text":"<p>\u53ef\u4ee5\u4ece\u4e2d\u65ad\u8c03\u7528\u7684xEventGroupClearBits()\u7684\u4e00\u4e2a\u7248\u672c\u3002</p> <p>xEventGroupClearBitsFromISR()\u5411RTOS\u5b88\u62a4\u4efb\u52a1\u53d1\u9001\u4e00\u6761\u6d88\u606f\uff0c\u8ba9\u5b83\u5728\u5b88\u62a4\u4efb\u52a1\u7684\u4e0a\u4e0b\u6587\u4e2d\u6267\u884c\u6e05\u9664\u64cd\u4f5c\u3002\u5b88\u62a4\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u7531FreeRTOSConfig.h\u4e2d\u7684configTIMER_TASK_PRIORITY\u8bbe\u7f6e\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_527","title":"\u53c2\u6570","text":"<p>xEventGroup</p> <ul> <li>\u8981\u6e05\u9664\u7684\u4f4d\u6240\u5728\u7684\u4e8b\u4ef6\u7ec4\u3002\u4e4b\u524d\u5fc5\u987b\u4f7f\u7528\u5bf9xEventGroupCreate()\u7684\u8c03\u7528\u521b\u5efa\u4e8b\u4ef6\u7ec4\u3002</li> </ul> <p>uxBitsToClear</p> <ul> <li>\u4e00\u4e2a\u4f4d\u503c\uff0c\u6307\u793a\u4e8b\u4ef6\u7ec4\u4e2d\u8981\u6e05\u9664\u7684\u4f4d\u6216\u4f4d\u3002\u4f8b\u5982\uff0c\u5c06uxBitsToClear\u8bbe\u7f6e\u4e3a0x08\u4ee5\u6e05\u9664\u7b2c3\u4f4d\u3002\u8bbe\u7f6euxBitsToClear\u4e3a0x09\u4ee5\u6e05\u9664\u4f4d3\u548c\u4f4d0\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_528","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS</p> <ul> <li>\u6d88\u606f\u88ab\u53d1\u9001\u5230RTOS\u5b88\u62a4\u4efb\u52a1\u3002</li> </ul> <p>pdFAIL</p> <ul> <li>\u6d88\u606f\u65e0\u6cd5\u53d1\u9001\u5230RTOS\u5b88\u62a4\u8fdb\u7a0b\u4efb\u52a1(\u4e5f\u79f0\u4e3a\u8ba1\u65f6\u5668\u670d\u52a1\u4efb\u52a1)\uff0c\u56e0\u4e3a\u8ba1\u65f6\u5668\u547d\u4ee4\u961f\u5217\u5df2\u6ee1\u3002\u961f\u5217\u7684\u957f\u5ea6\u7531FreeRTOSConfig.h\u4e2d\u7684configTIMER_QUEUE_LENGTH\u8bbe\u7f6e\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_529","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86\u4f7fxEventGroupClearBitsFromISR()\u51fd\u6570\u53ef\u7528\uff0cRTOS\u6e90\u6587\u4ef6FreeRTOS/source/event_groups.c\u5fc5\u987b\u5305\u542b\u5728\u6784\u5efa\u4e2d\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_530","title":"\u793a\u4f8b","text":"<pre><code>#define BIT_0 ( 1 &lt;&lt; 0 )#define BIT_4 ( 1 &lt;&lt; 4 )/* This code assumes the event group referenced by the xEventGroup variable hasalready been created using a call to xEventGroupCreate(). */void anInterruptHandler( void ){ BaseType_t xSuccess;    /* Clear bit 0 and bit 4 in xEventGroup. */ xSuccess = xEventGroupClearBitsFromISR(                                     xEventGroup, /* The event group being updated. */                                       BIT_0 | BIT_4 );/* The bits being cleared. */   if( xSuccess == pdPASS )    {       /* The clear bits message was sent to the daemon task. */   }   else    {       /* The clear bits message was not sent to the daemon task. */   }}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#63-xeventgroupcreate","title":"6.3 xEventGroupCreate()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cevent_groups.h\u201dEventGroupHandle_t xEventGroupCreate( void );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_531","title":"\u6982\u8981","text":"<p>\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4e8b\u4ef6\u7ec4\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u53e5\u67c4\uff0c\u53ef\u901a\u8fc7\u8be5\u53e5\u67c4\u5f15\u7528\u5df2\u521b\u5efa\u7684\u4e8b\u4ef6\u7ec4\u3002</p> <p>\u6bcf\u4e2a\u4e8b\u4ef6\u7ec4\u9700\u8981[\u975e\u5e38]\u5c11\u91cf\u7684RAM\uff0c\u7528\u4e8e\u4fdd\u5b58\u4e8b\u4ef6\u7ec4\u7684\u72b6\u6001\u3002\u5982\u679c\u4f7f\u7528xEventGroupCreate()\u521b\u5efa\u4e00\u4e2a\u4e8b\u4ef6\u7ec4\uff0c\u90a3\u4e48\u8fd9\u4e2aRAM\u5c06\u81ea\u52a8\u4eceFreeRTOS\u5806\u4e2d\u5206\u914d\u3002\u5982\u679c\u4f7f\u7528xEventGroupCreateStatic()\u521b\u5efa\u4e8b\u4ef6\u7ec4\uff0c\u90a3\u4e48\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u5c06\u63d0\u4f9bRAM\uff0c\u8fd9\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u53c2\u6570\uff0c\u4f46\u5141\u8bb8\u5728\u7f16\u8bd1\u65f6\u9759\u6001\u5730\u5206\u914dRAM\u3002</p> <p>\u4e8b\u4ef6\u7ec4\u5b58\u50a8\u5728\u7c7b\u578b\u4e3aEventGroupHandle_t\u7684\u53d8\u91cf\u4e2d\u3002\u5982\u679cconfigUSE_16_BIT_TICKS\u8bbe\u7f6e\u4e3a1\uff0c\u5219\u4e8b\u4ef6\u7ec4\u4e2d\u5b9e\u73b0\u7684\u4f4d(\u6216\u6807\u5fd7)\u7684\u6570\u91cf\u4e3a8\uff0c\u5982\u679cconfigUSE_16_BIT_TICKS\u8bbe\u7f6e\u4e3a0\uff0c\u5219\u4e3a24\u3002configUSE_16_BIT_TICKS\u4f9d\u8d56\u4e8eRTOS\u4efb\u52a1\u5185\u90e8\u5b9e\u73b0\u4e2d\u7528\u4e8e\u7ebf\u7a0b\u672c\u5730\u5b58\u50a8\u7684\u6570\u636e\u7c7b\u578b\u3002</p> <p>\u8fd9\u4e2a\u51fd\u6570\u4e0d\u80fd\u4ece\u4e2d\u65ad\u8c03\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_532","title":"\u53c2\u6570","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_533","title":"\u8fd4\u56de\u503c","text":"<p>NULL</p> <ul> <li>\u65e0\u6cd5\u521b\u5efa\u4e8b\u4ef6\u7ec4\uff0c\u56e0\u4e3a\u6ca1\u6709\u8db3\u591f\u7684\u53ef\u7528FreeRTOS\u5806\u3002</li> </ul> <p>\u4efb\u4f55\u5176\u4ed6\u503c</p> <ul> <li>\u521b\u5efa\u4e8b\u4ef6\u7ec4\uff0c\u8fd4\u56de\u7684\u503c\u662f\u521b\u5efa\u7684\u4e8b\u4ef6\u7ec4\u7684\u53e5\u67c4\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_534","title":"\u63d0\u793a","text":"<p>configSUPPORT_DYNAMIC_ALLOCATION\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u8bbe\u7f6e\u4e3a1(\u6216\u672a\u5b9a\u4e49\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5b83\u5c06\u9ed8\u8ba4\u4e3a1)\uff0c\u5e76\u4e14RTOS\u6e90\u6587\u4ef6FreeRTOS/source/event_groups.c\u5fc5\u987b\u5305\u542b\u5728\u6784\u5efa\u4e2d\uff0c\u4ee5\u4fbfxEventGroupCreate()\u51fd\u6570\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_535","title":"\u793a\u4f8b","text":"<pre><code>/* Declare a variable to hold the created event group. */EventGroupHandle_t xCreatedEventGroup;/* Attempt to create the event group. */xCreatedEventGroup = xEventGroupCreate();/* Was the event group created successfully? */if( xCreatedEventGroup == NULL ){    /* The event group was not created because there was insufficient   FreeRTOS heap available. */}else{       /* The event group was created. */}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#64-xeventgroupcreatestatic","title":"6.4  xEventGroupCreateStatic()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cevent_groups.h\u201dEventGroupHandle_t xEventGroupCreateStatic( StaticEventGroup_t *pxEventGroupBuffer );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_536","title":"\u6982\u8981","text":"<p>\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4e8b\u4ef6\u7ec4\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u53e5\u67c4\uff0c\u53ef\u901a\u8fc7\u8be5\u53e5\u67c4\u5f15\u7528\u5df2\u521b\u5efa\u7684\u4e8b\u4ef6\u7ec4\u3002</p> <p>\u6bcf\u4e2a\u4e8b\u4ef6\u7ec4\u9700\u8981[\u975e\u5e38]\u5c11\u91cf\u7684RAM\uff0c\u7528\u4e8e\u4fdd\u5b58\u4e8b\u4ef6\u7ec4\u7684\u72b6\u6001\u3002\u5982\u679c\u4f7f\u7528xEventGroupCreate()\u521b\u5efa\u4e00\u4e2a\u4e8b\u4ef6\u7ec4\uff0c\u90a3\u4e48\u8fd9\u4e2aRAM\u5c06\u81ea\u52a8\u4eceFreeRTOS\u5806\u4e2d\u5206\u914d\u3002\u5982\u679c\u4f7f\u7528xEventGroupCreateStatic()\u521b\u5efa\u4e8b\u4ef6\u7ec4\uff0c\u90a3\u4e48\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u5c06\u63d0\u4f9bRAM\uff0c\u8fd9\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u53c2\u6570\uff0c\u4f46\u5141\u8bb8\u5728\u7f16\u8bd1\u65f6\u9759\u6001\u5730\u5206\u914dRAM\u3002</p> <p>\u4e8b\u4ef6\u7ec4\u5b58\u50a8\u5728\u7c7b\u578b\u4e3aEventGroupHandle_t\u7684\u53d8\u91cf\u4e2d\u3002\u5982\u679cconfigUSE_16_BIT_TICKS\u8bbe\u7f6e\u4e3a1\uff0c\u5219\u4e8b\u4ef6\u7ec4\u4e2d\u5b9e\u73b0\u7684\u4f4d(\u6216\u6807\u5fd7)\u7684\u6570\u91cf\u4e3a8\uff0c\u5982\u679cconfigUSE_16_BIT_TICKS\u8bbe\u7f6e\u4e3a0\uff0c\u5219\u4e3a24\u3002configUSE_16_BIT_TICKS\u4f9d\u8d56\u4e8eRTOS\u4efb\u52a1\u5185\u90e8\u5b9e\u73b0\u4e2d\u7528\u4e8e\u7ebf\u7a0b\u672c\u5730\u5b58\u50a8\u7684\u6570\u636e\u7c7b\u578b\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_537","title":"\u53c2\u6570","text":"<p>pxEventGroupBuffer</p> <ul> <li>\u5fc5\u987b\u6307\u5411\u7c7b\u578b\u4e3aStaticEventGroup_t\u7684\u53d8\u91cf\uff0c\u4e8b\u4ef6\u7ec4\u7684\u6570\u636e\u7ed3\u6784\u5c06\u5b58\u50a8\u5728\u5176\u4e2d\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_538","title":"\u8fd4\u56de\u503c","text":"<p>NULL</p> <ul> <li>\u65e0\u6cd5\u521b\u5efa\u4e8b\u4ef6\u7ec4\uff0c\u56e0\u4e3apxEventGroupBuffer\u4e3a\u7a7a\u3002</li> </ul> <p>\u4efb\u4f55\u5176\u4ed6\u503c</p> <ul> <li>\u521b\u5efa\u4e8b\u4ef6\u7ec4\uff0c\u8fd4\u56de\u7684\u503c\u662f\u521b\u5efa\u7684\u4e8b\u4ef6\u7ec4\u7684\u53e5\u67c4\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_539","title":"\u63d0\u793a","text":"<p>\u5728FreeRTOSConfig.h\u4e2d\uff0cconfigSUPPORT_STATIC_ALLOCATION\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\uff0c\u5e76\u4e14RTOS\u6e90\u6587\u4ef6FreeRTOS/source/event_groups.c\u5fc5\u987b\u5305\u542b\u5728\u6784\u5efa\u4e2d\uff0c\u4ee5\u4fbfxEventGroupCreateStatic()\u51fd\u6570\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_540","title":"\u793a\u4f8b","text":"<pre><code>/* Declare a variable to hold the handle of the created event group. */EventGroupHandle_t xEventGroupHandle;/* Declare a variable to hold the data associated with the created event group. */StaticEventGroup_t xCreatedEventGroup;void vAFunction( void ){    /* Attempt to create the event group. */    xEventGroupHandle = xEventGroupCreate( &amp;xCreatedEventGroup );   /* pxEventGroupBuffer was not null so expect the event group to have beencreated. */    configASSERT( xEventGroupHandle );}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#65-veventgroupdelete","title":"6.5 vEventGroupDelete()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cevent_groups.h\u201dvoid vEventGroupDelete( EventGroupHandle_t xEventGroup );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_541","title":"\u6982\u8981","text":"<p>\u5220\u9664\u5148\u524d\u901a\u8fc7\u8c03\u7528xEventGroupCreate()\u521b\u5efa\u7684\u4e8b\u4ef6\u7ec4\u3002</p> <p>\u5728\u88ab\u5220\u9664\u7684\u4e8b\u4ef6\u7ec4\u4e0a\u88ab\u963b\u585e\u7684\u4efb\u52a1\u5c06\u88ab\u89e3\u9664\u963b\u585e\uff0c\u5e76\u62a5\u544a\u4e8b\u4ef6\u7ec4\u503c\u4e3a0\u3002</p> <p>\u8fd9\u4e2a\u51fd\u6570\u4e0d\u80fd\u4ece\u4e00\u4e2a\u4e2d\u65ad\u8c03\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_542","title":"\u53c2\u6570","text":"<p>xEventGroup</p> <ul> <li>\u9700\u8981\u5220\u9664\u7684\u4e8b\u4ef6\u7ec4\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_543","title":"\u8fd4\u56de\u503c","text":"<p>\u65e0</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_544","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86\u4f7fvEventGroupDelete()\u51fd\u6570\u53ef\u7528\uff0cRTOS\u6e90\u6587\u4ef6FreeRTOS/source/event_groups.c\u5fc5\u987b\u5305\u542b\u5728\u6784\u5efa\u4e2d\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#66-xeventgroupgetbits","title":"6.6 xEventGroupGetBits()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cevent_groups.h\u201dEventBits_t xEventGroupGetBits( EventGroupHandle_t xEventGroup );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_545","title":"\u6982\u8981","text":"<p>\u8fd4\u56de\u4e8b\u4ef6\u7ec4\u4e2d\u4e8b\u4ef6\u4f4d(\u4e8b\u4ef6\u6807\u5fd7)\u7684\u5f53\u524d\u503c\u3002\u8fd9\u4e2a\u51fd\u6570\u4e0d\u80fd\u5728\u4e2d\u65ad\u4e2d\u4f7f\u7528\u3002\u53ef\u4ee5\u5728\u4e2d\u65ad\u4e2d\u4f7f\u7528\u7684\u7248\u672c\u8bf7\u53c2\u89c1xEventGroupGetBitsFromISR()\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_546","title":"\u53c2\u6570","text":"<p>xEventGroup</p> <ul> <li>\u6b63\u5728\u67e5\u8be2\u7684\u4e8b\u4ef6\u7ec4\u3002\u4e4b\u524d\u5fc5\u987b\u4f7f\u7528\u5bf9xEventGroupCreate()\u7684\u8c03\u7528\u521b\u5efa\u4e8b\u4ef6\u7ec4\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_547","title":"\u8fd4\u56de\u503c","text":"<p>\u8c03\u7528xEventGroupGetBits()\u65f6\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u4e8b\u4ef6\u4f4d\u7684\u503c\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_548","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86\u4f7fxEventGroupGetBits()\u51fd\u6570\u53ef\u7528\uff0cRTOS\u6e90\u6587\u4ef6FreeRTOS/source/event_groups.c\u5fc5\u987b\u5305\u542b\u5728\u6784\u5efa\u4e2d\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#67-xeventgroupgetbitsfromisr","title":"6.7  xEventGroupGetBitsFromISR()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cevent_groups.h\u201dEventBits_t xEventGroupGetBitsFromISR( EventGroupHandle_t xEventGroup );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_549","title":"\u6982\u8981","text":"<p>\u53ef\u4ee5\u4ece\u4e2d\u65ad\u8c03\u7528\u7684xEventGroupGetBits()\u7684\u4e00\u4e2a\u7248\u672c\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_550","title":"\u53c2\u6570","text":"<p>xEventGroup</p> <ul> <li>\u6b63\u5728\u67e5\u8be2\u7684\u4e8b\u4ef6\u7ec4\u3002\u4e4b\u524d\u5fc5\u987b\u4f7f\u7528\u5bf9xEventGroupCreate()\u7684\u8c03\u7528\u521b\u5efa\u4e8b\u4ef6\u7ec4\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_551","title":"\u8fd4\u56de\u503c","text":"<p>\u8c03\u7528xEventGroupGetBitsFromISR()\u65f6\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u4e8b\u4ef6\u4f4d\u7684\u503c\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_552","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86\u4f7fxEventGroupGetBitsFromISR()\u51fd\u6570\u53ef\u7528\uff0cRTOS\u6e90\u6587\u4ef6FreeRTOS/source/event_groups.c\u5fc5\u987b\u5305\u542b\u5728\u6784\u5efa\u4e2d\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#68-xeventgroupsetbits","title":"6.8 xEventGroupSetBits()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cevent_groups.h\u201dEventBits_t xEventGroupSetBits( EventGroupHandle_t xEventGroup,                               const EventBits_t uxBitsToSet );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_553","title":"\u6982\u8981","text":"<p>\u8bbe\u7f6eRTOS\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u4f4d(\u6807\u5fd7)\u3002\u8fd9\u4e2a\u51fd\u6570\u4e0d\u80fd\u4ece\u4e2d\u65ad\u8c03\u7528\u3002\u8bf7\u53c2\u9605xEventGroupSetBitsFromISR()\u4e86\u89e3\u53ef\u4ee5\u4ece\u4e2d\u65ad\u8c03\u7528\u7684\u7248\u672c\u3002</p> <p>\u5728\u4e8b\u4ef6\u7ec4\u4e2d\u8bbe\u7f6e\u4f4d\u5c06\u81ea\u52a8\u89e3\u9664\u963b\u585e\u7684\u4efb\u4f55\u7b49\u5f85\u4f4d\u8bbe\u7f6e\u7684\u4efb\u52a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_554","title":"\u53c2\u6570","text":"<p>xEventGroup</p> <ul> <li>\u8981\u5728\u5176\u4e2d\u8bbe\u7f6e\u4f4d\u7684\u4e8b\u4ef6\u7ec4\u3002\u4e4b\u524d\u5fc5\u987b\u4f7f\u7528\u5bf9xEventGroupCreate()\u7684\u8c03\u7528\u521b\u5efa\u4e8b\u4ef6\u7ec4\u3002</li> </ul> <p>uxBitsToSet</p> <ul> <li>\u4e00\u4e2a\u6309\u4f4d\u503c\uff0c\u8868\u793a\u8981\u5728\u4e8b\u4ef6\u7ec4\u4e2d\u8bbe\u7f6e\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u4f4d\u3002\u4f8b\u5982\uff0c\u5c06uxBitsToSet\u8bbe\u7f6e\u4e3a0x08\uff0c\u53ea\u8bbe\u7f6e\u7b2c3\u4f4d\u3002\u8bbe\u7f6euxBitsToSet\u4e3a0x09\u4ee5\u8bbe\u7f6e\u4f4d3\u548c\u4f4d0\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_555","title":"\u8fd4\u56de\u503c","text":"<p>\u5bf9xEventGroupSetBits()\u7684\u8c03\u7528\u8fd4\u56de\u65f6\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u4f4d\u7684\u503c\u3002</p> <p>\u6709\u4e24\u4e2a\u539f\u56e0\u53ef\u4ee5\u89e3\u91ca\u4e3a\u4ec0\u4e48\u8fd4\u56de\u503c\u53ef\u80fd\u6709uxBitsToSet\u53c2\u6570\u6307\u5b9a\u7684\u4f4d\u88ab\u6e05\u9664:</p> <ol> <li>\u5982\u679c\u8bbe\u7f6e\u4e00\u4e2a\u4f4d\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u7b49\u5f85\u4f4d\u79bb\u5f00\u963b\u585e\u72b6\u6001\u7684\u4efb\u52a1\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4f4d\u53ef\u80fd\u4f1a\u88ab\u81ea\u52a8\u6e05\u9664(\u53c2\u89c1xEventGroupWaitBits()\u7684xClearBitsOnExit\u53c2\u6570)\u3002</li> <li>\u4efb\u4f55\u4efb\u52a1,\u963b\u585e\u72b6\u6001\u7684\u4f4d\u88ab\u8bbe\u7f6e(\u6216\u5176\u5b83\u4efb\u4f55\u4efb\u52a1\u5c31\u7eea\u72b6\u6001),\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u53ebxEventGroupSetBits()\u5c06\u6267\u884c\u5e76\u53ef\u80fd\u6539\u53d8\u524d\u7684\u4e8b\u4ef6\u7ec4\u503c\u8c03\u7528xEventGroupSetBits()\u8fd4\u56de\u3002</li> </ol>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_556","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86\u4f7fxEventGroupSetBits()\u51fd\u6570\u53ef\u7528\uff0cRTOS\u6e90\u6587\u4ef6FreeRTOS/source/event_groups.c\u5fc5\u987b\u5305\u542b\u5728\u6784\u5efa\u4e2d\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_557","title":"\u793a\u4f8b","text":"<pre><code>#define BIT_0 ( 1 &lt;&lt; 0 )#define BIT_4 ( 1 &lt;&lt; 4 )void aFunction( EventGroupHandle_t xEventGroup ){   EventBits_t uxBits; /* Set bit 0 and bit 4 in xEventGroup. */   uxBits = xEventGroupSetBits(    xEventGroup, /* The event group being updated. */   BIT_0 | BIT_4 );/* The bits being set. */   if( ( uxBits &amp; ( BIT_0 | BIT_4 ) ) == ( BIT_0 | BIT_4 ) )   {       /* Both bit 0 and bit 4 remained set when the function returned. */ }   else if( ( uxBits &amp; BIT_0 ) != 0 )  {       /* Bit 0 remained set when the function returned, but bit 4 was     cleared. It might be that bit 4 was cleared automatically as a      task that was waiting for bit 4 was removed from the Blocked state. */  }   else if( ( uxBits &amp; BIT_4 ) != 0 )    {     /* Bit 4 remained set when the function returned, but bit 0 was     cleared. It might be that bit 0 was cleared automatically as a      task that was waiting for bit 0 was removed from the Blocked state. */  }   else    {       /* Neither bit 0 nor bit 4 remained set. It might be that a task        was waiting for both of the bits to be set, and the bits were cleared       as the task left the Blocked state. */  }}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#69-xeventgroupsetbitsfromisr","title":"6.9  xEventGroupSetBitsFromISR()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cevent_groups.h\u201dBaseType_t xEventGroupSetBitsFromISR( EventGroupHandle_t xEventGroup,                                   const EventBits_t uxBitsToSet,                                      BaseType_t *pxHigherPriorityTaskWoken );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_558","title":"\u6982\u8981","text":"<p>\u8bbe\u7f6e\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u4f4d(\u6807\u5fd7)\u3002\u53ef\u4ee5\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b(ISR)\u8c03\u7528\u7684xEventGroupSetBits()\u7684\u4e00\u4e2a\u7248\u672c\u3002</p> <p>\u5728\u4e8b\u4ef6\u7ec4\u4e2d\u8bbe\u7f6e\u4f4d\u5c06\u81ea\u52a8\u89e3\u9664\u963b\u585e\u7684\u4efb\u4f55\u7b49\u5f85\u4f4d\u8bbe\u7f6e\u7684\u4efb\u52a1\u3002</p> <p>\u5728\u4e8b\u4ef6\u7ec4\u4e2d\u8bbe\u7f6e\u4f4d\u4e0d\u662f\u786e\u5b9a\u6027\u64cd\u4f5c\uff0c\u56e0\u4e3a\u53ef\u80fd\u6709\u672a\u77e5\u6570\u91cf\u7684\u4efb\u52a1\u7b49\u5f85\u6b63\u5728\u8bbe\u7f6e\u7684\u4f4d\u6216\u4f4d\u3002FreeRTOS\u4e0d\u5141\u8bb8\u5728\u4e2d\u65ad\u6216\u4e34\u754c\u533a\u4e2d\u6267\u884c\u975e\u786e\u5b9a\u6027\u64cd\u4f5c\u3002\u56e0\u6b64\uff0cxEventGroupSetBitsFromISR()\u5411RTOS\u5b88\u62a4\u4efb\u52a1\u53d1\u9001\u4e00\u6761\u6d88\u606f\uff0c\u8ba9\u5b83\u5728\u5b88\u62a4\u4efb\u52a1\u7684\u4e0a\u4e0b\u6587\u4e2d\u6267\u884cset\u64cd\u4f5c\u2014\u2014\u5728\u5b88\u62a4\u4efb\u52a1\u4e2d\u4f7f\u7528\u8c03\u5ea6\u5668\u9501\u6765\u4ee3\u66ff\u4e34\u754c\u533a\u3002\u5b88\u62a4\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u7531FreeRTOSConfig.h\u4e2d\u7684configTIMER_TASK_PRIORITY\u8bbe\u7f6e\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_559","title":"\u53c2\u6570","text":"<p>xEventGroup</p> <ul> <li>\u8981\u5728\u5176\u4e2d\u8bbe\u7f6e\u4f4d\u7684\u4e8b\u4ef6\u7ec4\u3002\u4e4b\u524d\u5fc5\u987b\u4f7f\u7528\u5bf9xEventGroupCreate()\u7684\u8c03\u7528\u521b\u5efa\u4e8b\u4ef6\u7ec4\u3002</li> </ul> <p>uxBitsToSet</p> <ul> <li>\u4e00\u4e2a\u6309\u4f4d\u503c\uff0c\u8868\u793a\u8981\u5728\u4e8b\u4ef6\u7ec4\u4e2d\u8bbe\u7f6e\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u4f4d\u3002\u4f8b\u5982\uff0c\u5c06uxBitsToSet\u8bbe\u7f6e\u4e3a0x08\uff0c\u53ea\u8bbe\u7f6e\u7b2c3\u4f4d\u3002\u8bbe\u7f6euxBitsToSet\u4e3a0x09\u4ee5\u8bbe\u7f6e\u4f4d3\u548c\u4f4d0\u3002</li> </ul> <p>pxHigherPriorityTaskWoken</p> <ul> <li>\u8c03\u7528xEventGroupSetBitsFromISR()\u4f1a\u5bfc\u81f4\u4e00\u6761\u6d88\u606f\u88ab\u53d1\u9001\u5230RTOS\u5b88\u62a4\u8fdb\u7a0b\u4efb\u52a1\u3002\u5982\u679c\u5b88\u62a4\u8fdb\u7a0b\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u4efb\u52a1(\u88ab\u4e2d\u65ad\u7684\u4efb\u52a1)\u7684\u4f18\u5148\u7ea7\uff0c\u90a3\u4e48*pxHigherPriorityTaskWoken\u5c06\u88abxEventGroupSetBitsFromISR()\u8bbe\u7f6e\u4e3apdTRUE\uff0c\u8fd9\u8868\u660e\u5e94\u8be5\u5728\u4e2d\u65ad\u9000\u51fa\u4e4b\u524d\u8bf7\u6c42\u4e00\u4e2a\u4e0a\u4e0b\u6587\u5207\u6362\u3002\u56e0\u6b64\uff0c* pxhigherprioritytask\u5524\u9192\u5fc5\u987b\u521d\u59cb\u5316\u4e3apdFALSE\u3002\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u793a\u4f8b\u4ee3\u7801\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_560","title":"\u8fd4\u56de\u503c","text":"<p>pdPASS</p> <ul> <li>\u6d88\u606f\u88ab\u53d1\u9001\u5230RTOS\u5b88\u62a4\u4efb\u52a1\u3002</li> </ul> <p>pdFAIL</p> <ul> <li>\u6d88\u606f\u65e0\u6cd5\u53d1\u9001\u5230RTOS\u5b88\u62a4\u8fdb\u7a0b\u4efb\u52a1(\u4e5f\u79f0\u4e3a\u8ba1\u65f6\u5668\u670d\u52a1\u4efb\u52a1)\uff0c\u56e0\u4e3a\u8ba1\u65f6\u5668\u547d\u4ee4\u961f\u5217\u5df2\u6ee1\u3002\u961f\u5217\u7684\u957f\u5ea6\u7531FreeRTOSConfig.h\u4e2d\u7684configTIMER_QUEUE_LENGTH\u8bbe\u7f6e\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_561","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86\u4f7fxEventGroupSetBitsFromISR()\u51fd\u6570\u53ef\u7528\uff0cRTOS\u6e90\u6587\u4ef6FreeRTOS/source/event_groups.c\u5fc5\u987b\u5305\u542b\u5728\u6784\u5efa\u4e2d\u3002</p> <p>INCLUDE_xEventGroupSetBitsFromISR, configUSE_TIMERS\u548cINCLUDE_xTimerPendFunctionCall\u90fd\u5fc5\u987b\u5728FreeRTOSConfig.h\u4e2d\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u4fbfxEventGroupSetBitsFromISR()\u51fd\u6570\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_562","title":"\u793a\u4f8b","text":"<pre><code>#define BIT_0 ( 1 &lt;&lt; 0 )#define BIT_4 ( 1 &lt;&lt; 4 )/* An event group which it is assumed has already been created by a call toxEventGroupCreate(). */EventGroupHandle_t xEventGroup;void anInterruptHandler( void ){   BaseType_t xHigherPriorityTaskWoken, xResult;   /* xHigherPriorityTaskWoken must be initialized to pdFALSE. */  xHigherPriorityTaskWoken = pdFALSE; /* Set bit 0 and bit 4 in xEventGroup. */   xResult = xEventGroupSetBitsFromISR(                                        xEventGroup, /* The event group being updated. */                                       BIT_0 | BIT_4 /* The bits being set. */                                     &amp;xHigherPriorityTaskWoken );    /* Was the message posted successfully? */  if( xResult != pdFAIL ) {       /* If xHigherPriorityTaskWoken is now set to pdTRUE then a context      switch should be requested. The macro used is port specific and will        be either portYIELD_FROM_ISR() or portEND_SWITCHING_ISR() - refer to        the documentation page for the port being used. */      portYIELD_FROM_ISR( xHigherPriorityTaskWoken ); }}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#610-xeventgroupsync","title":"6.10 xEventGroupSync()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cevent_groups.h\u201dEventBits_t xEventGroupSync( EventGroupHandle_t xEventGroup,                           const EventBits_t uxBitsToSet,                          const EventBits_t uxBitsToWaitFor,                          TickType_t xTicksToWait );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_563","title":"\u6982\u8981","text":"<p>\u539f\u5b50\u5730\u8bbe\u7f6e\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u4f4d(\u6807\u5fd7)\uff0c\u7136\u540e\u7b49\u5f85\u5728\u540c\u4e00\u4e8b\u4ef6\u7ec4\u4e2d\u8bbe\u7f6e\u4f4d\u7684\u7ec4\u5408\u3002\u6b64\u529f\u80fd\u901a\u5e38\u7528\u4e8e\u540c\u6b65\u591a\u4e2a\u4efb\u52a1(\u901a\u5e38\u79f0\u4e3a\u4efb\u52a1\u96c6\u5408)\uff0c\u5176\u4e2d\u6bcf\u4e2a\u4efb\u52a1\u5fc5\u987b\u7b49\u5f85\u5176\u4ed6\u4efb\u52a1\u5230\u8fbe\u4e00\u4e2a\u540c\u6b65\u70b9\u540e\u624d\u80fd\u7ee7\u7eed\u3002</p> <p>\u5982\u679cuxBitsToWaitFor\u53c2\u6570\u6307\u5b9a\u7684\u4f4d\u88ab\u8bbe\u7f6e\uff0c\u6216\u8005\u5728\u8be5\u65f6\u95f4\u5185\u88ab\u8bbe\u7f6e\uff0c\u51fd\u6570\u5c06\u5728\u5b83\u7684\u5757\u65f6\u95f4\u5230\u671f\u4e4b\u524d\u8fd4\u56de\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6240\u6709uxBitsToWaitFor\u6307\u5b9a\u7684\u4f4d\u5728\u51fd\u6570\u8fd4\u56de\u4e4b\u524d\u5c06\u88ab\u81ea\u52a8\u6e05\u9664\u3002</p> <p>\u6b64\u529f\u80fd\u4e0d\u80fd\u5728\u4e2d\u65ad\u4e2d\u4f7f\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_564","title":"\u53c2\u6570","text":"<p>xEventGroup</p> <ul> <li>\u6b63\u5728\u5176\u4e2d\u8bbe\u7f6e\u548c\u6d4b\u8bd5\u6bd4\u7279\u7684\u4e8b\u4ef6\u7ec4\u3002\u4e4b\u524d\u5fc5\u987b\u4f7f\u7528\u5bf9xEventGroupCreate()\u7684\u8c03\u7528\u521b\u5efa\u4e8b\u4ef6\u7ec4\u3002</li> </ul> <p>uxBitsToSet</p> <ul> <li>\u4e00\u4e2a\u6309\u4f4d\u7684\u503c\uff0c\u5b83\u6307\u793a\u5728\u4e8b\u4ef6\u7ec4\u4e2d\u8bbe\u7f6e\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u4f4d\uff0c\u7136\u540e\u786e\u5b9a\u662f\u5426(\u5e76\u53ef\u80fd\u7b49\u5f85)\u8bbe\u7f6e\u4e86uxBitsToWaitFor\u53c2\u6570\u6240\u6307\u5b9a\u7684\u6240\u6709\u4f4d\u3002\u4f8b\u5982\uff0c\u5c06uxBitsToSet\u8bbe\u7f6e\u4e3a0x04\u4ee5\u8bbe\u7f6e\u4e8b\u4ef6\u7ec4\u4e2d\u7684\u7b2c2\u4f4d\u3002</li> </ul> <p>uxBitsToWaitFor</p> <ul> <li>\u4e00\u4e2a\u4f4d\u503c\uff0c\u6307\u793a\u4e8b\u4ef6\u7ec4\u5185\u8981\u6d4b\u8bd5\u7684\u4f4d\u6216\u4f4d\u3002\u4f8b\u5982\uff0c\u8bbe\u7f6euxBitsToWaitFor\u4e3a0x05\uff0c\u7b49\u5f85\u7b2c0\u4f4d\u548c\u7b2c2\u4f4d\u3002\u8bbe\u7f6euxBitsToWaitFor\u4e3a0x07\u6765\u7b49\u5f85\u7b2c0\u4f4d\u3001\u7b2c1\u4f4d\u548c\u7b2c2\u4f4d\u3002\u7b49\u3002</li> </ul> <p>xTicksToWait</p> <ul> <li>\u7b49\u5f85uxBitsToWaitFor\u53c2\u6570\u503c\u6307\u5b9a\u7684\u6240\u6709\u4f4d\u7684\u6700\u5927\u65f6\u95f4(\u5728'ticks'\u4e2d\u6307\u5b9a)\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_565","title":"\u8fd4\u56de\u503c","text":"<p>\u6240\u6709\u503c</p> <ul> <li> <p>\u4e8b\u4ef6\u7ec4\u5728\u7b49\u5f85\u7684\u4f4d\u88ab\u8bbe\u7f6e\u6216\u963b\u585e\u65f6\u95f4\u8fc7\u671f\u65f6\u7684\u503c\u3002\u6d4b\u8bd5\u8fd4\u56de\u503c\u4ee5\u77e5\u9053\u8bbe\u7f6e\u4e86\u54ea\u4e9b\u4f4d\u3002</p> </li> <li> <p>\u5982\u679cxEventGroupSync()\u56e0\u4e3a\u8d85\u65f6\u8fc7\u671f\u800c\u8fd4\u56de\uff0c\u90a3\u4e48\u8fd4\u56de\u503c\u4e2d\u4e0d\u4f1a\u8bbe\u7f6e\u6240\u6709\u7b49\u5f85\u7684\u4f4d\u3002</p> </li> <li> <p>\u5982\u679cxEventGroupSync()\u8fd4\u56de\u662f\u56e0\u4e3a\u5b83\u6240\u7b49\u5f85\u7684\u6240\u6709\u4f4d\u90fd\u88ab\u8bbe\u7f6e\u4e86\uff0c\u90a3\u4e48\u8fd4\u56de\u7684\u503c\u662f\u4efb\u4f55\u4f4d\u88ab\u81ea\u52a8\u6e05\u9664\u4e4b\u524d\u7684\u4e8b\u4ef6\u7ec4\u503c\u3002</p> </li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_566","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86\u4f7fxEventGroupSync()\u51fd\u6570\u53ef\u7528\uff0cRTOS\u6e90\u6587\u4ef6FreeRTOS/source/event_groups.c\u5fc5\u987b\u5305\u542b\u5728\u6784\u5efa\u4e2d\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_567","title":"\u793a\u4f8b","text":"<pre><code>/* Bits used by the three tasks. */#define TASK_0_BIT ( 1 &lt;&lt; 0 )#define TASK_1_BIT ( 1 &lt;&lt; 1 )#define TASK_2_BIT ( 1 &lt;&lt; 2 )#define ALL_SYNC_BITS ( TASK_0_BIT | TASK_1_BIT | TASK_2_BIT )/* Use an event group to synchronize three tasks. It is assumed this eventgroup has already been created elsewhere. */EventGroupHandle_t xEventBits;void vTask0( void *pvParameters ){  EventBits_t uxReturn;   TickType_t xTicksToWait = pdMS_TO_TICKS( 100 ); for( ;; )   {       /* Perform task functionality here. */      . . .       /* Set bit 0 in the event group to note this task has reached the       sync point. The other two tasks will set the other two bits defined     by ALL_SYNC_BITS. All three tasks have reached the synchronization      point when all the ALL_SYNC_BITS bits are set. Wait a maximum of 100ms      for this to happen. */      uxReturn = xEventGroupSync( xEventBits,                                 TASK_0_BIT, /* The bit to set. */                                   ALL_SYNC_BITS, /* The bits to wait for. */                                  xTicksToWait );/* Timeout value. */     if( ( uxReturn &amp; ALL_SYNC_BITS ) == ALL_SYNC_BITS )     {           /* All three tasks reached the synchronization point before the call            to xEventGroupSync() timed out. */      }   }}void vTask1( void *pvParameters ){    for( ;; )   {       /* Perform task functionality here. */      . . .       /* Set bit 2 in the event group to note this task has reached the       synchronization point. The other two tasks will set the other two       bits defined by ALL_SYNC_BITS. All three tasks have reached the     synchronization point when all the ALL_SYNC_BITS are set. Wait      indefinitely for this to happen. */     xEventGroupSync( xEventBits, TASK_1_BIT, ALL_SYNC_BITS, portMAX_DELAY );        /* xEventGroupSync() was called with an indefinite block time, so       this task will only reach here if the synchronization was made by all       three tasks, so there is no need to test the return value. */   }}void vTask2( void *pvParameters ){    for( ;; )   {       /* Perform task functionality here. */      . . .       /* Set bit 2 in the event group to note this task has reached the       synchronization point. The other two tasks will set the other two       bits defined by ALL_SYNC_BITS. All three tasks have reached the     synchronization point when all the ALL_SYNC_BITS are set. Wait      indefinitely for this to happen. */     xEventGroupSync( xEventBits, TASK_2_BIT, ALL_SYNC_BITS, portMAX_DELAY );        /* xEventGroupSync() was called with an indefinite block time, so       this task will only reach here if the synchronization was made by all       three tasks, so there is no need to test the return value. */   }}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#611-xeventgroupwaitbits","title":"6.11 xEventGroupWaitBits()","text":"<pre><code>#include \u201cFreeRTOS.h\u201d#include \u201cevent_groups.h\u201dEventBits_t xEventGroupWaitBits( const EventGroupHandle_t xEventGroup,                                 const EventBits_t uxBitsToWaitFor,                              const BaseType_t xClearOnExit,                              const BaseType_t xWaitForAllBits,                               TickType_t xTicksToWait );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_568","title":"\u6982\u8981","text":"<p>\u5728\u4e00\u4e2aRTOS\u4e8b\u4ef6\u7ec4\u4e2d\u8bfb\u53d6\u4f4d\uff0c\u53ef\u4ee5\u9009\u62e9\u8fdb\u5165\u963b\u585e\u72b6\u6001(\u6709\u4e00\u4e2a\u8d85\u65f6)\u6765\u7b49\u5f85\u4e00\u4e2a\u6216\u4e00\u7ec4\u4f4d\u88ab\u8bbe\u7f6e\u3002</p> <p>\u8fd9\u4e2a\u51fd\u6570\u4e0d\u80fd\u4ece\u4e2d\u65ad\u8c03\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_569","title":"\u53c2\u6570","text":"<p>xEventGroup</p> <ul> <li>\u6b63\u5728\u5176\u4e2d\u6d4b\u8bd5\u6bd4\u7279\u7684\u4e8b\u4ef6\u7ec4\u3002\u4e4b\u524d\u5fc5\u987b\u4f7f\u7528\u5bf9xEventGroupCreate()\u7684\u8c03\u7528\u521b\u5efa\u4e8b\u4ef6\u7ec4\u3002</li> </ul> <p>uxBitsToWaitFor</p> <ul> <li> <p>\u4e00\u4e2a\u4f4d\u503c\uff0c\u6307\u793a\u4e8b\u4ef6\u7ec4\u5185\u8981\u6d4b\u8bd5\u7684\u4f4d\u6216\u4f4d\u3002\u4f8b\u5982\uff0c\u8981\u7b49\u5f85\u7b2c0\u4f4d\u548c/\u6216\u7b2c2\u4f4d\uff0c\u8bbe\u7f6euxBitsToWaitFor\u4e3a0x05\u3002\u8981\u7b49\u5f85\u7b2c0\u4f4d\u548c/\u6216\u7b2c1\u4f4d\u548c/\u6216\u7b2c2\u4f4d\uff0c\u8bbe\u7f6euxBitsToWaitFor\u4e3a0x07\u7b49\u3002</p> </li> <li> <p>uxBitsToWaitFor\u4e0d\u80fd\u8bbe\u7f6e\u4e3a0\u3002</p> </li> </ul> <p>xClearOnExit</p> <ul> <li> <p>\u5982\u679cxClearOnExit\u8bbe\u7f6e\u4e3apdTRUE\uff0c\u90a3\u4e48\u5728xEventGroupWaitBits()\u8fd4\u56de\u4e4b\u524d\uff0c\u5982\u679cxEventGroupWaitBits()\u8fd4\u56de\u9664\u4e86\u8d85\u65f6\u4ee5\u5916\u7684\u4efb\u4f55\u539f\u56e0\uff0c\u5728uxBitsToWaitFor\u53c2\u6570\u7684\u503c\u4e2d\u8bbe\u7f6e\u7684\u4efb\u4f55\u4f4d\u5c06\u5728\u4e8b\u4ef6\u7ec4\u4e2d\u6e05\u9664\u3002\u8d85\u65f6\u503c\u7531xTicksToWait\u53c2\u6570\u8bbe\u7f6e\u3002</p> </li> <li> <p>\u5982\u679cxClearOnExit\u8bbe\u7f6e\u4e3apdFALSE\uff0c\u90a3\u4e48\u5f53\u8c03\u7528xEventGroupWaitBits()\u8fd4\u56de\u65f6\uff0c\u5728\u4e8b\u4ef6\u7ec4\u4e2d\u8bbe\u7f6e\u7684\u4f4d\u4e0d\u4f1a\u6539\u53d8\u3002</p> </li> </ul> <p>xWaitAllBits</p> <ul> <li>xWaitForAllBits\u7528\u4e8e\u521b\u5efa\u903b\u8f91\u4e0e\u6d4b\u8bd5(\u5fc5\u987b\u8bbe\u7f6e\u6240\u6709\u4f4d)\u6216\u903b\u8f91\u6216\u6d4b\u8bd5(\u5fc5\u987b\u8bbe\u7f6e\u4e00\u4e2a\u6216\u591a\u4e2a\u4f4d)\uff0c\u5982\u4e0b\u6240\u793a:</li> <li>\u5982\u679cxWaitForAllBits\u88ab\u8bbe\u7f6e\u4e3apdTRUE\uff0c\u90a3\u4e48\u5f53\u6240\u6709\u901a\u8fc7uxBitsToWaitFor\u53c2\u6570\u7684\u503c\u8bbe\u7f6e\u5728\u4e8b\u4ef6\u7ec4\u4e2d\u6216\u8005\u6307\u5b9a\u7684\u5757\u65f6\u95f4\u8fc7\u671f\u65f6\uff0cxEventGroupWaitBits()\u5c06\u8fd4\u56de\u3002</li> <li>\u5982\u679cxWaitForAllBits\u8bbe\u7f6e\u4e3apdFALSE\uff0c\u90a3\u4e48\u5f53uxBitsToWaitFor\u53c2\u6570\u4f20\u9012\u7684\u4efb\u4f55\u4f4d\u5728\u4e8b\u4ef6\u7ec4\u4e2d\u8bbe\u7f6e\u6216\u6307\u5b9a\u7684\u5757\u65f6\u95f4\u8fc7\u671f\u65f6\uff0cxEventGroupWaitBits()\u5c06\u8fd4\u56de\u3002</li> </ul> <p>xTicksToWait</p> <ul> <li>\u7b49\u5f85uxBitsToWaitFor\u6240\u6307\u5b9a\u7684\u4f4d\u7684\u4e00\u4e2a/\u6240\u6709\u4f4d(\u53d6\u51b3\u4e8exWaitForAllBits\u7684\u503c)\u7684\u6700\u5927\u65f6\u95f4\u91cf(\u5728'ticks'\u4e2d\u6307\u5b9a)\u6210\u4e3a\u8bbe\u7f6e\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_570","title":"\u8fd4\u56de\u503c","text":"<p>\u4efb\u4f55\u503c</p> <ul> <li> <p>\u8bbe\u7f6e\u7b49\u5f85\u7684\u4e8b\u4ef6\u4f4d\u6216\u5757\u65f6\u95f4\u8fc7\u671f\u65f6\u7684\u4e8b\u4ef6\u7ec4\u503c\u3002\u5982\u679c\u8f83\u9ad8\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\u6216\u4e2d\u65ad\u6539\u53d8\u4e86\u8c03\u7528\u4efb\u52a1\u79bb\u5f00Blocked\u72b6\u6001\u548c\u9000\u51faxEventGroupWaitBits()\u51fd\u6570\u4e4b\u95f4\u7684\u4e8b\u4ef6\u4f4d\u503c\uff0c\u5219\u4e8b\u4ef6\u7ec4\u4e2d\u4e8b\u4ef6\u4f4d\u7684\u5f53\u524d\u503c\u5c06\u4e0e\u8fd4\u56de\u503c\u4e0d\u540c\u3002</p> </li> <li> <p>\u6d4b\u8bd5\u8fd4\u56de\u503c\u4ee5\u77e5\u9053\u8bbe\u7f6e\u4e86\u54ea\u4e9b\u4f4d\u3002\u5982\u679cxEventGroupWaitBits()\u56e0\u4e3a\u8d85\u65f6\u800c\u8fd4\u56de\uff0c\u90a3\u4e48\u4e0d\u662f\u6240\u6709\u6b63\u5728\u7b49\u5f85\u7684\u4f4d\u90fd\u4f1a\u88ab\u8bbe\u7f6e\u3002\u5982\u679cxEventGroupWaitBits()\u8fd4\u56de\uff0c\u56e0\u4e3a\u5b83\u6b63\u5728\u7b49\u5f85\u7684\u4f4d\u88ab\u8bbe\u7f6e\uff0c\u90a3\u4e48\u5728xClearOnExit\u53c2\u6570\u88ab\u8bbe\u7f6e\u4e3apdTRUE\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u4efb\u4f55\u4f4d\u88ab\u81ea\u52a8\u6e05\u9664\u4e4b\u524d\uff0c\u8fd4\u56de\u7684\u503c\u662f\u4e8b\u4ef6\u7ec4\u503c\u3002</p> </li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_571","title":"\u63d0\u793a","text":"<p>\u4e3a\u4e86\u4f7fxEventGroupWaitBits()\u51fd\u6570\u53ef\u7528\uff0cRTOS\u6e90\u6587\u4ef6FreeRTOS/source/event_groups.c\u5fc5\u987b\u5305\u542b\u5728\u6784\u5efa\u4e2d\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#_572","title":"\u793a\u4f8b","text":"<pre><code>#define BIT_0 ( 1 &lt;&lt; 0 )\n#define BIT_4 ( 1 &lt;&lt; 4 )\nvoid aFunction( EventGroupHandle_t xEventGroup )\n{\n    EventBits_t uxBits;\n    const TickType_t xTicksToWait = pdMS_TO_TICKS( 100 );\n    /* Wait a maximum of 100ms for either bit 0 or bit 4 to be set within\n    the event group. Clear the bits before exiting. */\n    uxBits = xEventGroupWaitBits(\n                        xEventGroup, /* The event group being tested. */\n                        BIT_0 | BIT_4, /* The bits within the event group to wait for. */\n                        pdTRUE, /* BIT_0 and BIT_4 should be cleared before returning. */\n                        pdFALSE, /* Don't wait for both bits, either bit will do. */\n                        xTicksToWait );/* Wait a maximum of 100ms for either bit to be                                                                                  set. */\n    if( ( uxBits &amp; ( BIT_0 | BIT_4 ) ) == ( BIT_0 | BIT_4 ) )\n    {\n        /* xEventGroupWaitBits() returned because both bits were set. */\n    }\n    else if( ( uxBits &amp; BIT_0 ) != 0 )\n    {\n        /* xEventGroupWaitBits() returned because just BIT_0 was set. */\n    }\n    else if( ( uxBits &amp; BIT_4 ) != 0 )\n    {\n        /* xEventGroupWaitBits() returned because just BIT_4 was set. */\n    }\n    else\n    {\n        /* xEventGroupWaitBits() returned because xTicksToWait ticks passed\n        without either BIT_0 or BIT_4 becoming set. */\n    }\n}\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#7","title":"\u7ae0\u82827 \u5185\u6838\u914d\u7f6e","text":""},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#71-freertosconfigh","title":"7.1 FreeRTOSConfig.h","text":"<p>\u5185\u6838\u914d\u7f6e\u662f\u901a\u8fc7\u5728FreeRTOSConfig.h\u4e2d\u8bbe\u7f6e#define constants\u5b9e\u73b0\u7684\u3002\u6bcf\u4e2a\u4f7f\u7528FreeRTOS\u7684\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u63d0\u4f9b\u4e00\u4e2aFreeRTOSConfig.h\u5934\u6587\u4ef6\u3002</p> <p>FreeRTOS\u4e0b\u8f7d\u4e2d\u5305\u542b\u7684\u6240\u6709\u6f14\u793a\u5e94\u7528\u7a0b\u5e8f\u9879\u76ee\u90fd\u5305\u542b\u4e00\u4e2a\u9884\u5b9a\u4e49\u7684FreeRTOSConfig.h\uff0c\u53ef\u4ee5\u7528\u4f5c\u5f15\u7528\u6216\u7b80\u5355\u590d\u5236\u3002\u7136\u800c\uff0c\u8bf7\u6ce8\u610f\uff0c\u6709\u4e9b\u6f14\u793a\u9879\u76ee\u662f\u5728\u672c\u7ae0\u4e2d\u6240\u6709\u8bb0\u5f55\u7684\u9009\u9879\u53ef\u7528\u4e4b\u524d\u751f\u6210\u7684\uff0c\u56e0\u6b64\u5b83\u4eec\u5305\u542b\u7684FreeRTOSConfig.h\u5934\u6587\u4ef6\u5c06\u4e0d\u4f1a\u5305\u542b\u4ee5\u4e0b\u5c0f\u8282\u4e2d\u8bb0\u5f55\u7684\u6240\u6709\u5e38\u91cf\u548c\u9009\u9879\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#72-constants-that-start-include_","title":"7.2 Constants that Start \u201cINCLUDE_\u201d","text":"<p>\u4ee5\u6587\u672c\u201cINCLUDE_\u201d\u5f00\u5934\u7684\u5e38\u91cf\u7528\u4e8e\u4ece\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5305\u542b\u6216\u6392\u9664FreeRTOS API\u51fd\u6570\u3002\u4f8b\u5982\uff0c\u5c06INCLUDE_vTaskPrioritySet\u8bbe\u7f6e\u4e3a0\u5c06\u4ece\u6784\u5efa\u4e2d\u6392\u9664vTaskPrioritySet() API\u51fd\u6570\uff0c\u8fd9\u610f\u5473\u7740\u5e94\u7528\u7a0b\u5e8f\u4e0d\u80fd\u8c03\u7528vTaskPrioritySet()\u3002\u5c06INCLUDE_vTaskPrioritySet\u8bbe\u7f6e\u4e3a1\u5c06\u5728\u6784\u5efa\u4e2d\u5305\u542bvTaskPrioritySet() API\u51fd\u6570\uff0c\u56e0\u6b64\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u8c03\u7528vTaskPrioritySet()\u3002</p> <p>\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2aINCLUDE_\u914d\u7f6e\u5e38\u91cf\u5c06\u5305\u542b\u6216\u6392\u9664\u591a\u4e2aAPI\u51fd\u6570\u3002</p> <p>\u201cINCLUDE_\u201d \u5e38\u91cf\u7684\u63d0\u4f9b\u662f\u4e3a\u4e86\u901a\u8fc7\u5220\u9664\u4e0d\u9700\u8981\u7684FreeRTOS\u51fd\u6570\u548c\u7279\u6027\u6765\u51cf\u5c11\u4ee3\u7801\u7684\u5927\u5c0f\u3002\u7136\u800c\uff0c\u5927\u591a\u6570\u94fe\u63a5\u5668\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u81ea\u52a8\u5220\u9664\u672a\u5f15\u7528\u7684\u4ee3\u7801\uff0c\u9664\u975e\u4f18\u5316\u5b8c\u5168\u5173\u95ed\u3002\u6ca1\u6709\u6b64\u9ed8\u8ba4\u884c\u4e3a\u7684\u94fe\u63a5\u5668\u901a\u5e38\u53ef\u4ee5\u914d\u7f6e\u4e3a\u5220\u9664\u672a\u5f15\u7528\u7684\u4ee3\u7801\u3002\u56e0\u6b64\uff0c\u5728\u5927\u591a\u6570\u5b9e\u9645\u60c5\u51b5\u4e0b\uff0cINCLUDE_\u914d\u7f6e\u5e38\u91cf\u5bf9\u53ef\u6267\u884c\u4ee3\u7801\u7684\u5927\u5c0f\u51e0\u4e4e\u6ca1\u6709\u5f71\u54cd\u3002</p> <p>\u4ece\u5e94\u7528\u7a0b\u5e8f\u4e2d\u6392\u9664API\u51fd\u6570\u4e5f\u53ef\u80fd\u51cf\u5c11FreeRTOS\u5185\u6838\u4f7f\u7528\u7684RAM\u6570\u91cf\u3002\u4f8b\u5982\uff0c\u5220\u9664vTaskSuspend() API\u51fd\u6570\u4e5f\u5c06\u963b\u6b62\u7ed3\u6784\uff0c\u5426\u5219\u5c06\u5f15\u7528\u6302\u8d77\u7684\u4efb\u52a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#include_xeventgroupsetbitsfromisr","title":"INCLUDE_xEventGroupSetBitsFromISR","text":"<p>configUSE_TIMERS, INCLUDE_xTimerPendFunctionCall\u548cINCLUDE_xEventGroupSetBitsFromISR\u5fc5\u987b\u5168\u90e8\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u4fbfxEventGroupSetBitsFromISR () API\u51fd\u6570\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#include_xsemaphoregetmutexholder","title":"INCLUDE_xSemaphoreGetMutexHolder","text":"<p>INCLUDE_xSemaphoreGetMutexHolder\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\u624d\u80fd\u4f7f\u7528xSemaphoreGetMutexHolder() API\u51fd\u6570\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#include_xtaskabortdelay","title":"INCLUDE_xTaskAbortDelay","text":"<p>INCLUDE_xTaskAbortDelay\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\u624d\u80fd\u4f7f\u7528xTaskAbortDelay() API\u51fd\u6570\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#include_vtaskdelay","title":"INCLUDE_vTaskDelay","text":"<p>INCLUDE_vTaskDelay\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u4fbfvTaskDelay() API\u51fd\u6570\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#include_vtaskdelayuntil","title":"INCLUDE_vTaskDelayUntil","text":"<p>\u4e3a\u4e86\u4f7fvTaskDelayUntil() API\u51fd\u6570\u53ef\u7528\uff0cINCLUDE_vTaskDelayUntil\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#include_vtaskdelete","title":"INCLUDE_vTaskDelete","text":"<p>INCLUDE_vTaskDelete\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u4fbfvTaskDelete() API\u51fd\u6570\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#include_xtaskgetcurrenttaskhandle","title":"INCLUDE_xTaskGetCurrentTaskHandle","text":"<p>include_xtaskgetcurrentttaskhandle\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\u624d\u80fd\u4f7f\u7528xTaskGetCurrentTaskHandle() API\u51fd\u6570\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#include_xtaskgethandle","title":"INCLUDE_xTaskGetHandle","text":"<p>\u4e3a\u4e86\u8ba9xTaskGetHandle() API\u51fd\u6570\u53ef\u7528\uff0cINCLUDE_xTaskGetHandle\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#include_xtaskgetidletaskhandle","title":"INCLUDE_xTaskGetIdleTaskHandle","text":"<p>INCLUDE_xTaskGetIdleTaskHandle\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u4fbfxTaskGetIdleTaskHandle() API\u51fd\u6570\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#include_xtaskgetschedulerstate","title":"INCLUDE_xTaskGetSchedulerState","text":"<p>INCLUDE_xTaskGetSchedulerState\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\u624d\u80fd\u4f7f\u7528xTaskGetSchedulerState() API\u51fd\u6570\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#include_uxtaskgetstackhighwatermark","title":"INCLUDE_uxTaskGetStackHighWaterMark","text":"<p>INCLUDE_uxTaskGetStackHighWaterMark\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\uff0c\u8fd9\u6837uxTaskGetStackHighWaterMark() API\u51fd\u6570\u624d\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#include_uxtaskpriorityget","title":"INCLUDE_uxTaskPriorityGet","text":"<p>INCLUDE_uxTaskPriorityGet\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u4fbfuxTaskPriorityGet() API\u51fd\u6570\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#include_vtaskpriorityset","title":"INCLUDE_vTaskPrioritySet","text":"<p>INCLUDE_vTaskPrioritySet\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u4fbfvTaskPrioritySet() API\u51fd\u6570\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#include_xtaskresumefromisr","title":"INCLUDE_xTaskResumeFromISR","text":"<p>INCLUDE_xTaskResumeFromISR\u548cINCLUDE_vTaskSuspend\u90fd\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\uff0c\u8fd9\u6837xTaskResumeFromISR() API\u51fd\u6570\u624d\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#include_etaskgetstate","title":"INCLUDE_eTaskGetState","text":"<p>INCLUDE_eTaskGetState\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u4fbfeTaskGetState() API\u51fd\u6570\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#include_vtasksuspend","title":"INCLUDE_vTaskSuspend","text":"<p>INCLUDE_vTaskSuspend\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u4fbfvTaskSuspend()\u3001vTaskResume()\u548cxTaskIsTaskSuspended() API\u51fd\u6570\u53ef\u7528\u3002</p> <p>INCLUDE_vTaskSuspend\u548cINCLUDE_xTaskResumeFromISR\u5fc5\u987b\u90fd\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u4fbfxTaskResumeFromISR() API\u51fd\u6570\u53ef\u7528\u3002</p> <p>\u4e00\u4e9b\u961f\u5217\u548c\u4fe1\u53f7\u91cfAPI\u51fd\u6570\u5141\u8bb8\u8c03\u7528\u4efb\u52a1\u9009\u62e9\u5c06\u5176\u7f6e\u4e8eBlocked\u72b6\u6001\uff0c\u4ee5\u7b49\u5f85\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u4e8b\u4ef6\u7684\u53d1\u751f\u3002\u8fd9\u4e9bAPI\u51fd\u6570\u9700\u8981\u6307\u5b9a\u4e00\u4e2a\u6700\u5927\u7684\u5757\u65f6\u95f4\uff0c\u6216\u8005\u8d85\u65f6\u65f6\u95f4\u3002\u7136\u540e\uff0c\u8c03\u7528\u4efb\u52a1\u5c06\u4fdd\u6301\u5728Blocked\u72b6\u6001\uff0c\u76f4\u5230\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u4e8b\u4ef6\u53d1\u751f\uff0c\u6216\u8005\u5757\u5468\u671f\u5230\u671f\u3002\u53ef\u6307\u5b9a\u7684\u6700\u5927\u5757\u5468\u671f\u7531portMAX_DELAY\u5b9a\u4e49\u3002\u5982\u679cINCLUDE_vTaskSuspend\u88ab\u8bbe\u7f6e\u4e3a0\uff0c\u90a3\u4e48\u6307\u5b9a\u4e00\u4e2aportMAX_DELAY\u7684\u5757\u5468\u671f\u5c06\u4f1a\u5bfc\u81f4\u8c03\u7528\u4efb\u52a1\u88ab\u653e\u7f6e\u5230\u963b\u585e\u72b6\u6001\uff0c\u4ee5\u83b7\u5f97\u6700\u5927\u7684portMAX_DELAY\u8282\u62cd\u3002\u5982\u679cINCLUDE_vTaskSuspend\u88ab\u8bbe\u7f6e\u4e3a1\uff0c\u90a3\u4e48\u6307\u5b9a\u4e00\u4e2aportMAX_DELAY\u7684\u5757\u5468\u671f\u5c06\u5bfc\u81f4\u8c03\u7528\u4efb\u52a1\u88ab\u65e0\u9650\u671f\u5730\u653e\u7f6e\u5230Blocked\u72b6\u6001(\u6ca1\u6709\u8d85\u65f6)\u3002\u5728\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e0b\uff0c\u5757\u5468\u671f\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u56e0\u6b64\u6446\u8131Blocked\u72b6\u6001\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u53d1\u751f\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u4e8b\u4ef6\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#include_xtimerpendfunctioncall","title":"INCLUDE_xTimerPendFunctionCall","text":"<p>configUSE_TIMERS\u548cINCLUDE_xTimerPendFunctionCall\u90fd\u5fc5\u987b\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u4fbfxTimerPendFunctionCall()\u548cxTimerPendFunctionCallFromISR () API\u51fd\u6570\u53ef\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#73-constants-that-start-config","title":"7.3 Constants that Start \u201cconfig\u201d","text":"<p>\u4ee5\u201cconfig\u201d\u6587\u672c\u5f00\u5934\u7684\u5e38\u91cf\u5b9a\u4e49\u5185\u6838\u7684\u5c5e\u6027\uff0c\u6216\u5305\u542b\u6216\u6392\u9664\u5185\u6838\u7684\u7279\u6027\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configapplication_allocated_heap","title":"configAPPLICATION_ALLOCATED_HEAP","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cFreeRTOS\u5806\u7531FreeRTOS\u58f0\u660e\u5e76\u7531\u94fe\u63a5\u5668\u653e\u7f6e\u5728\u5185\u5b58\u4e2d\u3002\u5c06configAPPLICATION_ALLOCATED_HEAP\u8bbe\u7f6e\u4e3a1\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u58f0\u660e\u5806\uff0c\u8fd9\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u5c06\u5806\u653e\u7f6e\u5728\u5185\u5b58\u4e2d\u4ed6\u4eec\u559c\u6b22\u7684\u4efb\u4f55\u5730\u65b9\u3002</p> <p>\u5982\u679c\u4f7f\u7528heap_1.c\u3001heap_2.c\u6216heap_2.c\uff0c\u5e76\u4e14configAPPLICATION_ALLOCATED_HEAP\u88ab\u8bbe\u7f6e\u4e3a1\uff0c\u90a3\u4e48\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u5fc5\u987b\u63d0\u4f9b\u5177\u6709\u540d\u79f0\u548c\u7ef4\u6570\u7684uint8_t\u6570\u7ec4\uff0c\u5982\u4e0b\u6240\u793a\u3002\u8be5\u6570\u7ec4\u5c06\u7528\u4f5cFreeRTOS\u5806\u3002\u6570\u7ec4\u5982\u4f55\u653e\u7f6e\u5728\u7279\u5b9a\u7684\u5185\u5b58\u4f4d\u7f6e\u53d6\u51b3\u4e8e\u6240\u4f7f\u7528\u7684\u7f16\u8bd1\u5668\u2014\u2014\u8bf7\u53c2\u9605\u7f16\u8bd1\u5668\u6587\u6863\u3002</p> <pre><code>uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configassert","title":"configASSERT","text":"<p>\u5bf9configASSERT(x)\u7684\u8c03\u7528\u5b58\u5728\u4e8eFreeRTOS\u5185\u6838\u4ee3\u7801\u7684\u5173\u952e\u4f4d\u7f6e\u3002</p> <p>\u5982\u679cFreeRTOS\u529f\u80fd\u6b63\u5e38\uff0c\u5e76\u4e14\u88ab\u6b63\u786e\u4f7f\u7528\uff0c\u90a3\u4e48configASSERT()\u53c2\u6570\u5c06\u662f\u975e\u96f6\u3002\u5982\u679c\u53d1\u73b0\u8be5\u53c2\u6570\u7b49\u4e8e\u96f6\uff0c\u5219\u9519\u8bef\u53d1\u751f\u4e86\u3002</p> <p>configASSERT()\u6240\u6355\u83b7\u7684\u5927\u591a\u6570\u9519\u8bef\u5f88\u53ef\u80fd\u662f\u4e00\u4e2a\u65e0\u6548\u53c2\u6570\u88ab\u4f20\u9012\u5230FreeRTOS API\u51fd\u6570\u7684\u7ed3\u679c\u3002\u56e0\u6b64\uff0cconfigASSERT()\u53ef\u4ee5\u5e2e\u52a9\u8fdb\u884c\u8fd0\u884c\u65f6\u8c03\u8bd5\u3002\u7136\u800c\uff0c\u5b9a\u4e49configASSERT()\u4e5f\u4f1a\u589e\u52a0\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u7684\u5927\u5c0f\uff0c\u5e76\u964d\u4f4e\u5176\u6267\u884c\u901f\u5ea6\u3002</p> <p>configASSERT()\u7b49\u4ef7\u4e8e\u6807\u51c6C\u4e2d\u7684assert()\u5b8f\u3002\u5b83\u88ab\u7528\u6765\u4ee3\u66ff\u6807\u51c6\u7684C assert()\u5b8f\uff0c\u56e0\u4e3a\u4e0d\u662f\u6240\u6709\u53ef\u4ee5\u7528\u6765\u6784\u5efaFreeRTOS\u7684\u7f16\u8bd1\u5668\u90fd\u63d0\u4f9bassert.h\u5934\u6587\u4ef6\u3002</p> <p>configASSERT()\u5e94\u8be5\u5728FreeRTOSConfig.h\u4e2d\u5b9a\u4e49\u3002\u4e0b\u6587\u663e\u793a\u4e86\u4e00\u4e2a\u793a\u4f8bconfigASSERT()\u5b9a\u4e49\uff0c\u5b83\u5047\u5b9avAssertCalled()\u662f\u7531\u5e94\u7528\u7a0b\u5e8f\u5728\u5176\u4ed6\u5730\u65b9\u5b9a\u4e49\u7684\u3002</p> <pre><code>#define configASSERT( ( x ) ) if( ( x ) == 0 ) vAssertCalled( __FILE__, __LINE__ )\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configcheck_for_stack_overflow","title":"configCHECK_FOR_STACK_OVERFLOW","text":"<p>\u6bcf\u4e2a\u4efb\u52a1\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u5806\u6808\u3002\u5982\u679c\u4f7f\u7528xTaskCreate() API\u51fd\u6570\u521b\u5efa\u4efb\u52a1\uff0c\u90a3\u4e48\u5806\u6808\u5c06\u81ea\u52a8\u4eceFreeRTOS\u5806\u4e2d\u5206\u914d\uff0c\u5e76\u4e14\u5806\u6808\u7684\u5927\u5c0f\u7531xTaskCreate() usStackDepth\u53c2\u6570\u6307\u5b9a\u3002\u5982\u679c\u4efb\u52a1\u662f\u4f7f\u7528xTaskCreateStatic() API\u51fd\u6570\u521b\u5efa\u7684\uff0c\u90a3\u4e48\u5806\u6808\u5c06\u7531\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u9884\u5148\u5206\u914d\u3002</p> <p>\u5806\u6808\u6ea2\u51fa\u662f\u5bfc\u81f4\u5e94\u7528\u7a0b\u5e8f\u4e0d\u7a33\u5b9a\u7684\u5e38\u89c1\u539f\u56e0\u3002FreeRTOS\u63d0\u4f9b\u4e86\u4e24\u79cd\u53ef\u9009\u673a\u5236\uff0c\u53ef\u7528\u4e8e\u5e2e\u52a9\u8fdb\u884c\u5806\u6808\u6ea2\u51fa\u68c0\u6d4b\u548c\u8c03\u8bd5\u3002\u4f7f\u7528\u54ea\u4e2a\u9009\u9879(\u5982\u679c\u6709\u7684\u8bdd)\u662f\u7531configCHECK_FOR_STACK_OVERFLOW\u914d\u7f6e\u5e38\u91cf\u914d\u7f6e\u7684\u3002</p> <p>\u5982\u679cconfigCHECK_FOR_STACK_OVERFLOW\u6ca1\u6709\u88ab\u8bbe\u7f6e\u4e3a0\uff0c\u90a3\u4e48\u5e94\u7528\u7a0b\u5e8f\u8fd8\u5fc5\u987b\u63d0\u4f9b\u4e00\u4e2a\u5806\u6808\u6ea2\u51fa\u94a9\u5b50(\u6216\u56de\u8c03)\u51fd\u6570\u3002\u6bcf\u5f53\u68c0\u6d4b\u5230\u5806\u6808\u6ea2\u51fa\u65f6\uff0c\u5185\u6838\u5c06\u8c03\u7528\u5806\u6808\u6ea2\u51fa\u94a9\u5b50\u3002</p> <p>\u5806\u6808\u6ea2\u51fa\u94a9\u5b50\u51fd\u6570\u5fc5\u987b\u88ab\u79f0\u4e3avApplicationStackOverflowHook()\uff0c\u5176\u539f\u578b\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>void vApplicationStackOverflowHook( TaskHandle_t *pxTask,\n                                    signed char *pcTaskName );\n</code></pre> <p>\u5df2\u7ecf\u8d85\u8fc7\u5176\u5806\u6808\u7a7a\u95f4\u7684\u4efb\u52a1\u7684\u540d\u79f0\u548c\u53e5\u67c4\u5206\u522b\u4f7f\u7528pcTaskName\u548cpxTask\u53c2\u6570\u4f20\u9012\u7ed9\u5806\u6808\u6ea2\u51fa\u94a9\u5b50\u51fd\u6570\u3002\u5e94\u8be5\u6ce8\u610f\u7684\u662f\uff0c\u5806\u6808\u6ea2\u51fa\u53ef\u80fd\u7834\u574f\u8fd9\u4e9b\u53c2\u6570\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u68c0\u67e5pxcurrentttcb\u53d8\u91cf\uff0c\u4ee5\u786e\u5b9a\u662f\u54ea\u4e2a\u4efb\u52a1\u5bfc\u81f4\u8c03\u7528\u5806\u6808\u6ea2\u51fa\u94a9\u5b50\u51fd\u6570\u3002</p> <p>\u5806\u6808\u6ea2\u51fa\u68c0\u67e5\u53ea\u80fd\u7528\u4e8e\u5177\u6709\u7ebf\u6027(\u800c\u4e0d\u662f\u5206\u6bb5)\u5185\u5b58\u6620\u5c04\u7684\u67b6\u6784\u3002</p> <p>\u5728\u8c03\u7528\u5806\u6808\u6ea2\u51fa\u56de\u8c03\u51fd\u6570\u4e4b\u524d\uff0c\u4e00\u4e9b\u5904\u7406\u5668\u4f1a\u751f\u6210\u4e00\u4e2a\u9519\u8bef\u5f02\u5e38\u6765\u54cd\u5e94\u5806\u6808\u635f\u574f\u3002</p> <p>\u5806\u6808\u6ea2\u51fa\u68c0\u67e5\u4f1a\u589e\u52a0\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u3002</p> <p>\u6808\u6ea2\u51fa\u68c0\u6d4b\u65b9\u6cd5\u4e00</p> <ul> <li> <p>\u65b9\u6cd5\u4e00\u901a\u8fc7\u5c06configCHECK_FOR_STACK_OVERFLOW\u8bbe\u7f6e\u4e3a1\u6765\u9009\u62e9\u3002</p> </li> <li> <p>\u5f53\u5728\u4e0a\u4e0b\u6587\u5207\u6362\u671f\u95f4\u5c06\u4efb\u52a1\u4e0a\u4e0b\u6587\u4fdd\u5b58\u5230\u5806\u6808\u65f6\uff0c\u4efb\u52a1\u5806\u6808\u7684\u5229\u7528\u7387\u53ef\u80fd\u4f1a\u8fbe\u5230\u6700\u5927\u3002\u5806\u6808\u6ea2\u51fa\u68c0\u6d4b\u65b9\u6cd5\u4e00\u68c0\u67e5\u5f53\u65f6\u7684\u5806\u6808\u5229\u7528\u7387\uff0c\u4ee5\u786e\u4fdd\u4efb\u52a1\u5806\u6808\u6307\u9488\u4fdd\u6301\u5728\u6709\u6548\u7684\u5806\u6808\u533a\u57df\u5185\u3002\u5982\u679c\u5806\u6808\u6307\u9488\u5305\u542b\u4e00\u4e2a\u65e0\u6548\u503c(\u4e00\u4e2a\u5f15\u7528\u6709\u6548\u5806\u6808\u533a\u57df\u4e4b\u5916\u5185\u5b58\u7684\u503c)\uff0c\u5806\u6808\u6ea2\u51fa\u94a9\u5b50\u51fd\u6570\u5c06\u88ab\u8c03\u7528\u3002</p> </li> <li> <p>\u65b9\u6cd5\u4e00\u662f\u5feb\u901f\u7684\uff0c\u4f46\u4e0d\u4e00\u5b9a\u4f1a\u6355\u83b7\u6240\u6709\u5806\u6808\u6ea2\u51fa\u4e8b\u4ef6\u3002</p> </li> </ul> <p>\u6808\u6ea2\u51fa\u68c0\u6d4b\u65b9\u6cd5\u4e8c</p> <ul> <li> <p>\u65b9\u6cd5\u4e8c\u901a\u8fc7\u5c06configCHECK_FOR_STACK_OVERFLOW\u8bbe\u7f6e\u4e3a2\u6765\u9009\u62e9\u3002</p> </li> <li> <p>\u65b9\u6cd5\u4e8c\u5305\u62ec\u65b9\u6cd5\u4e00\u6267\u884c\u7684\u68c0\u67e5\u3002\u6b64\u5916\uff0c\u65b9\u6cd5\u4e8c\u8fd8\u5c06\u9a8c\u8bc1\u6709\u6548\u5806\u6808\u533a\u57df\u7684\u9650\u5236\u6ca1\u6709\u88ab\u8986\u76d6\u3002</p> </li> <li>\u5206\u914d\u7ed9\u4efb\u52a1\u7684\u5806\u6808\u5728\u521b\u5efa\u4efb\u52a1\u65f6\u7528\u4e00\u4e2a\u5df2\u77e5\u7684\u6a21\u5f0f\u586b\u5145\u3002\u65b9\u6cd52\u68c0\u67e5\u6709\u6548\u5806\u6808\u8303\u56f4\u5185\u7684\u6700\u540en\u4e2a\u5b57\u8282\uff0c\u4ee5\u786e\u4fdd\u8be5\u6a21\u5f0f\u4fdd\u6301\u672a\u4fee\u6539(\u6ca1\u6709\u88ab\u8986\u76d6)\u3002\u5982\u679c\u8fd9n\u4e2a\u5b57\u8282\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u53d1\u751f\u4e86\u6539\u53d8\uff0c\u5c31\u4f1a\u8c03\u7528\u5806\u6808\u6ea2\u51fa\u94a9\u5b50\u51fd\u6570\u3002</li> <li>\u65b9\u6cd5\u4e8c\u6bd4\u65b9\u6cd5\u4e00\u6548\u7387\u4f4e\uff0c\u4f46\u4ecd\u7136\u5feb\u3002\u5b83\u5c06\u6355\u83b7\u5927\u591a\u6570\u5806\u6808\u6ea2\u51fa\u53d1\u751f\uff0c\u5c3d\u7ba1\u53ef\u4ee5\u60f3\u8c61\u6709\u4e9b\u53ef\u80fd\u4f1a\u4e22\u5931(\u4f8b\u5982\uff0c\u5728\u6ca1\u6709\u5199\u5165\u6700\u540en\u4e2a\u5b57\u8282\u7684\u60c5\u51b5\u4e0b\u53d1\u751f\u5806\u6808\u6ea2\u51fa)\u3002</li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configcpu_clock_hz","title":"configCPU_CLOCK_HZ","text":"<p>\u8fd9\u5fc5\u987b\u8bbe\u7f6e\u4e3a\u9a71\u52a8\u5916\u8bbe\u7684\u65f6\u949f\u9891\u7387\uff0c\u5916\u8bbe\u7528\u6765\u751f\u6210\u5185\u6838\u7684\u5468\u671f\u6027\u6ef4\u7b54\u4e2d\u65ad\u3002\u8fd9\u901a\u5e38\u7b49\u4e8e(\u4f46\u4e0d\u603b\u662f)\u4e3b\u7cfb\u7edf\u65f6\u949f\u9891\u7387\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configsupport_dynamic_allocation","title":"configSUPPORT_DYNAMIC_ALLOCATION","text":"<p>\u5982\u679cconfigSUPPORT_DYNAMIC_ALLOCATION\u8bbe\u7f6e\u4e3a1\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u4eceFreeRTOS\u5806\u4e2d\u81ea\u52a8\u5206\u914d\u7684RAM\u521b\u5efaRTOS\u5bf9\u8c61\u3002\u5982\u679cconfigSUPPORT_DYNAMIC_ALLOCATION\u8bbe\u7f6e\u4e3a0\uff0c\u90a3\u4e48RTOS\u5bf9\u8c61\u53ea\u80fd\u4f7f\u7528\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u63d0\u4f9b\u7684RAM\u521b\u5efa\u3002\u4e5f\u770b\u5230configSUPPORT_STATIC_ALLOCATION\u3002</p> <p>\u5982\u679c\u6ca1\u6709\u5b9a\u4e49configSUPPORT_DYNAMIC_ALLOCATION\uff0c\u90a3\u4e48\u5b83\u5c06\u9ed8\u8ba4\u4e3a1\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configenable_backward_compatibility","title":"configENABLE_BACKWARD_COMPATIBILITY","text":"<p>FreeRTOS.h\u5934\u6587\u4ef6\u5305\u542b\u4e00\u7ec4#define\u5b8f\uff0c\u8fd9\u4e9b\u5b8f\u5c06FreeRTOS 8.0.0\u4e4b\u524d\u7248\u672c\u4e2d\u4f7f\u7528\u7684\u6570\u636e\u7c7b\u578b\u540d\u79f0\u6620\u5c04\u5230FreeRTOS 8.0.0\u7248\u672c\u4e2d\u4f7f\u7528\u7684\u540d\u79f0\u3002\u8fd9\u4e9b\u5b8f\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u5c06FreeRTOS\u7684\u7248\u672c\u4ece8.0.0\u4e4b\u524d\u7684\u7248\u672c\u66f4\u65b0\u52308.0.0\u4e4b\u540e\u7684\u7248\u672c\uff0c\u800c\u65e0\u9700\u4fee\u6539\u3002\u5728FreeRTOSConfig.h\u4e2d\u5c06configENABLE_BACKWARD_COMPATIBILITY\u8bbe\u7f6e\u4e3a0\u4f1a\u5c06\u5b8f\u4ece\u6784\u5efa\u4e2d\u6392\u9664\uff0c\u8fd9\u6837\u505a\u4f1a\u5141\u8bb8\u9a8c\u8bc1\u6ca1\u6709\u4f7f\u75288.0.0\u4e4b\u524d\u7248\u672c\u7684\u540d\u79f0\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configgenerate_run_time_stats","title":"configGENERATE_RUN_TIME_STATS","text":"<p>\u4efb\u52a1\u8fd0\u884c\u65f6\u7edf\u8ba1\u7279\u6027\u6536\u96c6\u5173\u4e8e\u6bcf\u4e2a\u4efb\u52a1\u63a5\u6536\u7684\u5904\u7406\u65f6\u95f4\u7684\u4fe1\u606f\u3002\u8be5\u7279\u6027\u8981\u6c42\u5e94\u7528\u7a0b\u5e8f\u914d\u7f6e\u4e00\u4e2a\u8fd0\u884c\u65f6\u7edf\u8ba1\u6570\u636e\u65f6\u57fa\u3002\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u65f6\u57fa\u7684\u9891\u7387\u5fc5\u987b\u81f3\u5c11\u662ftick\u4e2d\u65ad\u9891\u7387\u7684\u5341\u500d\u3002</p> <p>\u5c06configGENERATE_RUN_TIME_STATS\u8bbe\u7f6e\u4e3a1\u5c06\u5305\u542b\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u6536\u96c6\u529f\u80fd\u548c\u6784\u5efa\u4e2d\u7684\u76f8\u5173API\u3002\u5c06configGENERATE_RUN_TIME_STATS\u8bbe\u7f6e\u4e3a0\u5c06\u4ece\u6784\u5efa\u4e2d\u6392\u9664\u8fd0\u884c\u65f6\u7edf\u8ba1\u4fe1\u606f\u6536\u96c6\u529f\u80fd\u548c\u76f8\u5173API\u3002</p> <p>\u5982\u679cconfigGENERATE_RUN_TIME_STATS\u8bbe\u7f6e\u4e3a1\uff0c\u90a3\u4e48\u5e94\u7528\u7a0b\u5e8f\u8fd8\u5fc5\u987b\u63d0\u4f9b\u4e0b\u8868\u4e2d\u63cf\u8ff0\u7684\u5b8f\u7684\u5b9a\u4e49\u3002\u5982\u679cconfigGENERATE_RUN_TIME_STATS\u8bbe\u7f6e\u4e3a0\uff0c\u5219\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u4e0d\u5b9a\u4e49\u88682\u4e2d\u63cf\u8ff0\u7684\u4efb\u4f55\u5b8f\uff0c\u5426\u5219\u5c31\u6709\u53ef\u80fd\u5bfc\u81f4\u5e94\u7528\u7a0b\u5e8f\u65e0\u6cd5\u7f16\u8bd1\u548c/\u6216\u94fe\u63a5\u3002</p> \u5b8f \u63cf\u8ff0 portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() \u5fc5\u987b\u63d0\u4f9b\u6b64\u5b8f\u6765\u521d\u59cb\u5316\u7528\u4e8e\u751f\u6210\u8fd0\u884c\u65f6\u7edf\u8ba1\u6570\u636e\u65f6\u57fa\u7684\u4efb\u4f55\u5916\u8bbe\u3002 portGET_RUN_TIME_COUNTER_VALUE(), or portALT_GET_RUN_TIME_COUNTER_VALUE(Time) \u5fc5\u987b\u63d0\u4f9b\u8fd9\u4e24\u4e2a\u5b8f\u4e2d\u7684\u4e00\u4e2a\u6765\u8fd4\u56de\u5f53\u524d\u7684\u65f6\u57fa\u503c\u2014\u2014\u8fd9\u662f\u5e94\u7528\u7a0b\u5e8f\u5728\u9009\u62e9\u7684\u65f6\u57fa\u5355\u5143\u4e2d\u8fd0\u884c\u7684\u603b\u65f6\u95f4\u3002\u5982\u679c\u4f7f\u7528\u4e86\u7b2c\u4e00\u4e2a\u5b8f\uff0c\u5219\u5fc5\u987b\u5b9a\u4e49\u8be5\u5b8f\u4ee5\u8ba1\u7b97\u5f53\u524d\u7684\u65f6\u95f4\u57fa\u503c\u3002\u5982\u679c\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u5b8f\uff0c\u5219\u5fc5\u987b\u5b9a\u4e49\u5b83\u5c06\u5176\u201cTime\u201d\u53c2\u6570\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7684\u65f6\u95f4\u57fa\u503c\u3002(\u5b8f\u540d\u79f0\u4e2d\u7684\u201cALT\u201d\u662f\u201cALTernative\u201d\u7684\u7f29\u5199)\u3002"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configidle_should_yield","title":"configIDLE_SHOULD_YIELD","text":"<p>configIDLE_SHOULD_YIELD\u63a7\u5236\u7a7a\u95f2\u4efb\u52a1\u7684\u884c\u4e3a\uff0c\u5982\u679c\u6709\u5e94\u7528\u7a0b\u5e8f\u4efb\u52a1\u4e5f\u4ee5\u7a7a\u95f2\u4f18\u5148\u7ea7\u8fd0\u884c\u3002\u53ea\u6709\u5728\u4f7f\u7528\u4e86\u62a2\u5360\u5f0f\u8c03\u5ea6\u7a0b\u5e8f\u65f6\uff0c\u5b83\u624d\u4f1a\u8d77\u4f5c\u7528\u3002</p> <p>\u5171\u4eab\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\u4f7f\u7528\u8f6e\u5faa\uff0c\u65f6\u95f4\u5207\u7247\uff0c\u7b97\u6cd5\u8c03\u5ea6\u3002\u6bcf\u4e2a\u4efb\u52a1\u5c06\u88ab\u4f9d\u6b21\u9009\u62e9\u4ee5\u8fdb\u5165\u8fd0\u884c\u72b6\u6001\uff0c\u4f46\u53ef\u80fd\u4e0d\u4f1a\u5728\u6574\u4e2a\u8ba1\u65f6\u5468\u671f\u5185\u4fdd\u6301\u8fd0\u884c\u72b6\u6001\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u4efb\u52a1\u53ef\u80fd\u88ab\u62a2\u5360\uff0c\u9009\u62e9\u653e\u5f03\uff0c\u6216\u8005\u9009\u62e9\u5728\u4e0b\u4e00\u4e2atick\u4e2d\u65ad\u4e4b\u524d\u8fdb\u5165\u963b\u585e\u72b6\u6001\u3002</p> <p>\u5982\u679cconfigIDLE_SHOULD_YIELD\u8bbe\u7f6e\u4e3a0\uff0c\u90a3\u4e48\u7a7a\u95f2\u4efb\u52a1\u5c06\u6c38\u8fdc\u4e0d\u4f1a\u8ba9\u51fa\u7ed9\u5176\u4ed6\u4efb\u52a1\uff0c\u53ea\u6709\u5f53\u5b83\u88ab\u62a2\u5360\u65f6\u624d\u4f1a\u79bb\u5f00Running\u72b6\u6001\u3002</p> <p>\u5982\u679cconfigIDLE_SHOULD_YIELD\u8bbe\u7f6e\u4e3a1\uff0c\u90a3\u4e48\u5982\u679c\u6709\u53e6\u4e00\u4e2aidle\u4f18\u5148\u7ea7\u4efb\u52a1\u5904\u4e8eReady\u72b6\u6001\uff0c\u7a7a\u95f2\u4efb\u52a1\u5c06\u6c38\u8fdc\u4e0d\u4f1a\u6267\u884c\u5176\u5b9a\u4e49\u7684\u529f\u80fd\u7684\u4e0d\u6b62\u4e00\u6b21\u8fed\u4ee3\uff0c\u800c\u4e0d\u4f1a\u5c48\u670d\u4e8e\u53e6\u4e00\u4e2a\u4efb\u52a1\u3002\u8fd9\u786e\u4fdd\u5f53\u5e94\u7528\u7a0b\u5e8f\u4efb\u52a1\u53ef\u4ee5\u8fd0\u884c\u65f6\uff0c\u5728\u7a7a\u95f2\u4efb\u52a1\u4e0a\u82b1\u8d39\u7684\u65f6\u95f4\u6700\u5c11\u3002</p> <p>Idle\u4efb\u52a1\u4e00\u81f4\u5730\u8ba9\u4f4d\u4e8e\u53e6\u4e00\u4e2aIdle\u4f18\u5148\u7ea7Ready\u72b6\u6001\u4efb\u52a1\uff0c\u5176\u526f\u4f5c\u7528\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <p>\u4e0a\u56fe\u663e\u793a\u4e86\u56db\u4e2a\u4efb\u52a1\u7684\u6267\u884c\u6a21\u5f0f\uff0c\u5b83\u4eec\u90fd\u4ee5\u7a7a\u95f2\u4f18\u5148\u7ea7\u8fd0\u884c\u3002\u4efb\u52a1A\u3001B\u548cC\u662f\u5e94\u7528\u7a0b\u5e8f\u4efb\u52a1\u3002\u4efb\u52a11\u4e3a\u7a7a\u95f2\u4efb\u52a1\u3002tick\u4e2d\u65ad\u4ee5\u56fa\u5b9a\u7684\u95f4\u9694\u542f\u52a8\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u5728T0\u3001T1\u3001T2\u7b49\u65f6\u523b\u663e\u793a\u3002\u53ef\u4ee5\u770b\u5230Idle\u4efb\u52a1\u5728T2\u65f6\u95f4\u5f00\u59cb\u6267\u884c\u3002\u5b83\u6267\u884c\u4e00\u4e2a\u65f6\u95f4\u7247\u7684\u4e00\u90e8\u5206\uff0c\u7136\u540e\u8ba9\u4efb\u52a1a\u6267\u884c\u540c\u4e00\u4e2a\u65f6\u95f4\u7247\u7684\u5176\u4f59\u90e8\u5206\uff0c\u7136\u540e\u5728\u65f6\u95f4T3\u88ab\u62a2\u5360\u3002\u4efb\u52a1I\u548c\u4efb\u52a1A\u6709\u6548\u5730\u5171\u4eab\u4e00\u4e2a\u65f6\u95f4\u7247\uff0c\u4ece\u800c\u5bfc\u81f4\u4efb\u52a1B\u548c\u4efb\u52a1C\u59cb\u7ec8\u6bd4\u4efb\u52a1A\u5360\u7528\u66f4\u591a\u7684\u5904\u7406\u65f6\u95f4\u3002</p> <p>\u5c06configIDLE_SHOULD_YIELD\u8bbe\u7f6e\u4e3a0\u53ef\u4ee5\u901a\u8fc7\u786e\u4fddIdle\u4efb\u52a1\u5728\u6574\u4e2atick\u5468\u671f\u5185\u4fdd\u6301\u8fd0\u884c\u72b6\u6001\u6765\u9632\u6b62\u8fd9\u79cd\u884c\u4e3a(\u9664\u975e\u88ab\u9664tick\u4e2d\u65ad\u4e4b\u5916\u7684\u5176\u4ed6\u4e2d\u65ad\u62a2\u5360)\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6309\u65f6\u95f4\u5e73\u5747\u503c\u8ba1\u7b97\uff0c\u5171\u4eab\u7a7a\u95f2\u4f18\u5148\u7ea7\u7684\u5176\u4ed6\u4efb\u52a1\u5c06\u83b7\u5f97\u76f8\u540c\u7684\u5904\u7406\u65f6\u95f4\u4efd\u989d\uff0c\u4f46\u6267\u884c\u7a7a\u95f2\u4efb\u52a1\u7684\u65f6\u95f4\u4e5f\u4f1a\u66f4\u591a\u3002\u4f7f\u7528Idle\u4efb\u52a1\u94a9\u5b50\u51fd\u6570\u53ef\u4ee5\u786e\u4fdd\u6709\u6548\u5730\u4f7f\u7528Idle\u4efb\u52a1\u6267\u884c\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configinclude_application_defined_privileged_functions","title":"configINCLUDE_APPLICATION_DEFINED_PRIVILEGED_FUNCTIONS","text":"<p>configINCLUDE_APPLICATION_DEFINED_PRIVILEGED_FUNCTIONS\u53ea\u88abFreeRTOS MPU\u4f7f\u7528\u3002</p> <p>\u5982\u679cconfigINCLUDE_APPLICATION_DEFINED_PRIVILEGED_FUNCTIONS\u88ab\u8bbe\u7f6e\u4e3a1\uff0c\u90a3\u4e48\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u5fc5\u987b\u63d0\u4f9b\u4e00\u4e2a\u540d\u4e3a\u201capplication_defined_privileged_functions.h\u201d\u7684\u5934\u6587\u4ef6\uff0c\u5728\u8fd9\u4e2a\u5934\u6587\u4ef6\u4e2d\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u9700\u8981\u4ee5\u7279\u6743\u6a21\u5f0f\u6267\u884c\u7684\u51fd\u6570\u53ef\u4ee5\u88ab\u5b9e\u73b0\u3002\u8bf7\u6ce8\u610f\uff0c\u5c3d\u7ba1\u6709.h\u6269\u5c55\u540d\uff0c\u5934\u6587\u4ef6\u5e94\u8be5\u5305\u542bC\u51fd\u6570\u7684\u5b9e\u73b0\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u51fd\u6570\u7684\u539f\u578b\u3002</p> <p>\u5728\"application_defined_privileged_functions.h\"\u4e2d\u5b9e\u73b0\u7684\u51fd\u6570\u5fc5\u987b\u5206\u522b\u4f7f\u7528prvraisprivilege()\u51fd\u6570\u548cportRESET_PRIVILEGE()\u5b8f\u4fdd\u5b58\u548c\u6062\u590d\u5904\u7406\u5668\u7684\u7279\u6743\u72b6\u6001\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5e93\u4e2d\u63d0\u4f9b\u7684print\u51fd\u6570\u8bbf\u95ee\u4e0d\u5728\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u63a7\u5236\u8303\u56f4\u5185\u7684RAM\uff0c\u56e0\u6b64\u4e0d\u80fd\u5206\u914d\u7ed9\u53d7\u5185\u5b58\u4fdd\u62a4\u7684\u7528\u6237\u6a21\u5f0f\u4efb\u52a1\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u5c06print\u51fd\u6570\u5c01\u88c5\u5230\u4e00\u4e2a\u7279\u6743\u51fd\u6570\u4e2d:</p> <pre><code>void MPU_debug_printf( const char *pcMessage )\n{\n    State the privilege level of the processor when the function was called. */\n    BaseType_t xRunningPrivileged = prvRaisePrivilege();\n    /* Call the library function, which now has access to all RAM. */\n    debug_printf( pcMessage );\n    /* Reset the processor privilege level to its original value. */\n    portRESET_PRIVILEGE( xRunningPrivileged );\n}\n</code></pre> <p>\u8fd9\u79cd\u6280\u672f\u5e94\u8be5\u53ea\u5728\u5f00\u53d1\u671f\u95f4\u4f7f\u7528\uff0c\u800c\u4e0d\u662f\u90e8\u7f72\u671f\u95f4\uff0c\u56e0\u4e3a\u5b83\u7ed5\u8fc7\u4e86\u5185\u5b58\u4fdd\u62a4\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configkernel_interrupt_priority-configmax_syscall_interrupt_priority-configmax_api_call_interrupt_priority","title":"configKERNEL_INTERRUPT_PRIORITY, configMAX_SYSCALL_INTERRUPT_PRIORITY, configMAX_API_CALL_INTERRUPT_PRIORITY","text":"<p>configMAX_API_CALL_INTERRUPT_PRIORITY\u662fconfigMAX_SYSCALL_INTERRUPT_PRIORITY\u7684\u65b0\u540d\u79f0\uff0c\u5b83\u53ea\u88ab\u8f83\u65b0\u7684\u7aef\u53e3\u4f7f\u7528\u3002\u4e24\u8005\u662f\u7b49\u4ef7\u7684\u3002</p> <p>configKERNEL_INTERRUPT_PRIORITY\u548cconfigMAX_SYSCALL_INTERRUPT_PRIORITY\u53ea\u4e0e\u5b9e\u73b0\u4e2d\u65ad\u5d4c\u5957\u7684\u7aef\u53e3\u76f8\u5173\u3002</p> <p>\u5982\u679c\u4e00\u4e2a\u7aef\u53e3\u53ea\u5b9e\u73b0configKERNEL_INTERRUPT_PRIORITY\u914d\u7f6e\u5e38\u91cf\uff0c\u90a3\u4e48configKERNEL_INTERRUPT_PRIORITY\u8bbe\u7f6e\u5185\u6838\u672c\u8eab\u4f7f\u7528\u7684\u4e2d\u65ad\u7684\u4f18\u5148\u7ea7\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cISR\u5b89\u5168\u7684FreeRTOS API\u51fd\u6570(\u90a3\u4e9b\u4ee5\u201cFromISR\u201d\u7ed3\u5c3e\u7684\u51fd\u6570)\u4e0d\u80fd\u4ece\u4efb\u4f55\u88ab\u5206\u914d\u4e86\u4f18\u5148\u7ea7\u9ad8\u4e8econfigKERNEL_INTERRUPT_PRIORITY\u8bbe\u7f6e\u7684\u4e2d\u65ad\u8c03\u7528\u3002\u4e0d\u8c03\u7528API\u51fd\u6570\u7684\u4e2d\u65ad\u53ef\u4ee5\u4ee5\u66f4\u9ad8\u7684\u4f18\u5148\u7ea7\u6267\u884c\uff0c\u4ee5\u786e\u4fdd\u4e2d\u65ad\u65f6\u95f4\u3001\u786e\u5b9a\u6027\u548c\u5ef6\u8fdf\u4e0d\u4f1a\u53d7\u5230\u5185\u6838\u6b63\u5728\u6267\u884c\u7684\u4efb\u4f55\u4e8b\u60c5\u7684\u4e0d\u5229\u5f71\u54cd\u3002</p> <p>\u5982\u679c\u4e00\u4e2a\u7aef\u53e3\u540c\u65f6\u5b9e\u73b0\u4e86configKERNEL_INTERRUPT_PRIORITY\u548cconfigMAX_SYSCALL_INTERRUPT_PRIORITY\u914d\u7f6e\u5e38\u91cf\uff0c\u90a3\u4e48configKERNEL_INTERRUPT_PRIORITY\u8bbe\u7f6e\u5185\u6838\u672c\u8eab\u4f7f\u7528\u7684\u4e2d\u65ad\u7684\u4f18\u5148\u7ea7\uff0cconfigMAX_SYSCALL_INTERRUPT_PRIORITY\u8bbe\u7f6e\u4e2d\u65ad\u7684\u6700\u5927\u4f18\u5148\u7ea7\uff0cISR\u5b89\u5168\u7684FreeRTOS API\u51fd\u6570(\u90a3\u4e9b\u4ee5\u201cFromISR\u201d\u7ed3\u5c3e\u7684\u51fd\u6570)\u53ef\u4ee5\u4ece\u8fd9\u4e9b\u4e2d\u65ad\u8c03\u7528\u3002\u901a\u8fc7\u5c06configMAX_SYSCALL_INTERRUPT_PRIORITY\u8bbe\u7f6e\u5728\u6bd4configKERNEL_INTERRUPT_PRIORITY\u66f4\u9ad8\u7684\u4f18\u5148\u7ea7\u4e4b\u4e0a(\u5373\u5728\u66f4\u9ad8\u7684\u4f18\u5148\u7ea7\u7ea7\u522b\u4e0a)\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a\u5b8c\u6574\u7684\u4e2d\u65ad\u5d4c\u5957\u6a21\u578b\u3002\u4e0d\u8c03\u7528API\u51fd\u6570\u7684\u4e2d\u65ad\u53ef\u4ee5\u4ee5\u9ad8\u4e8econfigMAX_SYSCALL_INTERRUPT_PRIORITY\u7684\u4f18\u5148\u7ea7\u6267\u884c\uff0c\u4ee5\u786e\u4fdd\u4e2d\u65ad\u8ba1\u65f6\u3001\u786e\u5b9a\u6027\u548c\u5ef6\u8fdf\u4e0d\u53d7\u5185\u6838\u6b63\u5728\u6267\u884c\u7684\u4efb\u4f55\u4e8b\u60c5\u7684\u4e0d\u5229\u5f71\u54cd\u3002</p> <p>\u4f5c\u4e3a\u4e00\u4e2a\u4f8b\u5b50\u2014\u2014\u5047\u8bbe\u4e00\u4e2a\u5fae\u63a7\u5236\u5668\u6709\u4e03\u4e2a\u4e2d\u65ad\u4f18\u5148\u7ea7\u3002\u5728\u8fd9\u4e2a\u5047\u8bbe\u7684\u60c5\u51b5\u4e0b\uff0c1\u662f\u6700\u4f4e\u7684\u4e2d\u65ad\u4f18\u5148\u7ea7\uff0c7\u662f\u6700\u9ad8\u7684\u4e2d\u65ad\u4f18\u5148\u7ea7</p> <p>\u6ce8\u610f\uff0c\u5728\u4e3aconfigKERNEL_INTERRUPT_PRIORITY\u548cconfigMAX_SYCALL_INTERRUPT_PRIORITY\u5206\u914d\u503c\u65f6\u5fc5\u987b\u5c0f\u5fc3\uff0c\u56e0\u4e3a\u6709\u4e9b\u5fae\u63a7\u5236\u5668\u4f7f\u75280\u62161\u8868\u793a\u6700\u4f4e\u4f18\u5148\u7ea7\uff0c\u800c\u5176\u4ed6\u5fae\u63a7\u5236\u5668\u4f7f\u75280\u62161\u8868\u793a\u6700\u9ad8\u4f18\u5148\u7ea7\u3002</p> <p>\u4e0b\u56fe\u63cf\u8ff0\u4e86\u5f53configKERNEL_INTERRUPT_PRIORITY\u548cconfigMAX_SYSCALL_INTERRUPT_PRIORITY\u5206\u522b\u88ab\u8bbe\u7f6e\u4e3a1\u548c3\u65f6\uff0c\u5728\u6bcf\u4e2a\u4f18\u5148\u7ea7\u7ea7\u522b\u4e0a\u53ef\u4ee5\u505a\u4ec0\u4e48\u548c\u4e0d\u80fd\u505a\u4ec0\u4e48\u3002</p> <p></p> <p>\u8fd0\u884c\u5728configMAX_SYSCALL_INTERRUPT_PRIORITY\u4e4b\u4e0a\u7684isr\u4e0d\u4f1a\u88ab\u5c4f\u853d\u5185\u6838\u672c\u8eab\uff0c\u6240\u4ee5\u5b83\u4eec\u7684\u54cd\u5e94\u6027\u4e0d\u53d7\u5185\u6838\u529f\u80fd\u7684\u5f71\u54cd\u3002\u8fd9\u662f\u975e\u5e38\u9002\u5408\u9700\u8981\u975e\u5e38\u9ad8\u65f6\u95f4\u7cbe\u5ea6\u7684\u4e2d\u65ad\uff0c\u4f8b\u5982\uff0c\u4e2d\u65ad\u6267\u884c\u7535\u52a8\u673a\u6362\u5411\u3002\u7136\u800c\uff0c\u4e2d\u65ad\u5177\u6709\u4e0a\u9762\u7684\u4f18\u5148\u7ea7</p> <p>configMAX_SYSCALL_INTERRUPT_PRIORITY\u4e0d\u80fd\u8c03\u7528\u4efb\u4f55FreeRTOS API\u51fd\u6570\uff0c\u5373\u4f7f\u662f\u4ee5\u201cFromISR\u201d\u7ed3\u5c3e\u7684\u4e5f\u4e0d\u80fd\u4f7f\u7528\u3002</p> <p>configKERNEL_INTERRUPT_PRIORITY\u51e0\u4e4e\u603b\u662f(\u4e0d\u662f\u603b\u662f)\u88ab\u8bbe\u7f6e\u4e3a\u6700\u4f4e</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configmax_co_routine_priorities","title":"configMAX_CO_ROUTINE_PRIORITIES","text":"<p>\u8bbe\u7f6e\u53ef\u5206\u914d\u7ed9\u534f\u540c\u4f8b\u7a0b\u7684\u6700\u5927\u4f18\u5148\u7ea7\u3002\u53ef\u4ee5\u5206\u914d\u534f\u540c\u4f8b\u7a0b\u4f18\u5148\u7ea7\u4ece0(\u6700\u4f4e\u4f18\u5148\u7ea7)\u5230(configMAX_CO_ROUTINE_PRIORITIES -1)\uff0c\u8fd9\u662f\u6700\u9ad8\u4f18\u5148\u7ea7\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configmax_priorities","title":"configMAX_PRIORITIES","text":"<p>\u8bbe\u7f6e\u53ef\u5206\u914d\u7ed9\u4efb\u52a1\u7684\u6700\u5927\u4f18\u5148\u7ea7\u3002\u4efb\u52a1\u53ef\u4ee5\u88ab\u5206\u914d\u4f18\u5148\u7ea7\u4ece0(\u6700\u4f4e\u4f18\u5148\u7ea7)\u5230\u6700\u9ad8\u7684(configMAX_PRIORITIES - 1)</p> <p>\u4f18\u5148\u7ea7\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configmax_task_name_len","title":"configMAX_TASK_NAME_LEN","text":"<p>\u8bbe\u7f6e\u53ef\u7528\u4e8e\u4efb\u52a1\u540d\u79f0\u7684\u6700\u5927\u5b57\u7b26\u6570\u3002NULL\u7ed3\u675f\u7b26\u5305\u542b\u5728\u5b57\u7b26\u8ba1\u6570\u4e2d\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configmax_syscall_interrupt_priority","title":"configMAX_SYSCALL_INTERRUPT_PRIORITY","text":"<p>\u8bf7\u53c2\u9605configKERNEL_INTERRUPT_PRIORITY\u914d\u7f6e\u5e38\u91cf\u7684\u63cf\u8ff0\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configminimal_stack_size","title":"configMINIMAL_STACK_SIZE","text":"<p>\u8bbe\u7f6e\u5206\u914d\u7ed9Idle\u4efb\u52a1\u7684\u5806\u6808\u5927\u5c0f\u3002\u8be5\u503c\u662f\u7528\u5355\u8bcd\u800c\u4e0d\u662f\u5b57\u8282\u6307\u5b9a\u7684\u3002</p> <p>\u5185\u6838\u672c\u8eab\u4e0d\u5c06configMINIMAL_STACK_SIZE\u7528\u4e8e\u4efb\u4f55\u5176\u4ed6\u76ee\u7684\uff0c\u5c3d\u7ba1\u6807\u51c6\u6f14\u793a\u4efb\u52a1\u5e7f\u6cdb\u4f7f\u7528\u8fd9\u4e2a\u5e38\u91cf\u3002</p> <p>\u6bcf\u4e2a\u5b98\u65b9FreeRTOS\u7aef\u53e3\u90fd\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6f14\u793a\u5e94\u7528\u7a0b\u5e8f\u3002\u5728\u8fd9\u6837\u4e00\u4e2a\u7279\u5b9a\u4e8e\u7aef\u53e3\u7684\u6f14\u793a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u7684configMINIMAL_STACK_SIZE\u7684\u503c\u662f\u4f7f\u7528\u8be5\u7aef\u53e3\u521b\u5efa\u7684\u4efb\u4f55\u4efb\u52a1\u6240\u5efa\u8bae\u7684\u6700\u5c0f\u5806\u6808\u5927\u5c0f\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#confignum_thread_local_storage_pointers","title":"configNUM_THREAD_LOCAL_STORAGE_POINTERS","text":"<p>\u7ebf\u7a0b\u672c\u5730\u5b58\u50a8(\u6216TLS)\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u5728\u4efb\u52a1\u7684\u63a7\u5236\u5757\u4e2d\u5b58\u50a8\u503c\uff0c\u4f7f\u8be5\u503c\u7279\u5b9a\u4e8e(\u672c\u5730\u5230)\u4efb\u52a1\u672c\u8eab\uff0c\u5e76\u5141\u8bb8\u6bcf\u4e2a\u4efb\u52a1\u62e5\u6709\u81ea\u5df1\u72ec\u7279\u7684\u503c\u3002</p> <p>\u6bcf\u4e2a\u4efb\u52a1\u90fd\u6709\u81ea\u5df1\u7684\u6307\u9488\u6570\u7ec4\uff0c\u53ef\u4ee5\u7528\u4f5c\u7ebf\u7a0b\u672c\u5730\u5b58\u50a8\u3002\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15\u6570\u91cf\u7531confignum_thread_local_storage_pointer\u8bbe\u7f6e\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configqueue_registry_size","title":"configQUEUE_REGISTRY_SIZE","text":"<p>\u8bbe\u7f6e\u4efb\u4f55\u65f6\u5019\u53ef\u4ee5\u4ece\u961f\u5217\u6ce8\u518c\u8868\u4e2d\u5f15\u7528\u7684\u961f\u5217\u548c\u4fe1\u53f7\u91cf\u7684\u6700\u5927\u6570\u91cf\u3002\u53ea\u6709\u9700\u8981\u5728\u5185\u6838\u611f\u77e5\u8c03\u8bd5\u63a5\u53e3\u4e2d\u67e5\u770b\u7684\u961f\u5217\u548c\u4fe1\u53f7\u91cf\u624d\u9700\u8981\u6ce8\u518c\u3002</p> <p>\u961f\u5217\u6ce8\u518c\u8868\u4ec5\u5728\u4f7f\u7528\u5185\u6838\u611f\u77e5\u8c03\u8bd5\u5668\u65f6\u624d\u9700\u8981\u3002\u5728\u5176\u4ed6\u6240\u6709\u65f6\u5019\uff0c\u5b83\u90fd\u6ca1\u6709\u4f5c\u7528\uff0c\u53ef\u4ee5\u901a\u8fc7\u5c06configQUEUE_REGISTRY_SIZE\u8bbe\u7f6e\u4e3a0\u6216\u5b8c\u5168\u5ffd\u7565configQUEUE_REGISTRY_SIZE\u914d\u7f6e\u5e38\u91cf\u5b9a\u4e49\u6765\u5ffd\u7565\u5b83\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configsupport_static_allocation","title":"configSUPPORT_STATIC_ALLOCATION","text":"<p>\u5982\u679cconfigSUPPORT_STATIC_ALLOCATION\u8bbe\u7f6e\u4e3a1\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4f7f\u7528\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5668\u63d0\u4f9b\u7684RAM\u521b\u5efaRTOS\u5bf9\u8c61\u3002\u5982\u679cconfigSUPPORT_STATIC_ALLOCATION\u88ab\u8bbe\u7f6e\u4e3a0\uff0c\u90a3\u4e48RTOS\u5bf9\u8c61\u53ea\u80fd\u4f7f\u7528\u4eceFreeRTOS\u5806\u4e2d\u5206\u914d\u7684RAM\u521b\u5efa\u3002\u4e5f\u770b\u5230configSUPPORT_DYNAMIC_ALLOCATION\u3002</p> <p>\u5982\u679c\u6ca1\u6709\u5b9a\u4e49configSUPPORT_STATIC_ALLOCATION\uff0c\u90a3\u4e48\u5b83\u5c06\u9ed8\u8ba4\u4e3a0\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configtick_rate_hz","title":"configTICK_RATE_HZ","text":"<p>\u8bbe\u7f6etick\u4e2d\u65ad\u9891\u7387\u3002\u8be5\u503c\u4ee5Hz\u4e3a\u5355\u4f4d\u3002</p> <p>\u53ef\u4ee5\u4f7f\u7528pdMS_TO_TICKS()\u5b8f\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u4ee5ticks\u4e3a\u5355\u4f4d\u6307\u5b9a\u7684\u65f6\u95f4\u3002\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u6307\u5b9a\u7684\u5757\u65f6\u95f4\u5c06\u4fdd\u6301\u4e0d\u53d8\uff0c\u5373\u4f7fconfigTICK_RATE_HZ\u5b9a\u4e49\u88ab\u66f4\u6539\u3002\u5f53configTICK_RATE_HZ\u5c0f\u4e8e\u7b49\u4e8e1000\u65f6\uff0c\u624d\u53ef\u4ee5\u4f7f\u7528pdMS_TO_TICKS()\u3002\u6807\u51c6\u6f14\u793a\u4efb\u52a1\u5927\u91cf\u4f7f\u7528pdMS_TO_TICKS()\uff0c\u56e0\u6b64\u5b83\u4eec\u4e5f\u53ea\u80fd\u5728configTICK_RATE_HZ\u5c0f\u4e8e\u6216\u7b49\u4e8e1000\u65f6\u4f7f\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configtimer_queue_length","title":"configTIMER_QUEUE_LENGTH","text":"<p>FreeRTOS\u5b9a\u65f6\u5668API\u901a\u8fc7\u4e00\u4e2a\u540d\u4e3a\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u7684\u961f\u5217\u5411\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u53d1\u9001\u547d\u4ee4\u3002configTIMER_QUEUE_LENGTH\u8bbe\u7f6e\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4e00\u6b21\u53ef\u4ee5\u5bb9\u7eb3\u7684\u672a\u5904\u7406\u547d\u4ee4\u7684\u6700\u5927\u6570\u91cf\u3002</p> <p>\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u53ef\u80fd\u88ab\u586b\u6ee1\u7684\u539f\u56e0\u5305\u62ec:</p> <ul> <li> <p>\u5728\u542f\u52a8\u8c03\u5ea6\u5668\u4e4b\u524d\uff0c\u4e5f\u5c31\u662f\u5728\u521b\u5efa\u8ba1\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u4e4b\u524d\uff0c\u6267\u884c\u591a\u4e2a\u8ba1\u65f6\u5668API\u51fd\u6570\u8c03\u7528\u3002</p> </li> <li> <p>\u4ece\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b(ISR)\u8c03\u7528\u591a\u4e2a(\u4e2d\u65ad\u5b89\u5168)\u8ba1\u65f6\u5668API\u51fd\u6570\uff0c\u56e0\u6b64\u4e0d\u5141\u8bb8\u8ba1\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u5904\u7406\u547d\u4ee4\u3002</p> </li> <li> <p>\u4ece\u4f18\u5148\u7ea7\u9ad8\u4e8e\u8ba1\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u7684\u4efb\u52a1\u53d1\u51fa\u7684\u591a\u4e2a\u8ba1\u65f6\u5668API\u51fd\u6570\u8c03\u7528\u3002</p> </li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configtimer_task_priority","title":"configTIMER_TASK_PRIORITY","text":"<p>\u8ba1\u65f6\u5668\u529f\u80fd\u4e0d\u662f\u7531\u6838\u5fc3FreeRTOS\u4ee3\u7801\u63d0\u4f9b\u7684\uff0c\u800c\u662f\u7531\u8ba1\u65f6\u5668\u670d\u52a1(\u6216\u5b88\u62a4\u8fdb\u7a0b)\u4efb\u52a1\u63d0\u4f9b\u7684\u3002FreeRTOS\u5b9a\u65f6\u5668API\u901a\u8fc7\u4e00\u4e2a\u540d\u4e3a\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u7684\u961f\u5217\u5411\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u53d1\u9001\u547d\u4ee4\u3002configTIMER_TASK_PRIORITY\u8bbe\u7f6e\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002\u50cf\u6240\u6709\u4efb\u52a1\u4e00\u6837\uff0c\u8ba1\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u53ef\u4ee5\u57280\u5230(configMAX_PRIORITIES - 1)\u4e4b\u95f4\u7684\u4efb\u610f\u4f18\u5148\u7ea7\u8fd0\u884c\u3002</p> <p>\u9700\u8981\u4ed4\u7ec6\u9009\u62e9\u8fd9\u4e2a\u503c\uff0c\u4ee5\u6ee1\u8db3\u5e94\u7528\u7a0b\u5e8f\u7684\u9700\u6c42\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8ba1\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u88ab\u8bbe\u7f6e\u4e3a\u7cfb\u7edf\u4e2d\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u4efb\u52a1\uff0c\u90a3\u4e48\u53d1\u9001\u7ed9\u8ba1\u65f6\u5668\u670d\u52a1\u4efb\u52a1(\u5f53\u8c03\u7528\u8ba1\u65f6\u5668API\u51fd\u6570\u65f6)\u7684\u547d\u4ee4\u548c\u8fc7\u671f\u7684\u8ba1\u65f6\u5668\u90fd\u5c06\u7acb\u5373\u5f97\u5230\u5904\u7406\u3002\u76f8\u53cd\uff0c\u5982\u679c\u8ba1\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u88ab\u8d4b\u4e88\u4f4e\u4f18\u5148\u7ea7\uff0c\u90a3\u4e48\u53d1\u9001\u7ed9\u8ba1\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u7684\u547d\u4ee4\u548c\u8fc7\u671f\u7684\u8ba1\u65f6\u5668\u5c06\u4e0d\u4f1a\u88ab\u5904\u7406\uff0c\u76f4\u5230\u8ba1\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u6210\u4e3a\u80fd\u591f\u8fd0\u884c\u7684\u6700\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u3002\u7136\u800c\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8ba1\u65f6\u5668\u5230\u671f\u65f6\u95f4\u662f\u76f8\u5bf9\u4e8e\u53d1\u9001\u547d\u4ee4\u65f6\u8ba1\u7b97\u7684\uff0c\u800c\u4e0d\u662f\u76f8\u5bf9\u4e8e\u5904\u7406\u547d\u4ee4\u65f6\u8ba1\u7b97\u7684\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configtimer_task_stack_depth","title":"configTIMER_TASK_STACK_DEPTH","text":"<p>\u8ba1\u65f6\u5668\u529f\u80fd\u4e0d\u662f\u7531\u6838\u5fc3FreeRTOS\u4ee3\u7801\u63d0\u4f9b\u7684\uff0c\u800c\u662f\u7531\u8ba1\u65f6\u5668\u670d\u52a1(\u6216\u5b88\u62a4\u8fdb\u7a0b)\u4efb\u52a1\u63d0\u4f9b\u7684\u3002FreeRTOS\u5b9a\u65f6\u5668API\u901a\u8fc7\u4e00\u4e2a\u540d\u4e3a\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u7684\u961f\u5217\u5411\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u53d1\u9001\u547d\u4ee4\u3002configTIMER_TASK_STACK_DEPTH\u8bbe\u7f6e\u5206\u914d\u7ed9\u8ba1\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u7684\u5806\u6808\u5927\u5c0f(\u7528\u5355\u8bcd\u8868\u793a\uff0c\u800c\u4e0d\u662f\u5b57\u8282)\u3002</p> <p>\u8ba1\u65f6\u5668\u56de\u8c03\u51fd\u6570\u5728\u8ba1\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u7684\u4e0a\u4e0b\u6587\u4e2d\u6267\u884c\u3002\u56e0\u6b64\uff0c\u8ba1\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u7684\u5806\u6808\u9700\u6c42\u53d6\u51b3\u4e8e\u8ba1\u65f6\u5668\u56de\u8c03\u51fd\u6570\u7684\u5806\u6808\u9700\u6c42\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configtotal_heap_size","title":"configTOTAL_HEAP_SIZE","text":"<p>\u6bcf\u6b21\u521b\u5efa\u4efb\u52a1\u3001\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u65f6\uff0c\u5185\u6838\u90fd\u4f1a\u4ece\u5806\u4e2d\u5206\u914d\u5185\u5b58\u3002FreeRTOS\u7684\u5b98\u65b9\u4e0b\u8f7d\u5305\u62ec\u4e09\u4e2a\u793a\u4f8b\u5185\u5b58\u5206\u914d\u65b9\u6848\u3002\u8be5\u65b9\u6848\u5206\u522b\u5728heap_1.c\u3001heap_2.c\u3001heap_3.c\u548cheap_4.c\u6e90\u6587\u4ef6\u4e2d\u5b9e\u73b0\u3002heap_1.c\u3001heap_2.c\u548cheap_4.c\u5b9a\u4e49\u7684\u65b9\u6848\u4ece\u4e00\u4e2a\u9759\u6001\u5206\u914d\u7684\u6570\u7ec4(\u79f0\u4e3aFreeRTOS\u5806)\u4e2d\u5206\u914d\u5185\u5b58\u3002configTOTAL_HEAP_SIZE\u8bbe\u7f6e\u8be5\u6570\u7ec4\u7684\u5927\u5c0f\u3002\u5927\u5c0f\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u6307\u5b9a\u3002</p> <p>\u9664\u975e\u5e94\u7528\u7a0b\u5e8f\u6b63\u5728\u4f7f\u7528heap_1.c\u3001heap_2.c\u6216heap_4.c\uff0c\u5426\u5219configTOTAL_HEAP_SIZE\u8bbe\u7f6e\u6ca1\u6709\u4f5c\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configuse_16_bit_ticks","title":"configUSE_16_BIT_TICKS","text":"<p>\u6ef4\u7b54\u8ba1\u6570\u4fdd\u5b58\u5728\u7c7b\u578b\u4e3aTickType_t\u7684\u53d8\u91cf\u4e2d\u3002\u5f53configUSE_16_BIT_TICKS\u8bbe\u7f6e\u4e3a1\u65f6\uff0cTickType_t\u88ab\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u65e0\u7b26\u53f716\u4f4d\u7c7b\u578b\u3002\u5f53configUSE_16_BIT_TICKS\u8bbe\u7f6e\u4e3a0\u65f6\uff0cTickType_t\u88ab\u5b9a\u4e49\u4e3a32\u4f4d\u65e0\u7b26\u53f7\u7c7b\u578b\u3002</p> <p>\u4f7f\u752816\u4f4d\u7c7b\u578b\u53ef\u4ee5\u5927\u5927\u63d0\u9ad88\u4f4d\u548c16\u4f4d\u5fae\u63a7\u5236\u5668\u7684\u6548\u7387\uff0c\u4f46\u4ee3\u4ef7\u662f\u9650\u5236\u53ef\u4ee5\u6307\u5b9a\u7684\u6700\u5927\u5757\u65f6\u95f4\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configuse_alternative_api","title":"configUSE_ALTERNATIVE_API","text":"<p>\u63d0\u4f9b\u4e86\u4e24\u7ec4API\u51fd\u6570\u7528\u4e8e\u5411\u961f\u5217\u53d1\u9001\u4fe1\u606f\u548c\u4ece\u961f\u5217\u63a5\u6536\u4fe1\u606f\u2014\u2014\u6807\u51c6API\u548c\u201c\u66ff\u4ee3\u201dAPI\u3002\u672c\u624b\u518c\u4e2d\u53ea\u8bb0\u5f55\u4e86\u6807\u51c6API\u3002\u4e0d\u518d\u63a8\u8350\u4f7f\u7528\u66ff\u4ee3API\u3002</p> <p>\u5c06configUSE_ALTERNATIVE_API\u8bbe\u7f6e\u4e3a1\u5c06\u5728\u6784\u5efa\u4e2d\u5305\u542b\u53ef\u9009API\u51fd\u6570\u3002\u5c06configUSE_ALTERNATIVE_API\u8bbe\u7f6e\u4e3a0\u5c06\u4ece\u6784\u5efa\u4e2d\u6392\u9664\u53ef\u9009API\u51fd\u6570\u3002</p> <p>\u6ce8\u610f:\u4e0d\u5efa\u8bae\u4f7f\u7528\u66ff\u4ee3API\uff0c\u56e0\u6b64\u4e0d\u63a8\u8350\u4f7f\u7528\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configuse_application_task_tag","title":"configUSE_APPLICATION_TASK_TAG","text":"<p>\u5c06configUSE_APPLICATION_TASK_TAG\u8bbe\u7f6e\u4e3a1\u5c06\u5305\u62ec\u6784\u5efa\u4e2d\u7684vTaskSetApplicationTaskTag()\u548cxTaskCallApplicationTaskHook() API\u51fd\u6570\u3002\u5c06configUSE_APPLICATION_TASK_TAG\u8bbe\u7f6e\u4e3a0\u5c06\u4ece\u6784\u5efa\u4e2d\u6392\u9664vTaskSetApplicationTaskTag()\u548cxTaskCallApplicationTaskHook() API\u51fd\u6570\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configuse_co_routines","title":"configUSE_CO_ROUTINES","text":"<p>\u534f\u540c\u4f8b\u7a0b\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u4efb\u52a1\uff0c\u901a\u8fc7\u5171\u4eab\u5806\u6808\u6765\u8282\u7701\u5185\u5b58\uff0c\u4f46\u529f\u80fd\u6709\u9650\u3002\u5b83\u4eec\u7684\u4f7f\u7528\u4ece\u672c\u624b\u518c\u4e2d\u7701\u7565\u4e86\u3002</p> <p>\u5c06configUSE_CO_ROUTINES\u8bbe\u7f6e\u4e3a1\u5c06\u5305\u62ec\u6784\u5efa\u4e2d\u6240\u6709\u7684\u534f\u540c\u4f8b\u7a0b\u529f\u80fd\u53ca\u5176\u5173\u8054\u7684API\u51fd\u6570\u3002\u5c06configUSE_CO_ROUTINES\u8bbe\u7f6e\u4e3a0\u5c06\u4ece\u6784\u5efa\u4e2d\u6392\u9664\u6240\u6709\u534f\u540c\u4f8b\u7a0b\u529f\u80fd\u53ca\u5176\u76f8\u5173\u7684API\u51fd\u6570\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configuse_counting_semaphores","title":"configUSE_COUNTING_SEMAPHORES","text":"<p>\u5c06configUSE_COUNTING_SEMAPHORES\u8bbe\u7f6e\u4e3a1\u5c06\u5305\u542b\u8ba1\u6570\u4fe1\u53f7\u91cf\u529f\u80fd\u53ca\u5176\u5728\u6784\u5efa\u4e2d\u7684\u5173\u8054API\u3002\u5c06configUSE_COUNTING_SEMAPHORES\u8bbe\u7f6e\u4e3a0\u5c06\u4ece\u6784\u5efa\u4e2d\u6392\u9664\u8ba1\u6570\u4fe1\u53f7\u91cf\u529f\u80fd\u53ca\u5176\u5173\u8054\u7684API\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configuse_daemon_task_startup_hook","title":"configUSE_DAEMON_TASK_STARTUP_HOOK","text":"<p>\u5982\u679cconfigUSE_TIMERS\u548cconfigUSE_DAEMON_TASK_STARTUP_HOOK\u90fd\u88ab\u8bbe\u7f6e\u4e3a1\uff0c\u90a3\u4e48\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u5b9a\u4e49\u4e00\u4e2a\u94a9\u5b50\u51fd\u6570\uff0c\u5176\u540d\u79f0\u548c\u539f\u578b\u5b8c\u5168\u76f8\u540c\uff0c\u5982\u4e0b\u6240\u793a\u3002\u5f53RTOS\u5b88\u62a4\u8fdb\u7a0b\u4efb\u52a1(\u4e5f\u79f0\u4e3a\u5b9a\u65f6\u5668\u670d\u52a1)\u7b2c\u4e00\u6b21\u6267\u884c\u65f6\uff0c\u94a9\u5b50\u51fd\u6570\u5c06\u88ab\u8c03\u7528\u4e00\u6b21\u3002\u4efb\u4f55\u9700\u8981\u8fd0\u884cRTOS\u7684\u5e94\u7528\u7a0b\u5e8f\u521d\u59cb\u5316\u4ee3\u7801\u90fd\u53ef\u4ee5\u653e\u5728\u94a9\u5b50\u51fd\u6570\u4e2d\u3002</p> <pre><code>void vApplicationDaemonTaskStartupHook( void );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configuse_idle_hook","title":"configUSE_IDLE_HOOK","text":"<p>\u7a7a\u95f2\u4efb\u52a1\u94a9\u5b50\u51fd\u6570\u662f\u4e00\u4e2a\u94a9\u5b50(\u6216\u56de\u8c03)\u51fd\u6570\uff0c\u5982\u679c\u5b9a\u4e49\u548c\u914d\u7f6e\u4e86\u5b83\uff0c\u7a7a\u95f2\u4efb\u52a1\u5c06\u5728\u5176\u5b9e\u73b0\u7684\u6bcf\u6b21\u8fed\u4ee3\u4e2d\u8c03\u7528\u5b83\u3002</p> <p>\u5982\u679cconfigUSE_IDLE_HOOK\u8bbe\u7f6e\u4e3a1\uff0c\u90a3\u4e48\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u5b9a\u4e49\u4e00\u4e2a\u7a7a\u95f2\u4efb\u52a1\u94a9\u5b50\u51fd\u6570\u3002\u5982\u679cconfigUSE_IDLE_HOOK\u88ab\u8bbe\u7f6e\u4e3a0\uff0c\u90a3\u4e48\u7a7a\u95f2\u4efb\u52a1\u94a9\u5b50\u51fd\u6570\u5c06\u4e0d\u4f1a\u88ab\u8c03\u7528\uff0c\u5373\u4f7f\u5df2\u7ecf\u5b9a\u4e49\u4e86\u7a7a\u95f2\u4efb\u52a1\u94a9\u5b50\u51fd\u6570\u3002</p> <p>\u7a7a\u95f2\u4efb\u52a1\u94a9\u5b50\u51fd\u6570\u5fc5\u987b\u5177\u6709\u5982\u4e0b\u6240\u793a\u7684\u540d\u79f0\u548c\u539f\u578b</p> <pre><code>void vApplicationIdleHook( void );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configuse_malloc_failed_hook","title":"configUSE_MALLOC_FAILED_HOOK","text":"<p>\u6bcf\u6b21\u521b\u5efa\u4efb\u52a1\u3001\u961f\u5217\u6216\u4fe1\u53f7\u91cf\u65f6\uff0c\u5185\u6838\u4f7f\u7528\u5bf9pvPortMalloc()\u7684\u8c03\u7528\u4ece\u5806\u4e2d\u5206\u914d\u5185\u5b58\u3002FreeRTOS\u7684\u5b98\u65b9\u4e0b\u8f7d\u5305\u62ec\u4e09\u4e2a\u793a\u4f8b\u5185\u5b58\u5206\u914d\u65b9\u6848\u3002\u8be5\u65b9\u6848\u5206\u522b\u5728heap_1.c\u3001heap_2.c\u548cheap_4.c\u6e90\u6587\u4ef6\u4e2d\u5b9e\u73b0\u3002configUSE_MALLOC_FAILED_HOOK\u4ec5\u5728\u4f7f\u7528\u8fd9\u4e09\u4e2a\u793a\u4f8b\u65b9\u6848\u4e2d\u7684\u4e00\u4e2a\u65f6\u624d\u76f8\u5173\u3002</p> <p>malloc()\u5931\u8d25\u94a9\u5b50\u51fd\u6570\u662f\u4e00\u4e2a\u94a9\u5b50(\u6216\u56de\u8c03\u51fd\u6570)\uff0c\u5982\u679cpvPortMalloc()\u8fd4\u56deNULL\uff0c\u5b83\u5c06\u88ab\u5b9a\u4e49\u548c\u914d\u7f6e\u3002\u53ea\u6709\u5f53\u5269\u4f59\u7684FreeRTOS\u5806\u5185\u5b58\u4e0d\u8db3\u4ee5\u8ba9\u8bf7\u6c42\u7684\u5206\u914d\u6210\u529f\u65f6\uff0c\u624d\u8fd4\u56deNULL\u3002</p> <p>\u5982\u679cconfigUSE_MALLOC_FAILED_HOOK\u8bbe\u7f6e\u4e3a1\uff0c\u90a3\u4e48\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u5b9a\u4e49\u4e00\u4e2amalloc()\u5931\u8d25\u7684\u94a9\u5b50\u51fd\u6570\u3002\u5982\u679cconfigUSE_MALLOC_FAILED_HOOK\u88ab\u8bbe\u7f6e\u4e3a0\uff0c\u90a3\u4e48malloc()\u5931\u8d25\u7684\u94a9\u5b50\u51fd\u6570\u5c06\u4e0d\u4f1a\u88ab\u8c03\u7528\uff0c\u5373\u4f7f\u5df2\u7ecf\u5b9a\u4e49\u4e86\u3002</p> <p>\u5931\u8d25\u7684Malloc()\u94a9\u5b50\u51fd\u6570\u5fc5\u987b\u5177\u6709\u5982\u4e0b\u6240\u793a\u7684\u540d\u79f0\u548c\u539f\u578b\u3002</p> <pre><code>void vApplicationMallocFailedHook( void );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configuse_mutexes","title":"configUSE_MUTEXES","text":"<p>\u5c06configUSE_MUTEXES\u8bbe\u7f6e\u4e3a1\u5c06\u5728\u6784\u5efa\u4e2d\u5305\u542b\u4e92\u65a5\u529f\u80fd\u53ca\u5176\u5173\u8054\u7684API\u3002\u5c06configUSE_MUTEXES\u8bbe\u7f6e\u4e3a0\u5c06\u4ece\u6784\u5efa\u4e2d\u6392\u9664\u4e92\u65a5\u529f\u80fd\u53ca\u5176\u5173\u8054\u7684API\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configuse_newlib_reentrant","title":"configUSE_NEWLIB_REENTRANT","text":"<p>\u5982\u679cconfigUSE_NEWLIB_REENTRANT\u8bbe\u7f6e\u4e3a1\uff0c\u90a3\u4e48\u5c06\u4e3a\u6bcf\u4e2a\u521b\u5efa\u7684\u4efb\u52a1\u5206\u914d\u4e00\u4e2anewlib reent\u7ed3\u6784\u3002</p> <p>\u6ce8\u610f\uff0cNewlib\u652f\u6301\u662f\u6839\u636e\u6d41\u884c\u7684\u9700\u6c42\u800c\u5305\u542b\u7684\uff0c\u4f46FreeRTOS\u7684\u7ef4\u62a4\u8005\u672c\u8eab\u5e76\u4e0d\u4f7f\u7528Newlib\u3002FreeRTOS\u4e0d\u5bf9\u4ea7\u751f\u7684newlib\u64cd\u4f5c\u8d1f\u8d23\u3002\u7528\u6237\u5fc5\u987b\u719f\u6089newlib\uff0c\u5e76\u4e14\u5fc5\u987b\u63d0\u4f9b\u5fc5\u8981\u5b58\u6839\u7684\u7cfb\u7edf\u8303\u56f4\u5b9e\u73b0\u3002\u8bf7\u6ce8\u610f(\u5728\u64b0\u5199\u672c\u6587\u65f6)\u5f53\u524d\u7684newlib\u8bbe\u8ba1\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7cfb\u7edf\u8303\u56f4\u7684malloc()\uff0c\u5b83\u5fc5\u987b\u63d0\u4f9b\u9501\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configuse_port_optimised_task_selection","title":"configUSE_PORT_OPTIMISED_TASK_SELECTION","text":"<p>\u4e00\u4e9bFreeRTOS\u7aef\u53e3\u6709\u4e24\u79cd\u65b9\u6cd5\u6765\u9009\u62e9\u8981\u6267\u884c\u7684\u4e0b\u4e00\u4e2a\u4efb\u52a1\u2014\u4e00\u4e2a\u6cdb\u578b\u65b9\u6cd5\u548c\u4e00\u4e2a\u7279\u5b9a\u4e8e\u8be5\u7aef\u53e3\u7684\u65b9\u6cd5\u3002</p> <p>\u7684\u4e00\u822c\u65b9\u6cd5:</p> <ul> <li> <p>\u5728configUSE_PORT_OPTIMISED_TASK_SELECTION\u88ab\u8bbe\u7f6e\u4e3a0\u6216\u6ca1\u6709\u5b9e\u73b0\u7279\u5b9a\u4e8e\u7aef\u53e3\u7684\u65b9\u6cd5\u65f6\u4f7f\u7528\u3002</p> </li> <li> <p>\u53ef\u7528\u4e8e\u6240\u6709FreeRTOS\u7aef\u53e3\u3002</p> </li> <li> <p>\u5b8c\u5168\u662f\u7528C\u7f16\u5199\u7684\uff0c\u8fd9\u4f7f\u5f97\u5b83\u7684\u6548\u7387\u4f4e\u4e8e\u7279\u5b9a\u4e8e\u7aef\u53e3\u7684\u65b9\u6cd5\u3002</p> </li> <li> <p>\u4e0d\u9650\u5236\u53ef\u7528\u4f18\u5148\u7ea7\u7684\u6700\u5927\u6570\u91cf\u3002</p> </li> </ul> <p>\u7279\u5b9a\u7aef\u53e3\u7684\u65b9\u6cd5:</p> <ul> <li> <p>\u4e0d\u80fd\u7528\u4e8e\u6240\u6709\u7aef\u53e3\u3002</p> </li> <li> <p>\u5728configUSE_PORT_OPTIMISED_TASK_SELECTION\u8bbe\u7f6e\u4e3a1\u65f6\u4f7f\u7528\u3002</p> </li> <li> <p>\u4f9d\u8d56\u4e8e\u4e00\u4e2a\u6216\u591a\u4e2a\u7279\u5b9a\u4e8e\u4f53\u7cfb\u7ed3\u6784\u7684\u6c47\u7f16\u6307\u4ee4(\u901a\u5e38\u662f\u7b49\u6548\u6307\u4ee4\u7684Count Leading Zeros [CLZ])\uff0c\u56e0\u6b64\u53ea\u80fd\u7528\u4e8e\u4e13\u95e8\u4e3a\u5176\u7f16\u5199\u7684\u4f53\u7cfb\u7ed3\u6784\u3002</p> </li> <li> <p>\u6bd4\u6cdb\u578b\u65b9\u6cd5\u66f4\u6709\u6548\u3002</p> </li> <li> <p>\u901a\u5e38\u5bf9\u53ef\u7528\u4f18\u5148\u7ea7\u7684\u6700\u5927\u6570\u91cf\u65bd\u52a032\u4e2a\u9650\u5236\u3002</p> </li> </ul>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configuse_preemption","title":"configUSE_PREEMPTION","text":"<p>\u5c06configUSE_PREEMPTION\u8bbe\u7f6e\u4e3a1\u5c06\u5bfc\u81f4\u4f7f\u7528\u62a2\u5360\u5f0f\u8c03\u5ea6\u7a0b\u5e8f\u3002\u5c06configUSE_PREEMPTION\u8bbe\u7f6e\u4e3a0\u5c06\u5bfc\u81f4\u4f7f\u7528\u5408\u4f5c\u8c03\u5ea6\u7a0b\u5e8f\u3002</p> <p>\u5f53\u4f7f\u7528\u62a2\u5360\u5f0f\u8c03\u5ea6\u7a0b\u5e8f\u65f6\uff0c\u5185\u6838\u5c06\u5728\u6bcf\u6b21tick\u4e2d\u65ad\u671f\u95f4\u6267\u884c\uff0c\u8fd9\u53ef\u80fd\u5bfc\u81f4\u5728tick\u4e2d\u65ad\u4e2d\u53d1\u751f\u4e0a\u4e0b\u6587\u5207\u6362\u3002</p> <p>\u5f53\u4f7f\u7528\u5408\u4f5c\u8c03\u5ea6\u5668\u65f6\uff0c\u4e0a\u4e0b\u6587\u5207\u6362\u53ea\u4f1a\u5728\u4ee5\u4e0b\u60c5\u51b5\u53d1\u751f:</p> <ol> <li> <p>\u4efb\u52a1\u663e\u5f0f\u5730\u8c03\u7528taskYIELD()\u3002</p> </li> <li> <p>\u4efb\u52a1\u663e\u5f0f\u5730\u8c03\u7528API\u51fd\u6570\uff0c\u5bfc\u81f4\u5176\u8fdb\u5165Blocked\u72b6\u6001\u3002</p> </li> <li>\u5e94\u7528\u7a0b\u5e8f\u5b9a\u4e49\u7684\u4e2d\u65ad\u663e\u5f0f\u5730\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u3002</li> </ol>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configuse_queue_sets","title":"configUSE_QUEUE_SETS","text":"<p>\u5c06configUSE_QUEUE_SETS\u8bbe\u7f6e\u4e3a1\u5c06\u5305\u62ec\u961f\u5217\u96c6\u529f\u80fd(\u540c\u65f6\u963b\u585e\u591a\u4e2a\u961f\u5217\u7684\u80fd\u529b)\u53ca\u5176\u5728\u6784\u5efa\u4e2d\u7684\u5173\u8054API\u3002\u5c06configUSE_QUEUE_SETS\u8bbe\u7f6e\u4e3a0\u5c06\u4ece\u6784\u5efa\u4e2d\u6392\u9664\u961f\u5217\u96c6\u529f\u80fd\u53ca\u5176\u5173\u8054\u7684API\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configuse_recursive_mutexes","title":"configUSE_RECURSIVE_MUTEXES","text":"<p>\u5c06configUSE_RECURSIVE_MUTEXES\u8bbe\u7f6e\u4e3a1\u5c06\u5bfc\u81f4\u9012\u5f52\u4e92\u65a5\u529f\u80fd\u53ca\u5176\u5173\u8054\u7684API\u88ab\u5305\u542b\u5728\u6784\u5efa\u4e2d\u3002\u5c06configUSE_RECURSIVE_MUTEXES\u8bbe\u7f6e\u4e3a0\u5c06\u5bfc\u81f4\u9012\u5f52\u4e92\u65a5\u529f\u80fd\u53ca\u5176\u5173\u8054\u7684API\u88ab\u6392\u9664\u5728\u6784\u5efa\u4e2d\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configuse_stats_formatting_functions","title":"configUSE_STATS_FORMATTING_FUNCTIONS","text":"<p>\u5c06configUSE_TRACE_FACILITY\u548cconfigUSE_STATS_FORMATTING_FUNCTIONS\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u5305\u542bvTaskList()\u548cvTaskGetRunTimeStats()\u3002</p> <p>\u6784\u5efa\u4e2d\u7684\u51fd\u6570\u3002\u8bbe\u7f6e\u4e3a0\u5c06\u5728\u6784\u5efa\u4e2d\u7701\u7565vTaskList()\u548cvTaskGetRunTimeStates()\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configuse_task_notifications","title":"configUSE_TASK_NOTIFICATIONS","text":"<p>\u5c06configUSE_TASK_NOTIFICATIONS\u8bbe\u7f6e\u4e3a1(\u6216\u672a\u5b9a\u4e49configUSE_TASK_NOTIFICATIONS)\u5c06\u5305\u62ec\u76f4\u63a5\u5230\u4efb\u52a1\u7684\u901a\u77e5\u529f\u80fd\u53ca\u5176\u5728\u6784\u5efa\u4e2d\u7684\u76f8\u5173API\u3002\u5c06configUSE_TASK_NOTIFICATIONS\u8bbe\u7f6e\u4e3a0\u5c06\u4ece\u6784\u5efa\u4e2d\u6392\u9664\u76f4\u63a5\u6307\u5411\u4efb\u52a1\u7684\u901a\u77e5\u529f\u80fd\u53ca\u5176\u5173\u8054\u7684API\u3002</p> <p>\u5f53\u6784\u5efa\u4e2d\u76f4\u63a5\u5305\u542b\u4efb\u52a1\u901a\u77e5\u65f6\uff0c\u6bcf\u4e2a\u4efb\u52a1\u4f1a\u6d88\u8017\u989d\u5916\u76848\u5b57\u8282RAM\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configuse_tick_hook","title":"configUSE_TICK_HOOK","text":"<p>tick\u94a9\u5b50\u51fd\u6570\u662f\u4e00\u4e2a\u94a9\u5b50(\u6216\u56de\u8c03)\u51fd\u6570\uff0c\u5982\u679c\u5b9a\u4e49\u5e76\u914d\u7f6e\uff0c\u5c06\u5728\u6bcf\u4e2atick\u4e2d\u65ad\u671f\u95f4\u8c03\u7528\u5b83\u3002</p> <p>\u5982\u679cconfigUSE_TICK_HOOK\u88ab\u8bbe\u7f6e\u4e3a1\uff0c\u90a3\u4e48\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u5b9a\u4e49\u4e00\u4e2atick hook\u51fd\u6570\u3002\u5982\u679cconfigUSE_TICK_HOOK\u88ab\u8bbe\u7f6e\u4e3a0\uff0c\u90a3\u4e48tick\u94a9\u5b50\u51fd\u6570\u5c06\u4e0d\u4f1a\u88ab\u8c03\u7528\uff0c\u5373\u4f7f\u5df2\u7ecf\u5b9a\u4e49\u4e86\u4e00\u4e2a\u3002</p> <p>TICK_HOOK\u51fd\u6570\u5fc5\u987b\u5177\u6709\u4e0b\u6587\u6240\u793a\u7684\u540d\u79f0\u548c\u539f\u578b\u3002</p> <pre><code>void vApplicationTickHook( void );\n</code></pre>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configuse_tickless_idle","title":"configUSE_TICKLESS_IDLE","text":"<p>\u5c06configUSE_TICKLESS_IDLE\u8bbe\u7f6e\u4e3a1\u4ee5\u4f7f\u7528\u4f4e\u529f\u8017\u7684\u65e0tick\u6a21\u5f0f\uff0c\u6216\u8bbe\u7f6e\u4e3a0\u4ee5\u4fdd\u6301tick\u4e2d\u65ad\u4e00\u76f4\u8fd0\u884c\u3002\u6ca1\u6709\u4e3a\u6240\u6709FreeRTOS\u7aef\u53e3\u63d0\u4f9b\u4f4e\u529f\u8017\u7684\u65e0tickless\u5b9e\u73b0\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configuse_timers","title":"configUSE_TIMERS","text":"<p>\u5c06configUSE_TIMERS\u8bbe\u7f6e\u4e3a1\u5c06\u5728\u6784\u5efa\u4e2d\u5305\u542b\u8f6f\u4ef6\u8ba1\u65f6\u5668\u529f\u80fd\u53ca\u5176\u76f8\u5173\u7684API\u3002\u5c06configUSE_TIMERS\u8bbe\u7f6e\u4e3a0\u5c06\u4ece\u6784\u5efa\u4e2d\u6392\u9664\u8f6f\u4ef6\u8ba1\u65f6\u5668\u529f\u80fd\u53ca\u5176\u76f8\u5173API\u3002</p> <p>\u5982\u679cconfigUSE_TIMERS\u8bbe\u7f6e\u4e3a1\uff0c\u5219configTIMER_TASK_PRIORITY, configTIMER_QUEUE_LENGTH\u548cconfigTIMER_TASK_STACK_DEPTH\u4e5f\u5fc5\u987b\u5b9a\u4e49\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configuse_time_slicing","title":"configUSE_TIME_SLICING","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b(\u5982\u679cconfigUSE_TIME_SLICING\u6ca1\u6709\u5b9a\u4e49\uff0c\u6216\u8005\u5982\u679cconfigUSE_TIME_SLICING\u88ab\u5b9a\u4e49\u4e3a1)FreeRTOS\u4f7f\u7528\u4f18\u5148\u62a2\u5360\u5f0f\u8c03\u5ea6\u548c\u65f6\u95f4\u5207\u7247\u3002\u8fd9\u610f\u5473\u7740RTOS\u8c03\u5ea6\u7a0b\u5e8f\u5c06\u59cb\u7ec8\u8fd0\u884c\u5904\u4e8e\u5c31\u7eea\u72b6\u6001\u7684\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u4efb\u52a1\uff0c\u5e76\u5c06\u5728\u6bcf\u4e2aRTOS tick\u4e2d\u65ad\u4e0a\u5728\u540c\u7b49\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\u4e4b\u95f4\u5207\u6362\u3002\u5982\u679cconfigUSE_TIME_SLICING\u88ab\u8bbe\u7f6e\u4e3a0\uff0c\u90a3\u4e48RTOS\u8c03\u5ea6\u7a0b\u5e8f\u5c06\u4ecd\u7136\u8fd0\u884c\u5904\u4e8eReady\u72b6\u6001\u7684\u6700\u9ad8\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\uff0c\u4f46\u662f\u4e0d\u4f1a\u56e0\u4e3a\u6267\u884c\u4e86tick\u4e2d\u65ad\u800c\u5728\u540c\u7b49\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\u4e4b\u95f4\u5207\u6362\u3002</p>"},{"location":"_Ref/241205-FreeRTOS_API_Reference_CN_%E5%85%A8%E6%9C%AC/#configuse_trace_facility","title":"configUSE_TRACE_FACILITY","text":"<p>\u5c06configUSE_TRACE_FACILITY\u8bbe\u7f6e\u4e3a1\u5c06\u5bfc\u81f4\u989d\u5916\u7684\u7ed3\u6784\u6210\u5458\u548c\u51fd\u6570\uff0c\u8fd9\u4e9b\u6210\u5458\u548c\u51fd\u6570\u6709\u52a9\u4e8e\u5728\u6784\u5efa\u4e2d\u5305\u542b\u6267\u884c\u53ef\u89c6\u5316\u548c\u8ddf\u8e2a\u3002</p>"},{"location":"_Web/","title":"Index","text":""},{"location":"_Web/#timeline","title":"Timeline","text":"2024-08-23\u00b6 <p>  [ Web ] &gt; HTTPS\u4e0eOpenSSL</p>"},{"location":"_Web/240823-HTTPS%E4%B8%8EOpenSSL/","title":"HTTPS \u4e0e OpenSSL","text":""},{"location":"_Web/240823-HTTPS%E4%B8%8EOpenSSL/#1","title":"1 \u7b80\u4ecb","text":"<p>HTTPS \u7b80\u5355\u6765\u8bb2\u662f HTTPS \u7684\u5b89\u5168\u7248\u3002\u4e5f\u5c31\u662f HTTP \u52a0\u5165\u4e86 SSL \u5c42</p> <p>HTTP for HyperText Transfer Protocol\uff1b</p> <p>S for Secure\uff1b</p> <p>SSL for Secure Sockets Layer\uff1bTLS for Transport Layer Security</p>"},{"location":"_Web/240823-HTTPS%E4%B8%8EOpenSSL/#2","title":"2 \u5bf9\u79f0\u52a0\u5bc6\u3001\u975e\u5bf9\u79f0\u52a0\u5bc6","text":""},{"location":"_Web/240823-HTTPS%E4%B8%8EOpenSSL/#21","title":"2.1 \u975e\u5bf9\u79f0\u52a0\u5bc6","text":"<ul> <li>\u52a0\u5bc6\u548c\u89e3\u5bc6\u4f7f\u7528\u4e0d\u540c\u7684\u5bc6\u94a5\uff0c\u79c1\u94a5\u52a0\u5bc6\u516c\u94a5\u53ef\u89e3\uff0c\u516c\u94a5\u52a0\u5bc6\u79c1\u94a5\u53ef\u89e3</li> <li>\u79c1\u94a5\u7531\u7528\u6237\u81ea\u5df1\u62e5\u6709\uff0c\u516c\u94a5\u516c\u5f00\u914d\u9001</li> </ul> <p>\u4f46\u662f\u975e\u5bf9\u79f0\u52a0\u5bc6\u4f1a\u6709\u5982\u4e0b\u98ce\u9669\uff1a</p> <p>\u653b\u51fb\u8005\u53ef\u80fd\u4f1a\u5148\u4e00\u6b65\u4e0e A \u548c B \u5efa\u7acb\u8054\u7cfb\uff0c\u4ece\u800c\u51fa\u73b0\u7be1\u6539\u7684\u53ef\u80fd</p> <p>\u56e0\u6b64\u51fa\u73b0\u4e86\u8bc1\u4e66\u6388\u6743\u673a\u6784\uff0c\u4e5f\u5c31\u662f CA\uff08Certificate Authority\uff09</p> <ol> <li>CA \u7528\u81ea\u5df1\u7684\u79c1\u94a5\u751f\u6210\u4e00\u4e2a\u81ea\u7b7e\u540d\u7684\u8bc1\u4e66</li> <li>B \u5411 CA \u53d1\u8d77\u8bf7\u6c42\uff0cCA \u7528\u81ea\u7b7e\u540d\u8bc1\u4e66\u4ee5\u53ca B \u7684\u79c1\u94a5\u4e3a\u5176\u7b7e\u53d1\u8bc1\u4e66\uff0c\u8bc1\u4e66\u4e2d\u5305\u542b B \u7684\u516c\u94a5\u4fe1\u606f</li> <li>B \u628a\u81ea\u5df1\u7684\u8bc1\u4e66\u53d1\u9001\u7ed9 A\uff0c\u540c\u65f6\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u7b7e\u540d\u4e86\u4e00\u4e9b\u4e1c\u897f\u4e5f\u53d1\u4e86\u8fc7\u53bb\uff0cA \u62ff\u7740 CA \u7684\u8bc1\u4e66\u9a8c\u8bc1 B \u8bc1\u4e66\uff0c\u5982\u679c\u9a8c\u8bc1\u6ca1\u6709\u95ee\u9898\uff0c\u5c31\u4ece\u8bc1\u4e66\u4e2d\u62ff\u5230 B \u7684\u516c\u94a5\uff0c\u7136\u540e\u62ff\u8fd9\u4e2a\u516c\u94a5\u5bf9\u6536\u5230\u7684\u6570\u636e\u9a8c\u8bc1\u7b7e\u540d\u786e\u5b9a\u8eab\u4efd</li> <li>\u6700\u540e A \u5c31\u53ef\u4ee5\u7528\u8fd9\u4e2a\u516c\u94a5\u548c B \u901a\u4fe1\u4e86</li> </ol> <p>\u6765\u81ea\u77e5\u4e4e\uff1a https://zhuanlan.zhihu.com/p/456089100</p>"},{"location":"_Web/240823-HTTPS%E4%B8%8EOpenSSL/#3-https","title":"3 HTTPS \u7684\u8eab\u4efd\u9a8c\u8bc1","text":"<p>HTTPS \u534f\u8bae\u4e2d\u7684\u8eab\u4efd\u9a8c\u8bc1\u90e8\u5206\u662f\u7531\u6570\u5b57\u8bc1\u4e66\u6765\u5b8c\u6210\u7684\uff0c\u8bc1\u4e66\u6709\u5982\u4e0b\u5185\u5bb9\u7ec4\u6210\uff1a</p> <ul> <li>\u516c\u94a5</li> <li>\u8bc1\u4e66\u4e3b\u4f53</li> <li>\u6570\u5b57\u7b7e\u540d\u7b49\u5185\u5bb9</li> </ul> <p>\u7528\u6237\u5728\u8bbf\u95ee\u4f7f\u7528\u4e86 SSL \u7684\u7f51\u7ad9\u4e4b\u540e\u4f1a\u5411\u670d\u52a1\u5668\u53d1\u8d77 SSL \u8bf7\u6c42\u3002\u4e4b\u540e\uff0c\u670d\u52a1\u5668\u4f1a\u5c06\u6570\u5b57\u8bc1\u4e66\u7ed9\u5ba2\u6237\u7aef\uff0c\u5ba2\u6237\u7aef\u5bf9\u6570\u5b57\u8bc1\u4e66\u8fdb\u884c\u9a8c\u8bc1\uff0c\u9a8c\u8bc1\u901a\u8fc7\u540e\u4f1a\u751f\u6210\u4e00\u4e2a\u7528\u4e8e\u5bc6\u94a5\u4ea4\u6362\u7684\u5bf9\u79f0\u5bc6\u94a5\u3002\u7528\u4e8e\u672c\u6b21\u901a\u8bdd\u7684\u52a0\u5bc6\u901a\u4fe1\u3002</p> <p>\u968f\u540e\u5ba2\u6237\u7aef\u4f1a\u4f7f\u7528\u670d\u52a1\u5668\u63d0\u4f9b\u7684\u516c\u94a5\u5bf9\u751f\u6210\u7684\u5bc6\u94a5\u8fdb\u884c\u52a0\u5bc6\uff0c\u518d\u53d1\u9001\u56de\u670d\u52a1\u5668\u3002</p> <p>\u670d\u52a1\u5668\u4f7f\u7528\u79c1\u94a5\u89e3\u5bc6\u6536\u5230\u7684\u52a0\u5bc6\u4fe1\u606f\uff0c\u5f97\u5230\u5bf9\u79f0\u52a0\u5bc6\u5bc6\u94a5\u3002</p> <p>\u81f3\u6b64\uff0c\u5f80\u540e\u7684\u4f1a\u8bdd\u5c31\u4f1a\u4f7f\u7528\u5bf9\u79f0\u7684\u5bc6\u94a5\u8fdb\u884c\u52a0\u89e3\u5bc6\uff0c\u5e76\u5728\u5bf9\u8bdd\u7ed3\u675f\u540e\u9500\u6bc1\u5bf9\u79f0\u5bc6\u94a5\u3002</p>"},{"location":"_Web/240823-HTTPS%E4%B8%8EOpenSSL/#4-openssl","title":"4 OpenSSL \u5b9e\u8df5","text":"<pre><code>pip install conan\n</code></pre> <p>\u5982\u679c\u8981\u81ea\u7f16\u8bd1\u7684\u8bdd windows \u73af\u5883\u4e0b\u5b98\u65b9\u63a8\u8350\u7528 conan \u6765\u8fdb\u884c\u4e0b\u8f7d\u3002</p> <p>conan\uff1a\u4e00\u4e2a c/c++\u7684\u5305\u7ba1\u7406\u5de5\u5177\uff0c\u7528 python \u5199\u7684</p> <p>\u8fd9\u91cc\u53ef\u4ee5\u76f4\u63a5\u4e0b\u522b\u4eba\u7f16\u8bd1\u597d\u7684\u5b89\u88c5\u5305</p> <p>openssl \u7684\u4e00\u4e9b\u540d\u8bcd\u89e3\u91ca\uff1a</p> <ul> <li>pem \u548c der\uff1a\u4e24\u79cd\u683c\u5f0f\uff08\u5305\u62ec\u516c\u79c1\u94a5\u3001\u8bc1\u4e66\u7b7e\u540d\u8bf7\u6c42\u3001\u8bc1\u4e66\u7b49\u5185\u5bb9\uff09\uff0c\u524d\u8005\u662f\u6587\u672c\u5f62\u5f0f\uff0clinux \u5e38\u7528\uff0c\u540e\u8005\u662f\u4e8c\u8fdb\u5236\u5f62\u5f0f\uff0cwindows \u5e38\u7528\uff0c\u4ec5\u4ec5\u662f\u683c\u5f0f\uff0c\u4e0d\u8868\u660e\u5185\u5bb9\uff0c\u5982\u679c\u4f5c\u4e3a\u540e\u7f00\u5c31\u50cf html \u8d77\u7684\u6548\u679c\u4e00\u6837\u3002\u6709\u65f6\u5019\u7528 pem \u505a\u516c\u94a5\u7684\u540e\u7f00</li> <li>x509\uff1a\u8bc1\u4e66\u6807\u51c6</li> <li>crt \u548c cer\uff1a\u5e38\u89c1\u7684\u4e24\u79cd\u8bc1\u4e66\u540e\u7f00\u540d\uff0c\u524d\u8005\u5927\u591a\u6570\u60c5\u51b5\u4e3a pem \u683c\u5f0f\uff0c\u540e\u8005\u5927\u591a\u6570\u60c5\u51b5\u4e3a der \u683c\u5f0f</li> <li>csr\uff1a\u8bc1\u4e66\u7b7e\u540d\u8bf7\u6c42\uff0c\u5305\u542b\u4e86\u516c\u94a5\u3001\u7528\u6237\u540d\u7b49\u4fe1\u606f (Certificate Sign Request)</li> <li>key\uff1a\u5e38\u89c1\u7684\u79c1\u94a5\u7684\u540e\u7f00\u540d</li> </ul> <p>\u6765\u81ea\u77e5\u4e4e\uff1a https://zhuanlan.zhihu.com/p/456089100</p>"},{"location":"_Web/240823-HTTPS%E4%B8%8EOpenSSL/#41-openssl-ssl","title":"4.1 \u4f7f\u7528 OpenSSL \u521b\u5efa\u81ea\u7b7e\u540d\u7684 SSL \u8bc1\u4e66\u548c\u79c1\u94a5","text":"<p>\u9996\u5148\u5bf9\u4e8e\u81ea\u7b7e\u540d CA \u89d2\u8272\u6765\u8bf4\uff0c\u9700\u8981\u751f\u6210\u4e00\u5bf9\u516c\u79c1\u94a5\u4ee5\u53ca\u81ea\u7b7e\u540d\u8bc1\u4e66\uff1a</p> <pre><code># genrsa    \u751f\u6210RSA\u79c1\u94a5\n# -des3 des3\u7b97\u6cd5\uff08\u53ef\u9009\uff09\n# -out ca.key \u751f\u6210\u7684\u79c1\u94a5\u6587\u4ef6\u540d\n# 2048 \u79c1\u94a5\u957f\u5ea6\n\nopenssl genrsa -out ca.key 2048\n# \u8f93\u5165\u4e00\u4e2a4\u4f4d\u4ee5\u4e0a\u7684\u5bc6\u7801\u3002\n\n# rsa \u6307\u5b9a\u64cd\u4f5c\u7c7b\u578b\u4e3aRSA\u79c1\u94a5\n# -in \u6307\u5b9a\u8f93\u5165.key\u6587\u4ef6\n# -outform PEM \u6307\u5b9a\u8f93\u5165\u683c\u5f0f\u4e3aPEM\n# -puout ca_public.key \u6307\u5b9a\u8f93\u51fa\u7684\u516c\u94a5\u6587\u4ef6\u540d\u4e3aca_public.key\nopenssl rsa -in ca.key -outform PEM -puout ca_public.key\n\n# req \u8bf7\u6c42\u8bc1\u4e66\n# -new \u751f\u6210\u4e00\u4e2a\u65b0\u7684\u8bc1\u4e66\u8bf7\u6c42\uff08csr\uff09\n# -key ca.key \u6307\u5b9a\u7528\u4e8e\u7b7e\u540dcsr\u7684\u79c1\u94a5\u6587\u4ef6\n# -out ca.csr \u6307\u5b9a\u751f\u6210\u7684csr\u6587\u4ef6\u540d\n# -subj \u6307\u5b9acsr\u7684\u4e3b\u9898\u4fe1\u606f\uff0c\u683c\u5f0f\u4e3a\u00a0`/\u7ec4\u4ef6=\u503c/`\uff0c\u5176\u4e2d\u00a0`C`\u00a0\u4ee3\u8868\u56fd\u5bb6\u4ee3\u7801\uff0c`ST`\u00a0\u4ee3\u8868\u5dde\u6216\u7701\u4efd\uff0c`L`\u00a0\u4ee3\u8868\u57ce\u5e02\uff0c`O`\u00a0\u4ee3\u8868\u7ec4\u7ec7\u540d\u79f0\uff0c`OU`\u00a0\u4ee3\u8868\u7ec4\u7ec7\u5355\u4f4d\uff0c`CN`\u00a0\u4ee3\u8868\u901a\u7528\u540d\u79f0\uff0c\u901a\u5e38\u662f\u57df\u540d\u6216\u4e3b\u673a\u540d\u3002\nopenssl req -new -key ca.key -out ca.csr -subj \"/C=CN/ST=Guangdong/L=Shenzhen/O=Company/OU=IT/CN=test.com/\"\n# csr\u8fd9\u4e00\u6b65\u53ef\u4ee5\u4f7f\u7528\u4ea4\u4e92\u5f0f\u8f93\u5165\n# \u56fd\u5bb6/\u7701/\u57ce\u5e02/\u7ec4\u7ec7/\u90e8\u95e8/\u540d\u79f0/\u5176\u4ed6\u53ef\u9009\u503c\n\n# x509 \u6307\u5b9a\u5904\u7406X.509\u8bc1\u4e66\n# -req \u6307\u5b9a\u8f93\u5165\u7684\u6587\u4ef6\u4e3acsr\n# -days 365 \u6307\u5b9a\u7b7e\u53d1\u8bc1\u4e66\u7684\u6709\u6548\u671f\u4e3a365\u5929\n# -in ca.csr \u6307\u5b9a\u8f93\u5165\u7684csr\u6587\u4ef6\n# -signkey ca.key \u6307\u5b9a\u7528\u4e8e\u7b7e\u540d\u8bc1\u4e66\u7684\u79c1\u94a5\u6587\u4ef6\n# -out ca.crt \u6307\u5b9a\u751f\u6210\u7684\u8bc1\u4e66\u540d\nopenssl x509 -req -days 365 -in ca.csr -signkey ca.key -out ca.crt\n</code></pre> <p>\u4e0a\u8ff0\u6307\u4ee4\u6d41\u521b\u5efa\u4e86\u4e00\u5bf9\u516c\u79c1\u94a5\uff0c\u5e76\u751f\u6210\u81ea\u7b7e\u540d\u8bc1\u4e66\uff0c\u8be6\u7ec6\u89e3\u91ca\u89c1\u6ce8\u91ca\u3002\u4e8e\u662f\u5f97\u5230\uff1a</p> <ul> <li>\u81ea\u7b7e\u540d\u8bc1\u4e66\uff1a<code>ca.crt</code></li> <li>\u516c\u94a5\uff1a<code>ca_public.key</code></li> <li>\u79c1\u94a5\uff1a<code>ca.key</code></li> </ul> <p>\u4ece\u8bc1\u4e66\u4e2d\u53ef\u4ee5\u83b7\u5f97\u516c\u94a5\uff1a</p> <pre><code># x509\uff1a\u6307\u5b9a\u64cd\u4f5c\u7c7b\u578b\u4e3a X.509 \u8bc1\u4e66\n# -pubkey\uff1a\u6307\u5b9a\u63d0\u53d6\u8bc1\u4e66\u4e2d\u7684\u516c\u94a5\n# -noout\uff1a\u4e0d\u8f93\u51fa\u8bc1\u4e66\u7684\u5b8c\u6574\u5185\u5bb9\n# -in ca.crt\uff1a\u6307\u5b9a\u8f93\u5165\u7684\u8bc1\u4e66\u6587\u4ef6\n# &gt; pub.key\uff1a\u5c06\u63d0\u53d6\u7684\u516c\u94a5\u91cd\u5b9a\u5411\u5230 pub.key \u6587\u4ef6\nopenssl x509 -pubkey -noout -in ca.crt &gt; pub.key\n\n# diff\uff1a\u662f\u4e00\u4e2a\u6bd4\u8f83\u6587\u4ef6\u5dee\u5f02\u7684\u547d\u4ee4\n# pub.key\uff1a\u7b2c\u4e00\u4e2a\u8981\u6bd4\u8f83\u7684\u6587\u4ef6\n# ca_public.key\uff1a\u7b2c\u4e8c\u4e2a\u8981\u6bd4\u8f83\u7684\u6587\u4ef6\ndiff pub.key ca_public.key\n</code></pre> <p>\u81f3\u6b64\u5df2\u7ecf\u5b8c\u6210\u4e86\u751f\u6210\u8bc1\u4e66\u5e76\u9a8c\u8bc1\u7684\u5168\u90e8\u6d41\u7a0b\uff0c\u73b0\u5728\u4e5f\u53ef\u4ee5\u7ee7\u7eed\u7528\u8be5\u8bc1\u4e66\u5bf9\u5176\u4ed6\u751f\u6210\u7684\u79c1\u94a5\u8fdb\u884c\u7b7e\u540d\u8bc1\u4e66\uff0c\u540c\u6837\u4e5f\u53ef\u4ee5\u4ece\u7b7e\u540d\u51fa\u7684\u8bc1\u4e66\u83b7\u5f97\u516c\u94a5\uff1a</p> <pre><code>openssl genrsa -out server_private.key 2048\nopenssl rsa -in server_private.key -outform PEM -pubout -out server_public.key\nopenssl req -new -key server_private.key -out server.csr -subj \"/C=CN/ST=Guangdong/L=Shenzhen/O=Company/OU=IT/CN=test2.com/\"\nopenssl x509 -req -CA ca.crt -CAkey ca.key -CAcreateserial -in server.csr -out server.crt\n</code></pre>"}]}